<UserControl
    x:Class="FC.Updater.View.Components.Terminal.TerminalUserControl"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:core="clr-namespace:System;assembly=mscorlib"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:model="clr-namespace:FC.Domain.Model;assembly=FC.Domain"
    xmlns:p="clr-namespace:FC.Domain.Properties;assembly=FC.Domain"
    xmlns:terminal="clr-namespace:FC.Updater.View.Components.Terminal"
    xmlns:validator="clr-namespace:FC.Domain.Validator;assembly=FC.Domain"
    d:DesignHeight="450"
    d:DesignWidth="800"
    Background="Transparent"
    DataContext="{Binding Terminal, Source={StaticResource Locator}}"
    mc:Ignorable="d">
    <UserControl.Resources>
        <ObjectDataProvider
            x:Key="enumType"
            MethodName="GetValues"
            ObjectType="{x:Type core:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type Type="model:ProtocolTypeEnum" />
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
    </UserControl.Resources>
    <UserControl.Style>
        <Style TargetType="{x:Type UserControl}">
            <Setter Property="IsEnabled" Value="True" />
            <Style.Triggers>
                <DataTrigger Binding="{Binding IsSendingToGateway, UpdateSourceTrigger=PropertyChanged}" Value="True">
                    <Setter Property="IsEnabled" Value="False" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </UserControl.Style>
    <materialDesign:DialogHost
        Margin="0"
        Padding="0"
        DialogContent="{Binding DialogContent}"
        FocusVisualStyle="{x:Null}"
        IsOpen="{Binding IsOpenDialogHost}">
        <Grid>
            <Border
                VerticalAlignment="Stretch"
                Background="{StaticResource TundoraBillson}"
                CornerRadius="2">
                <Border.Effect>
                    <DropShadowEffect BlurRadius="4" ShadowDepth="0" />
                </Border.Effect>
            </Border>
            <Border
                VerticalAlignment="Stretch"
                Background="{StaticResource TundoraBillson}"
                CornerRadius="2">
                <Grid
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Stretch"
                    FocusVisualStyle="{x:Null}">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                        <RowDefinition Height="20" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="340" />
                    </Grid.ColumnDefinitions>
                    <TextBlock
                        Grid.Row="0"
                        Grid.Column="0"
                        Margin="10,10,0,8"
                        HorizontalAlignment="Left"
                        Foreground="{StaticResource MaterialDesignDarkForeground}"
                        Style="{StaticResource MaterialDesignBody2TextBlock}"
                        Text="{x:Static p:Resources.Commands_Sent}" />
                    <Border
                        Grid.Row="1"
                        Grid.Column="0"
                        Margin="4"
                        BorderBrush="{StaticResource BigStoneBillson}"
                        BorderThickness="2">
                        <Border.Effect>
                            <DropShadowEffect BlurRadius="4" ShadowDepth="0" />
                        </Border.Effect>
                    </Border>
                    <Border
                        Grid.Row="1"
                        Grid.Column="0"
                        Margin="4"
                        BorderBrush="{StaticResource BigStoneBillson}"
                        BorderThickness="2">
                        <DataGrid
                            x:Name="DataGrid"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            materialDesign:ShadowAssist.Darken="True"
                            materialDesign:ShadowAssist.ShadowDepth="Depth1"
                            materialDesign:ShadowAssist.ShadowEdges="All"
                            materialDesign:ThemeAssist.Theme="Dark"
                            AutoGenerateColumns="False"
                            CanUserAddRows="false"
                            FocusVisualStyle="{x:Null}"
                            IsReadOnly="True"
                            ItemsSource="{Binding CommandsSent}"
                            SelectedIndex="{Binding SelectedIndexCommand, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                            SelectionMode="Single"
                            Style="{StaticResource MaterialDesignDataGrid}">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="SelectionChanged">
                                    <i:InvokeCommandAction Command="{Binding SelectionChangedCommand}" CommandParameter="{Binding ElementName=DataGrid, Path=SelectedItem, UpdateSourceTrigger=PropertyChanged}" />
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                            <DataGrid.Resources>
                                <Style TargetType="{x:Type DataGridColumnHeadersPresenter}">
                                    <Setter Property="FontSize" Value="10" />
                                </Style>
                            </DataGrid.Resources>
                            <DataGrid.Columns>
                                <DataGridTextColumn
                                    Binding="{Binding IPTarget}"
                                    FontSize="11"
                                    Header="{x:Static p:Resources.Sent_to_IP}" />
                                <DataGridTextColumn
                                    Binding="{Binding IP}"
                                    FontSize="11"
                                    Header="{x:Static p:Resources.Received_by_IP}" />
                                <DataGridTextColumn
                                    Binding="{Binding Port}"
                                    FontSize="11"
                                    Header="{x:Static p:Resources.Port}" />
                                <DataGridTextColumn
                                    Binding="{Binding ProtocolType}"
                                    FontSize="11"
                                    Header="{x:Static p:Resources.Protocol}" />
                                <DataGridTextColumn
                                    Binding="{Binding ConnectionType}"
                                    FontSize="11"
                                    Header="{x:Static p:Resources.Connection_type}" />
                                <DataGridTextColumn
                                    Binding="{Binding StartDateTime, Converter={StaticResource dateToHours}}"
                                    FontSize="11"
                                    Header="{x:Static p:Resources.Schedule}" />
                                <DataGridTextColumn
                                    Binding="{Binding ResponseTime}"
                                    FontSize="11"
                                    Header="{x:Static p:Resources.Response_time}" />
                                <DataGridTemplateColumn Width="*" Header="{x:Static p:Resources.Sent}">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Send}" TextTrimming="CharacterEllipsis" />
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                                <DataGridTemplateColumn Width="*" Header="{x:Static p:Resources.Received}">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Receive}" TextTrimming="CharacterEllipsis">
                                                <TextBlock.Style>
                                                    <Style TargetType="{x:Type TextBlock}">
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding Receive}" Value="{x:Static p:Resources.No_reply}">
                                                                <Setter Property="Foreground" Value="Red" />
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </TextBlock.Style>
                                            </TextBlock>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                                <DataGridTextColumn
                                    Binding="{Binding Receive.Length}"
                                    FontSize="11"
                                    Header="{x:Static p:Resources.Response_size}" />
                            </DataGrid.Columns>
                            <DataGrid.ContextMenu>
                                <ContextMenu>
                                    <MenuItem Command="{Binding CopyCommand}" Header="{x:Static p:Resources._Copy}" />
                                    <MenuItem Command="{Binding DeleteRowCommand}" Header="{x:Static p:Resources._Delete}" />
                                </ContextMenu>
                            </DataGrid.ContextMenu>
                            <DataGrid.CellStyle>
                                <Style BasedOn="{StaticResource MaterialDesignDataGridCell}" TargetType="{x:Type DataGridCell}">
                                    <Setter Property="Background" Value="{StaticResource BigStoneBillson}" />
                                </Style>
                            </DataGrid.CellStyle>
                            <DataGrid.RowDetailsTemplate>
                                <DataTemplate>
                                    <Border
                                        Margin="2"
                                        Padding="10"
                                        Background="{StaticResource ChathamsBlueBillson}"
                                        FocusVisualStyle="{x:Null}">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="MouseLeftButtonDown">
                                                <i:InvokeCommandAction Command="{Binding ElementName=DataGrid, Path=DataContext.MouseLeftButtonDownDataGridCommand}" CommandParameter="{Binding Path=.}" />
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                        <Grid Margin="0" FocusVisualStyle="{x:Null}">
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto" />
                                                <RowDefinition Height="Auto" />
                                                <RowDefinition Height="Auto" />
                                            </Grid.RowDefinitions>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto" />
                                                <ColumnDefinition Width="Auto" />
                                                <ColumnDefinition Width="*" />
                                                <ColumnDefinition Width="Auto" />
                                                <ColumnDefinition Width="Auto" />
                                            </Grid.ColumnDefinitions>
                                            <materialDesign:PackIcon
                                                Grid.Row="0"
                                                Grid.Column="0"
                                                Margin="2,0,2,0"
                                                VerticalAlignment="Top"
                                                FontSize="11"
                                                Kind="CallMade" />
                                            <TextBlock
                                                Grid.Row="0"
                                                Grid.Column="1"
                                                VerticalAlignment="Top"
                                                FontSize="11"
                                                Style="{StaticResource MaterialDesignBody2TextBlock}"
                                                Text="{x:Static p:Resources.Send}" />
                                            <TextBlock
                                                Grid.Row="0"
                                                Grid.Column="2"
                                                VerticalAlignment="Top"
                                                FontSize="11"
                                                Text="{Binding Send}"
                                                TextTrimming="CharacterEllipsis" />
                                            <materialDesign:PackIcon
                                                Grid.Row="1"
                                                Grid.Column="0"
                                                Margin="2,0,2,0"
                                                VerticalAlignment="Top"
                                                FontSize="11"
                                                Kind="CallReceived" />
                                            <TextBlock
                                                Grid.Row="1"
                                                Grid.Column="1"
                                                Margin="0,0,8,0"
                                                VerticalAlignment="Top"
                                                FontSize="11"
                                                Style="{StaticResource MaterialDesignBody2TextBlock}"
                                                Text="{x:Static p:Resources.Receive}" />
                                            <TextBlock
                                                Grid.Row="1"
                                                Grid.Column="2"
                                                VerticalAlignment="Top"
                                                FontSize="11"
                                                Text="{Binding Receive}"
                                                TextTrimming="CharacterEllipsis" />
                                            <Button
                                                Grid.Row="2"
                                                Grid.Column="0"
                                                Grid.ColumnSpan="3"
                                                Margin="0,8,0,0"
                                                HorizontalAlignment="Left"
                                                Background="{StaticResource BigStoneBillson}"
                                                BorderBrush="{StaticResource BigStoneBillson}"
                                                Command="{Binding ElementName=DataGrid, Path=DataContext.ResendCommand}"
                                                CommandParameter="{Binding Path=.}"
                                                Content="{x:Static p:Resources.Resend}"
                                                FocusVisualStyle="{x:Null}" />
                                        </Grid>
                                    </Border>
                                </DataTemplate>
                            </DataGrid.RowDetailsTemplate>
                        </DataGrid>
                    </Border>
                    <Grid
                        Grid.Row="0"
                        Grid.Column="2"
                        Margin="0,10,8,0"
                        HorizontalAlignment="Right"
                        VerticalAlignment="Top">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <TextBlock
                            Grid.Column="0"
                            Margin="8,0,0,4"
                            VerticalAlignment="Center"
                            FontSize="11"
                            Foreground="{StaticResource MaterialDesignDarkForeground}"
                            Text="{x:Static p:Resources.Auto_complete}"
                            Typography.Capitals="AllSmallCaps" />
                        <terminal:TerminalAutoCompleteUserControl
                            Grid.Row="0"
                            Grid.Column="1"
                            Margin="4,0,4,2" />
                        <TextBlock
                            Grid.Column="2"
                            Margin="16,0,0,4"
                            VerticalAlignment="Center"
                            FontSize="11"
                            Foreground="{StaticResource MaterialDesignDarkForeground}"
                            Text="{x:Static p:Resources.Autoscroll}"
                            Typography.Capitals="AllSmallCaps" />
                        <terminal:TerminalAutoScrollUserControl
                            Grid.Column="3"
                            Margin="4,0,4,2"
                            VerticalAlignment="Center" />
                    </Grid>
                    <Border
                        Grid.Row="1"
                        Grid.Column="1"
                        Margin="4"
                        Background="{StaticResource TundoraBillson}"
                        BorderBrush="{StaticResource BigStoneBillson}"
                        BorderThickness="2"
                        FocusVisualStyle="{x:Null}">
                        <Border.Effect>
                            <DropShadowEffect BlurRadius="4" ShadowDepth="0" />
                        </Border.Effect>
                    </Border>
                    <Border
                        Grid.Row="1"
                        Grid.Column="1"
                        Margin="4"
                        Background="{StaticResource TundoraBillson}"
                        BorderBrush="{StaticResource BigStoneBillson}"
                        BorderThickness="2"
                        FocusVisualStyle="{x:Null}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <TextBox
                                Name="TxtCommand"
                                Grid.Row="0"
                                Grid.Column="0"
                                Grid.ColumnSpan="4"
                                Height="100"
                                Margin="8,8,8,16"
                                materialDesign:TextFieldAssist.CharacterCounterVisibility="Visible"
                                materialDesign:TextFieldAssist.HasClearButton="True"
                                materialDesign:ValidationAssist.Background="{StaticResource TundoraBillson}"
                                materialDesign:ValidationAssist.OnlyShowOnFocus="True"
                                AcceptsReturn="True"
                                Background="{StaticResource MaterialDesignBodyLight}"
                                Foreground="White"
                                Style="{StaticResource MaterialDesignOutlinedTextBox}"
                                TextWrapping="Wrap"
                                VerticalScrollBarVisibility="Auto">
                                <TextBox.InputBindings>
                                    <KeyBinding Key="Return" Command="{Binding SendCommand}" />
                                    <KeyBinding Key="Enter" Command="{Binding SendCommand}" />
                                </TextBox.InputBindings>
                                <TextBox.Text>
                                    <Binding
                                        Mode="TwoWay"
                                        Path="SelectedCommandSend"
                                        UpdateSourceTrigger="PropertyChanged">
                                        <Binding.ValidationRules>
                                            <validator:CommandValidationRule />
                                        </Binding.ValidationRules>
                                    </Binding>
                                </TextBox.Text>
                            </TextBox>
                            <Button
                                x:Name="BtnCommand"
                                Grid.Row="1"
                                Grid.RowSpan="2"
                                Grid.Column="3"
                                Height="86"
                                Margin="0,8,8,0"
                                HorizontalAlignment="Right"
                                VerticalAlignment="Top"
                                materialDesign:ButtonProgressAssist.IsIndeterminate="{Binding IsSendingToGateway}"
                                materialDesign:ButtonProgressAssist.IsIndicatorVisible="{Binding IsSendingToGateway}"
                                materialDesign:ButtonProgressAssist.Value="-1"
                                Command="{Binding SendCommand}"
                                Content="{x:Static p:Resources._Send}"
                                FocusVisualStyle="{x:Null}">
                                <Button.Style>
                                    <Style BasedOn="{StaticResource MaterialDesignRaisedButton}" TargetType="Button">
                                        <Setter Property="IsEnabled" Value="False" />
                                        <Style.Triggers>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding Path=(Validation.HasError), UpdateSourceTrigger=PropertyChanged, ElementName=TxtIp}" Value="False" />
                                                    <Condition Binding="{Binding Path=(Validation.HasError), UpdateSourceTrigger=PropertyChanged, ElementName=TxtTcpPort}" Value="False" />
                                                    <Condition Binding="{Binding Path=(Validation.HasError), UpdateSourceTrigger=PropertyChanged, ElementName=TxtCommand}" Value="False" />
                                                    <Condition Binding="{Binding Path=(Validation.HasError), UpdateSourceTrigger=PropertyChanged, ElementName=CbTimeout}" Value="False" />
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="IsEnabled" Value="True" />
                                            </MultiDataTrigger>
                                            <DataTrigger Binding="{Binding ElementName=TxtCommand, Path=Text.Count, UpdateSourceTrigger=PropertyChanged}" Value="0">
                                                <Setter Property="IsEnabled" Value="False" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Path=IsSendingToGateway, UpdateSourceTrigger=PropertyChanged}" Value="True">
                                                <Setter Property="IsEnabled" Value="False" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Button.Style>
                            </Button>
                            <TextBox
                                x:Name="TxtIp"
                                Grid.Row="1"
                                Width="120"
                                Margin="8,0,0,0"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Top"
                                materialDesign:HintAssist.FloatingScale="0.90"
                                materialDesign:HintAssist.Hint="IP"
                                materialDesign:TextFieldAssist.CharacterCounterVisibility="Collapsed"
                                materialDesign:TextFieldAssist.TextBoxViewMargin="1 0 1 0"
                                materialDesign:ValidationAssist.Background="{StaticResource TundoraBillson}"
                                materialDesign:ValidationAssist.OnlyShowOnFocus="True"
                                materialDesign:ValidationAssist.PopupPlacement="Bottom"
                                materialDesign:ValidationAssist.UsePopup="True"
                                Foreground="{StaticResource MaterialDesignDarkForeground}"
                                MaxLength="15"
                                Style="{StaticResource MaterialDesignFilledTextBox}">
                                <TextBox.Text>
                                    <Binding
                                        Mode="TwoWay"
                                        Path="SelectedCommandIP"
                                        UpdateSourceTrigger="PropertyChanged"
                                        ValidatesOnDataErrors="True">
                                        <Binding.ValidationRules>
                                            <validator:RegexValidateRule
                                                Expression="^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$"
                                                TextError="IP invalid"
                                                ValidatesOnTargetUpdated="True" />
                                        </Binding.ValidationRules>
                                    </Binding>
                                </TextBox.Text>
                            </TextBox>
                            <TextBox
                                x:Name="TxtTcpPort"
                                Grid.Row="1"
                                Grid.Column="1"
                                Width="84"
                                Margin="16,0"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Top"
                                materialDesign:HintAssist.FloatingScale="0.90"
                                materialDesign:HintAssist.Hint="{x:Static p:Resources.Port}"
                                materialDesign:TextFieldAssist.CharacterCounterVisibility="Collapsed"
                                materialDesign:TextFieldAssist.TextBoxViewMargin="1 0 1 0"
                                materialDesign:ValidationAssist.Background="{StaticResource TundoraBillson}"
                                materialDesign:ValidationAssist.OnlyShowOnFocus="True"
                                materialDesign:ValidationAssist.PopupPlacement="Bottom"
                                materialDesign:ValidationAssist.UsePopup="True"
                                Foreground="{StaticResource MaterialDesignDarkForeground}"
                                MaxLength="5"
                                Style="{StaticResource MaterialDesignFilledTextBox}">
                                <TextBox.Text>
                                    <Binding
                                        Mode="TwoWay"
                                        Path="SelectedCommandPort"
                                        UpdateSourceTrigger="PropertyChanged">
                                        <Binding.ValidationRules>
                                            <validator:PortValidationRule
                                                Min="1"
                                                RangeEnd="65535"
                                                RangeInit="1"
                                                TextMinError="{x:Static p:Resources.The_Port_must_be_at_least_1_characters}"
                                                TextNumberInvalid="{x:Static p:Resources.Only_numbers}"
                                                TextRangeError="{x:Static p:Resources.Invalid_port_number}"
                                                ValidatesOnTargetUpdated="True" />
                                        </Binding.ValidationRules>
                                    </Binding>
                                </TextBox.Text>
                            </TextBox>
                            <ComboBox
                                x:Name="CbTimeout"
                                Grid.Row="2"
                                Grid.Column="0"
                                Grid.ColumnSpan="4"
                                Width="120"
                                Margin="8,16,8,8"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Top"
                                materialDesign:HintAssist.Hint="{x:Static p:Resources.Timeout}"
                                materialDesign:TextFieldAssist.SuffixText="ms"
                                materialDesign:ThemeAssist.Theme="Dark"
                                materialDesign:ValidationAssist.Suppress="True"
                                Foreground="White"
                                IsEditable="True"
                                ItemsSource="{Binding Timeouts}"
                                Style="{StaticResource MaterialDesignFloatingHintComboBox}">
                                <ComboBox.Text>
                                    <Binding
                                        Mode="TwoWay"
                                        Path="Timeout"
                                        UpdateSourceTrigger="PropertyChanged"
                                        ValidatesOnDataErrors="True">
                                        <Binding.ValidationRules>
                                            <validator:NumberRangeValidationRule Max="30000" Min="1000" />
                                        </Binding.ValidationRules>
                                    </Binding>
                                </ComboBox.Text>
                                <ComboBox.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <VirtualizingStackPanel />
                                    </ItemsPanelTemplate>
                                </ComboBox.ItemsPanel>
                            </ComboBox>
                            <ComboBox
                                x:Name="ComboBoxChannel"
                                Grid.Row="2"
                                Grid.Column="1"
                                Width="84"
                                Margin="16,16,8,8"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Top"
                                materialDesign:HintAssist.Hint="{x:Static p:Resources.Protocol}"
                                materialDesign:ThemeAssist.Theme="Dark"
                                materialDesign:ValidationAssist.Background="{StaticResource TundoraBillson}"
                                materialDesign:ValidationAssist.OnlyShowOnFocus="True"
                                FocusVisualStyle="{x:Null}"
                                Foreground="{StaticResource MaterialDesignDarkForeground}"
                                ItemsSource="{Binding Source={StaticResource enumType}}"
                                SelectedIndex="{Binding SelectedIndexProtocolType, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                Style="{StaticResource MaterialDesignFloatingHintComboBox}">
                                <ComboBox.ItemTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding Converter={StaticResource enumComboboxConverter}}" />
                                    </DataTemplate>
                                </ComboBox.ItemTemplate>
                            </ComboBox>

                            <Border
                                Grid.Row="4"
                                Grid.ColumnSpan="4"
                                Margin="8"
                                Padding="8"
                                Background="{StaticResource ChathamsBlueBillson}"
                                CornerRadius="8">
                                <ListBox
                                    x:Name="ListBox"
                                    ItemsSource="{Binding CommandsSent}"
                                    ScrollViewer.CanContentScroll="True">
                                    <ListBox.ItemContainerStyle>
                                        <Style BasedOn="{StaticResource ListBoxItemStyle}" TargetType="{x:Type ListBoxItem}">
                                            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="ListBoxItem">
                                                        <Border
                                                            Name="Border"
                                                            Padding="2"
                                                            Background="Transparent"
                                                            SnapsToDevicePixels="true">
                                                            <ContentPresenter />
                                                        </Border>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </ListBox.ItemContainerStyle>
                                    <ListBox.ItemTemplate>
                                        <DataTemplate DataType="{x:Type model:CommandModel}">
                                            <Grid HorizontalAlignment="Stretch">
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="Auto" />
                                                    <RowDefinition Height="Auto" />
                                                </Grid.RowDefinitions>
                                                <Grid
                                                    Grid.Row="0"
                                                    Grid.Column="0"
                                                    Grid.ColumnSpan="2"
                                                    Margin="0,8,16,8">
                                                    <TextBox
                                                        Padding="8,8,8,24"
                                                        HorizontalAlignment="Stretch"
                                                        materialDesign:TextFieldAssist.CharacterCounterVisibility="Visible"
                                                        materialDesign:ValidationAssist.Background="{StaticResource TundoraBillson}"
                                                        materialDesign:ValidationAssist.OnlyShowOnFocus="True"
                                                        Background="{StaticResource MaterialDesignBodyLight}"
                                                        Foreground="White"
                                                        IsReadOnly="True"
                                                        Style="{StaticResource MaterialDesignOutlinedTextBox}"
                                                        Text="{Binding Send}"
                                                        TextWrapping="Wrap"
                                                        VerticalScrollBarVisibility="Auto">
                                                        <i:Interaction.Triggers>
                                                            <i:EventTrigger EventName="GotFocus">
                                                                <i:InvokeCommandAction Command="{Binding ElementName=ListBox, Path=DataContext.SelectionChangedCommand}" CommandParameter="{Binding Path=., UpdateSourceTrigger=PropertyChanged}" />
                                                            </i:EventTrigger>
                                                        </i:Interaction.Triggers>
                                                    </TextBox>
                                                    <TextBlock
                                                        Margin="0,0,4,2"
                                                        HorizontalAlignment="Right"
                                                        VerticalAlignment="Bottom"
                                                        FontSize="10"
                                                        Foreground="#4FFFFFFF"
                                                        Text="{Binding StartDateTime, StringFormat=dd/MM/yyyy HH:mm:ss}" />
                                                </Grid>
                                                <TextBox
                                                    Grid.Row="1"
                                                    Grid.Column="1"
                                                    Grid.ColumnSpan="2"
                                                    Margin="16,0,0,-3"
                                                    HorizontalAlignment="Stretch"
                                                    materialDesign:TextFieldAssist.CharacterCounterVisibility="Visible"
                                                    materialDesign:ValidationAssist.Background="{StaticResource TundoraBillson}"
                                                    materialDesign:ValidationAssist.OnlyShowOnFocus="True"
                                                    AcceptsReturn="True"
                                                    Background="{StaticResource MaterialDesignBodyLight}"
                                                    Foreground="White"
                                                    Style="{StaticResource MaterialDesignOutlinedTextBox}"
                                                    Text="{Binding Receive}"
                                                    TextAlignment="Justify"
                                                    TextWrapping="Wrap"
                                                    VerticalScrollBarVisibility="Auto" />
                                            </Grid>
                                        </DataTemplate>
                                    </ListBox.ItemTemplate>
                                </ListBox>
                            </Border>
                        </Grid>
                    </Border>
                    <StackPanel
                        Grid.Row="0"
                        HorizontalAlignment="Right"
                        VerticalAlignment="Top"
                        Orientation="Horizontal">
                        <Button
                            Margin="0,3,0,0"
                            HorizontalAlignment="Right"
                            VerticalAlignment="Center"
                            Command="{Binding ExportToExcelCommand}">
                            <Button.Style>
                                <Style BasedOn="{StaticResource MaterialDesignOutlinedButton}" TargetType="{x:Type Button}">
                                    <Setter Property="Visibility" Value="Visible" />
                                    <Setter Property="ToolTip" Value="{x:Null}" />
                                    <Setter Property="Content" Value="{x:Static p:Resources.Export_To_Excel}" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding CommandsSent.Count, UpdateSourceTrigger=PropertyChanged}" Value="0">
                                            <Setter Property="Visibility" Value="Collapsed" />
                                        </DataTrigger>
                                        <!--<DataTrigger Binding="{Binding IsCurrentProcessAdmin, UpdateSourceTrigger=PropertyChanged}" Value="False">
                                        <Setter Property="IsEnabled" Value="False" />
                                        <Setter Property="Content" Value="{x:Static p:Resources.Run_the_program_with_administrator_to_export}" />
                                    </DataTrigger>-->
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>
                        <materialDesign:Badged
                            Grid.Row="1"
                            Margin="8,3,4,0"
                            HorizontalAlignment="Right"
                            VerticalAlignment="Center"
                            Badge="{Binding CommandsSent.Count}"
                            BadgeBackground="{StaticResource ChathamsBlueBillson}"
                            BadgeForeground="{StaticResource MaterialDesignDarkForeground}"
                            BadgePlacementMode="Right">
                            <materialDesign:Badged.Style>
                                <Style TargetType="{x:Type materialDesign:Badged}">
                                    <Setter Property="Visibility" Value="Visible" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding CommandsSent.Count, UpdateSourceTrigger=PropertyChanged}" Value="0">
                                            <Setter Property="Visibility" Value="Collapsed" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </materialDesign:Badged.Style>
                            <Button
                                Command="{Binding ClearAllCommand}"
                                Content="{x:Static p:Resources.Clear}"
                                Style="{StaticResource MaterialDesignOutlinedButton}" />
                        </materialDesign:Badged>
                    </StackPanel>
                </Grid>
            </Border>
        </Grid>
        <i:Interaction.Triggers>
            <i:EventTrigger EventName="Loaded">
                <i:InvokeCommandAction Command="{Binding LoadedCommand}" CommandParameter="{Binding ElementName=DataGrid, UpdateSourceTrigger=PropertyChanged}" />
            </i:EventTrigger>
        </i:Interaction.Triggers>
    </materialDesign:DialogHost>
</UserControl>