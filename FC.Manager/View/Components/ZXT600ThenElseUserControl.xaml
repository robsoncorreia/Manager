<UserControl
    x:Class="FC.Manager.View.Components.ZXT600ThenElseUserControl"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:device="clr-namespace:FC.Domain.Model.Device;assembly=FC.Domain"
    xmlns:p="clr-namespace:FC.Domain.Properties;assembly=FC.Domain"
    xmlns:domain="clr-namespace:FC.Domain.Validator;assembly=FC.Domain"
    xmlns:components="clr-namespace:FC.Manager.View.Components"
    xmlns:core="clr-namespace:System;assembly=mscorlib">
    <UserControl.Resources>
        <ObjectDataProvider
            x:Key="operatorType"
            MethodName="GetValues"
            ObjectType="{x:Type core:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type Type="device:LogicGateIfThen" />
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        <ObjectDataProvider
            x:Key="operatorTypeIfThen"
            MethodName="GetValues"
            ObjectType="{x:Type core:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type Type="device:OperatorTypeIfThen" />
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
    </UserControl.Resources>
    <Grid VerticalAlignment="Top" Margin="8">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="Auto" />
        </Grid.ColumnDefinitions>
        <Border
            Grid.Column="0"
            Width="220"
            VerticalAlignment="Top"
            Background="{StaticResource TundoraBillson}"
            BorderBrush="Black"
            BorderThickness="1"
            CornerRadius="2">
            <Grid>
                <Grid Grid.Row="1" Margin="8">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <components:ZwaveDeviceInformationUserControl
                        Grid.Row="0"
                        Grid.Column="0"
                        Grid.ColumnSpan="3" />
                    <ComboBox
                        x:Name="CbFunctions"
                        Grid.Row="1"
                        Grid.ColumnSpan="3"
                        Margin="0,0,0,16"
                        HorizontalAlignment="Stretch"
                        materialDesign:HintAssist.Hint="{x:Static p:Resources.Functions}"
                        materialDesign:ThemeAssist.Theme="Dark"
                        Foreground="White"
                        SelectedIndex="{Binding SelectedIndexThermostatFunction, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                        Style="{StaticResource MaterialDesignFloatingHintComboBox}">
                        <ComboBoxItem Content="{x:Static p:Resources.Temperature}" />
                        <ComboBoxItem Content="{x:Static p:Resources.Mode}" />
                        <ComboBoxItem Content="{x:Static p:Resources.Fan}" />
                    </ComboBox>
                    <Grid Grid.Row="2" Grid.ColumnSpan="3">
                        <Grid.Style>
                            <Style TargetType="{x:Type Grid}">
                                <Setter Property="Visibility" Value="Collapsed" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding SelectedIndexThermostatFunction}" Value="0">
                                        <Setter Property="Visibility" Value="Visible" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Grid.Style>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <TextBox
                            x:Name="TxtRoomTemperature"
                            Grid.Column="0"
                            Width="140"
                            HorizontalAlignment="Left"
                            materialDesign:TextFieldAssist.CharacterCounterVisibility="Visible"
                            materialDesign:TextFieldAssist.HasOutlinedTextField="True"
                            materialDesign:TextFieldAssist.SuffixText="C°"
                            materialDesign:ValidationAssist.Background="Black"
                            materialDesign:ValidationAssist.OnlyShowOnFocus="True"
                            materialDesign:ValidationAssist.PopupPlacement="Bottom"
                            materialDesign:ValidationAssist.UsePopup="True"
                            FontFamily="{DynamicResource 7SegFontFamily}"
                            FontSize="24"
                            Foreground="White"
                            Style="{StaticResource MaterialDesignOutlinedTextBox}"
                            Text="{Binding RoomTemperature, Converter={StaticResource temperatureConverter}, ValidatesOnExceptions=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" />
                        <Button
                            Grid.Column="1"
                            Height="58"
                            Margin="8,0,0,0"
                            HorizontalAlignment="Left"
                            Command="{Binding CreateIfThen.GetTemperatureCommand, Source={StaticResource Locator}}"
                            CommandParameter="{Binding Path=.}"
                            Content="{x:Static p:Resources.Get}"
                            FocusVisualStyle="{x:Null}"
                            Style="{StaticResource GetFlatButton}" />
                    </Grid>
                    <Grid Grid.Row="2" Grid.ColumnSpan="3">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Grid.Style>
                            <Style TargetType="{x:Type Grid}">
                                <Setter Property="Visibility" Value="Collapsed" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding SelectedIndexThermostatFunction}" Value="1">
                                        <Setter Property="Visibility" Value="Visible" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Grid.Style>
                        <ComboBox
                            Margin="0,14,0,8"
                            HorizontalAlignment="Stretch"
                            materialDesign:HintAssist.Hint="{x:Static p:Resources.Mode}"
                            materialDesign:ThemeAssist.Theme="Dark"
                            DisplayMemberPath="Name"
                            Foreground="White"
                            ItemsSource="{Binding ThermostatModes}"
                            SelectedIndex="{Binding SelectedIndexThermostatMode, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                            Style="{StaticResource MaterialDesignFloatingHintComboBox}" />
                    </Grid>
                    <Grid Grid.Row="2" Grid.ColumnSpan="3">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Grid.Style>
                            <Style TargetType="{x:Type Grid}">
                                <Setter Property="Visibility" Value="Collapsed" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding SelectedIndexThermostatFunction}" Value="2">
                                        <Setter Property="Visibility" Value="Visible" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Grid.Style>
                        <ComboBox
                            Margin="0,14,0,8"
                            HorizontalAlignment="Stretch"
                            materialDesign:HintAssist.Hint="{x:Static p:Resources.Fan}"
                            materialDesign:ThemeAssist.Theme="Dark"
                            DisplayMemberPath="Name"
                            Foreground="White"
                            ItemsSource="{Binding ThermostatFans}"
                            SelectedIndex="{Binding SelectedIndexThermostatFan, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                            Style="{StaticResource MaterialDesignFloatingHintComboBox}" />
                    </Grid>
                    <components:IfthenControlsUserControl
                        Grid.Row="0"
                        Grid.RowSpan="1"
                        Grid.Column="0"
                        Grid.ColumnSpan="3"
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Stretch" />
                </Grid>
            </Grid>
        </Border>
        <Border CornerRadius="2">
            <Border.Style>
                <Style TargetType="{x:Type Border}">
                    <Setter Property="Background" Value="Black" />
                    <Setter Property="Opacity" Value=".9" />
                    <Setter Property="Visibility" Value="Collapsed" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsChangedDevice}" Value="True">
                            <Setter Property="Visibility" Value="Visible" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Border.Style>
            <Grid>
                <TextBlock
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Foreground="White"
                    Text="{x:Static p:Resources.Device_not_found}" />
                <Button
                    Margin="2"
                    HorizontalAlignment="Right"
                    VerticalAlignment="Top"
                    Background="Red"
                    BorderBrush="Red"
                    Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type Page}}, Path=DataContext.RemoveCommand}"
                    CommandParameter="{Binding Path=.}"
                    Foreground="White"
                    ToolTip="{x:Static p:Resources.Delete}">
                    <Button.Style>
                        <Style BasedOn="{StaticResource MaterialDesignRaisedButton}" TargetType="{x:Type Button}">
                            <Setter Property="Visibility" Value="Collapsed" />
                            <Setter Property="Opacity" Value=".6" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Border, Mode=FindAncestor}, Path=IsMouseOver}" Value="True">
                                    <Setter Property="Visibility" Value="Visible" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                    <materialDesign:PackIcon Kind="Delete" />
                </Button>
            </Grid>
        </Border>
        <Border
            Grid.Column="1"
            Margin="8,0,0,0"
            Padding="8"
            VerticalAlignment="Center"
            Background="{StaticResource TundoraBillson}"
            BorderBrush="Black"
            BorderThickness="1"
            CornerRadius="2">
            <Border.Style>
                <Style TargetType="{x:Type Border}">
                    <Setter Property="Visibility" Value="Visible" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsHiddenDelay}" Value="True">
                            <Setter Property="Visibility" Value="Collapsed" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Border.Style>
            <ComboBox
                Width="82"
                VerticalAlignment="Center"
                materialDesign:HintAssist.Hint="{x:Static p:Resources.Delay_ms}"
                materialDesign:ThemeAssist.Theme="Dark"
                materialDesign:ValidationAssist.Suppress="True"
                Foreground="White"
                IsEditable="True"
                ItemsSource="{Binding Delays}"
                Style="{StaticResource MaterialDesignFloatingHintComboBox}">
                <ComboBox.Text>
                    <Binding
                        Mode="TwoWay"
                        Path="DelayIfThen"
                        UpdateSourceTrigger="PropertyChanged">
                        <Binding.ValidationRules>
                            <domain:NotEmptyValidationRule ValidatesOnTargetUpdated="True" />
                        </Binding.ValidationRules>
                    </Binding>
                </ComboBox.Text>
                <ComboBox.ItemsPanel>
                    <ItemsPanelTemplate>
                        <VirtualizingStackPanel />
                    </ItemsPanelTemplate>
                </ComboBox.ItemsPanel>
            </ComboBox>
        </Border>
    </Grid>
</UserControl>