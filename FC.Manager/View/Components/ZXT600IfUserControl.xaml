<UserControl
    x:Class="FC.Manager.View.Components.ZXT600IfUserControl"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:device="clr-namespace:FC.Domain.Model.Device;assembly=FC.Domain"
    xmlns:p="clr-namespace:FC.Domain.Properties;assembly=FC.Domain"
    xmlns:components="clr-namespace:FC.Manager.View.Components"
    xmlns:core="clr-namespace:System;assembly=mscorlib"
    d:DesignHeight="450"
    d:DesignWidth="800"
    mc:Ignorable="d">
    <UserControl.Resources>
        <ObjectDataProvider
            x:Key="operatorType"
            MethodName="GetValues"
            ObjectType="{x:Type core:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type Type="device:LogicGateIfThen" />
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        <ObjectDataProvider
            x:Key="operatorTypeIfThen"
            MethodName="GetValues"
            ObjectType="{x:Type core:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type Type="device:OperatorTypeIfThen" />
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
    </UserControl.Resources>
    <Grid VerticalAlignment="Top">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
        <components:LogicGateIfThenUserControl />
        <Border
            Grid.Column="1"
            Width="200"
            Background="{StaticResource TundoraBillson}"
            CornerRadius="4">
            <Border.Effect>
                <DropShadowEffect BlurRadius="8" ShadowDepth="1" />
            </Border.Effect>
        </Border>
        <Border
            Grid.Column="1"
            Width="200"
            Margin="4"
            VerticalAlignment="Center"
            Background="{StaticResource TundoraBillson}"
            CornerRadius="4">
            <Grid
                Grid.Row="1"
                Grid.ColumnSpan="2"
                Margin="8">
                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition />
                    <RowDefinition />
                </Grid.RowDefinitions>
                <components:ZwaveDeviceInformationUserControl Grid.Row="0" />
                <Grid Grid.Row="2" VerticalAlignment="Top">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*" />
                        <RowDefinition Height="*" />
                        <RowDefinition Height="*" />
                        <RowDefinition Height="*" />
                        <RowDefinition Height="*" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>
                    <!--#region Logical Comparators-->
                    <components:LogicalComparatorsUserControl Grid.Row="0" Margin="0,0,0,8" />
                    <!--#endregion Logical Comparators-->
                    <TextBox
                        x:Name="TxtRoomTemperature"
                        Grid.Row="1"
                        Width="160"
                        Margin="8"
                        VerticalAlignment="Center"
                        materialDesign:TextFieldAssist.CharacterCounterVisibility="Visible"
                        materialDesign:TextFieldAssist.HasOutlinedTextField="True"
                        materialDesign:TextFieldAssist.SuffixText="C°"
                        materialDesign:ValidationAssist.Background="Black"
                        materialDesign:ValidationAssist.OnlyShowOnFocus="True"
                        materialDesign:ValidationAssist.PopupPlacement="Bottom"
                        materialDesign:ValidationAssist.UsePopup="True"
                        FontFamily="{DynamicResource 7SegFontFamily}"
                        FontSize="24"
                        Foreground="White"
                        Style="{StaticResource MaterialDesignOutlinedTextBox}"
                        Text="{Binding RoomTemperature, Converter={StaticResource temperatureConverter}, ValidatesOnExceptions=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" />
                    <Button
                        Grid.Row="4"
                        HorizontalAlignment="Right"
                        Command="{Binding CreateIfThen.GetTemperatureCommand, Source={StaticResource Locator}}"
                        CommandParameter="{Binding Path=.}"
                        Content="{x:Static p:Resources.Get}"
                        FocusVisualStyle="{x:Null}"
                        Style="{StaticResource GetFlatButton}" />
                </Grid>
                <components:IfthenControlsUserControl
                    Grid.Row="0"
                    Grid.RowSpan="1"
                    Grid.Column="0"
                    Grid.ColumnSpan="3"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Stretch" />
            </Grid>
        </Border>
        <components:DeviceNotFoundUserControl Grid.Column="1">
            <components:DeviceNotFoundUserControl.Style>
                <Style TargetType="{x:Type UserControl}">
                    <Setter Property="Visibility" Value="Collapsed" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsChangedDevice}" Value="True">
                            <Setter Property="Visibility" Value="Visible" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </components:DeviceNotFoundUserControl.Style>
        </components:DeviceNotFoundUserControl>
    </Grid>
</UserControl>