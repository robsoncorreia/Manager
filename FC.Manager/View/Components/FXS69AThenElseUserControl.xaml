<UserControl
    x:Class="FC.Manager.View.Components.FXS69AThenElseUserControl"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:device="clr-namespace:FC.Domain.Model.Device;assembly=FC.Domain"
    xmlns:p="clr-namespace:FC.Domain.Properties;assembly=FC.Domain"
    xmlns:components="clr-namespace:FC.Manager.View.Components"
    xmlns:core="clr-namespace:System;assembly=mscorlib">
    <UserControl.Resources>
        <ObjectDataProvider
            x:Key="operatorType"
            MethodName="GetValues"
            ObjectType="{x:Type core:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type Type="device:LogicGateIfThen" />
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        <ObjectDataProvider
            x:Key="operatorTypeIfThen"
            MethodName="GetValues"
            ObjectType="{x:Type core:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type Type="device:OperatorTypeIfThen" />
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
    </UserControl.Resources>
    <Grid VerticalAlignment="Top">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="Auto" />
        </Grid.ColumnDefinitions>
        <components:DelayIfThenUserControl Grid.Column="1" />
        <Border
            Grid.Column="0"
            Width="200"
            VerticalAlignment="Center"
            Background="{StaticResource TundoraBillson}"
            BorderBrush="Black"
            BorderThickness="1"
            CornerRadius="2">
            <Grid Grid.Row="1" Margin="8">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <components:ZwaveDeviceInformationUserControl
                    Grid.Row="0"
                    Grid.Column="0"
                    Grid.ColumnSpan="3" />
                <Grid
                    Grid.Row="3"
                    Grid.Column="0"
                    Grid.ColumnSpan="2"
                    VerticalAlignment="Top">
                    <Grid.RowDefinitions>
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                    </Grid.RowDefinitions>

                    <!--  OnOFF  -->
                    <StackPanel
                        Grid.Row="3"
                        Margin="0,8,0,0"
                        Orientation="Horizontal">
                        <CheckBox
                            Margin="0"
                            VerticalAlignment="Center"
                            Cursor="Hand"
                            FocusVisualStyle="{x:Null}"
                            IsChecked="{Binding IsOn, UpdateSourceTrigger=PropertyChanged, NotifyOnSourceUpdated=True}">
                            <CheckBox.Style>
                                <Style BasedOn="{StaticResource MaterialDesignCheckBox}" TargetType="{x:Type CheckBox}">
                                    <Setter Property="Content">
                                        <Setter.Value>
                                            <TextBlock Foreground="White" Text="{x:Static p:Resources.Off}" />
                                        </Setter.Value>
                                    </Setter>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsChecked}" Value="True">
                                            <Setter Property="Content">
                                                <Setter.Value>
                                                    <TextBlock Foreground="White" Text="{x:Static p:Resources.On}" />
                                                </Setter.Value>
                                            </Setter>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </CheckBox.Style>
                        </CheckBox>
                    </StackPanel>
                </Grid>
                <components:IfthenControlsUserControl
                    Grid.Row="0"
                    Grid.RowSpan="3"
                    Grid.Column="0"
                    Grid.ColumnSpan="3"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Stretch" />
            </Grid>
        </Border>
        <Border CornerRadius="2">
            <Border.Style>
                <Style TargetType="{x:Type Border}">
                    <Setter Property="Background" Value="Black" />
                    <Setter Property="Opacity" Value=".9" />
                    <Setter Property="Visibility" Value="Collapsed" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsChangedDevice}" Value="True">
                            <Setter Property="Visibility" Value="Visible" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Border.Style>
            <Grid>
                <TextBlock
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Foreground="White"
                    Text="{x:Static p:Resources.Device_not_found}" />
                <Button
                    Margin="2"
                    HorizontalAlignment="Right"
                    VerticalAlignment="Top"
                    Background="Red"
                    BorderBrush="Red"
                    Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type Page}}, Path=DataContext.RemoveCommand}"
                    CommandParameter="{Binding Path=.}"
                    Foreground="White"
                    ToolTip="{x:Static p:Resources.Delete}">
                    <Button.Style>
                        <Style BasedOn="{StaticResource MaterialDesignRaisedButton}" TargetType="{x:Type Button}">
                            <Setter Property="Visibility" Value="Collapsed" />
                            <Setter Property="Opacity" Value=".6" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Border, Mode=FindAncestor}, Path=IsMouseOver}" Value="True">
                                    <Setter Property="Visibility" Value="Visible" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                    <materialDesign:PackIcon Kind="Delete" />
                </Button>
            </Grid>
        </Border>
    </Grid>
</UserControl>