<Page
    x:Class="FC.Manager.View._Dashboard.DashboardPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:p="clr-namespace:FC.Domain.Properties;assembly=FC.Domain"
    Title="DashboardPage"
    d:DesignHeight="450"
    d:DesignWidth="800"
    DataContext="{Binding Dashboard, Source={StaticResource Locator}}"
    mc:Ignorable="d">
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding LoadedCommand, Mode=OneWay}">
                <i:InvokeCommandAction.CommandParameter>
                    <MultiBinding Converter="{StaticResource conversor}">
                        <Binding ElementName="FrameDashBoard" />
                        <Binding ElementName="Column" />
                    </MultiBinding>
                </i:InvokeCommandAction.CommandParameter>
            </i:InvokeCommandAction>
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <Page.Resources>
        <DataTemplate x:Key="ItemsLeftMenu">
            <Grid
                Margin="0,2"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Stretch">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="32" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <materialDesign:PackIcon
                    Grid.Row="0"
                    Grid.Column="0"
                    VerticalAlignment="Center"
                    Kind="{Binding Kind}" />
                <TextBlock
                    Grid.Row="0"
                    Grid.Column="1"
                    Margin="0,0,0,2"
                    VerticalAlignment="Center"
                    FontSize="14"
                    Text="{Binding Name}" />
            </Grid>
        </DataTemplate>
    </Page.Resources>
    <materialDesign:DialogHost
        x:Name="DialogHost"
        HorizontalAlignment="Stretch"
        VerticalAlignment="Stretch"
        DialogContent="{Binding DialogContent}"
        IsOpen="{Binding IsOpenDialogHost}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition
                    x:Name="Column"
                    Width="148"
                    MinWidth="38"
                    MaxWidth="148" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="1*" />
            </Grid.RowDefinitions>
            <Border
                Grid.Row="0"
                Grid.Column="0"
                Background="{StaticResource MaterialDesignChipBackground}">
                <TextBlock
                    Margin="6,0,0,0"
                    VerticalAlignment="Center"
                    FontSize="14"
                    FontWeight="Bold"
                    Foreground="{StaticResource MaterialDesignDarkForeground}"
                    Text="{Binding AppName, UpdateSourceTrigger=PropertyChanged}" />
            </Border>
            <Border
                Grid.Row="0"
                Grid.Column="1"
                Background="{StaticResource AttentionToActionBrush}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <TextBlock
                        Margin="16,0,0,0"
                        VerticalAlignment="Center"
                        FontWeight="Black"
                        Foreground="{StaticResource PrimaryHueDarkBrush}"
                        Style="{StaticResource MaterialDesignBody1TextBlock}"
                        Text="{Binding CurrentPageKey, UpdateSourceTrigger=PropertyChanged}" />
                    <TextBlock
                        Grid.Column="1"
                        Margin="16,0"
                        VerticalAlignment="Center"
                        FontSize="10"
                        Foreground="White">
                        <TextBlock.Style>
                            <Style BasedOn="{StaticResource MaterialDesignTitleTextBlock}" TargetType="{x:Type TextBlock}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ConnectedSsid}" Value="{x:Null}">
                                        <Setter Property="Visibility" Value="Collapsed" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding ConnectedSsid}" Value="">
                                        <Setter Property="Visibility" Value="Collapsed" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding ConnectedSsid}" Value="">
                                        <Setter Property="Visibility" Value="Collapsed" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                        <Run
                            FontWeight="Bold"
                            Text="{Binding ConnectedSsid, UpdateSourceTrigger=PropertyChanged}"
                            ToolTip="{x:Static p:Resources.SSID}" />
                        <Run Text="|" />
                        <Run Text="{Binding DefaultGateway}" ToolTip="{x:Static p:Resources.Router_gateway_address}" />
                    </TextBlock>
                    <TextBlock
                        Grid.Column="2"
                        Margin="0,0,4,0"
                        HorizontalAlignment="Right"
                        VerticalAlignment="Center"
                        FocusVisualStyle="{x:Null}"
                        IsEnabled="{Binding IsTabEnable, UpdateSourceTrigger=PropertyChanged}"
                        OpacityMask="Black"
                        TextTrimming="CharacterEllipsis">
                        <Hyperlink
                            Command="{Binding GoToInfoUserCommand}"
                            FocusVisualStyle="{x:Null}"
                            FontSize="12"
                            Foreground="{StaticResource PrimaryHueDarkBrush}"
                            Style="{StaticResource MaterialDesignCaptionHyperlink}">
                            <Hyperlink.Inlines>
                                <Run Text="{Binding CurrentUserEmail, UpdateSourceTrigger=PropertyChanged}" />
                            </Hyperlink.Inlines>
                        </Hyperlink>
                    </TextBlock>
                    <Separator
                        Grid.Column="2"
                        Width="2"
                        HorizontalAlignment="Right"
                        Style="{StaticResource MaterialDesignDarkSeparator}" />
                    <Border
                        Grid.Column="3"
                        Width="38"
                        Height="38"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        Background="{StaticResource PrimaryHueDarkBrush}"
                        CornerRadius="90" />
                    <Image
                        Grid.Column="3"
                        Width="32"
                        Height="32"
                        Margin="8"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        Source="{Binding CurrentUserPicture, Converter={StaticResource nullImageConverter}, TargetNullValue={x:Null}}"
                        Stretch="UniformToFill">
                        <Image.Clip>
                            <RectangleGeometry
                                RadiusX="90"
                                RadiusY="90"
                                Rect="0,0,32,32" />
                        </Image.Clip>
                    </Image>
                </Grid>
            </Border>
            <Border
                Grid.Row="1"
                Grid.Column="0"
                VerticalAlignment="Stretch"
                materialDesign:ShadowAssist.ShadowDepth="Depth4"
                materialDesign:ThemeAssist.Theme="Dark">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <ToggleButton
                        x:Name="ToggleButton"
                        Width="18"
                        Height="18"
                        Margin="8,12,8,2"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Center"
                        Command="{Binding HamburgerToggleButtonCommand}"
                        Cursor="Hand"
                        FocusVisualStyle="{x:Null}"
                        Foreground="White"
                        IsChecked="{Binding IsCheckedHamburgerDashboard, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                        Style="{StaticResource MaterialDesignHamburgerToggleButton}">
                        <ToggleButton.CommandParameter>
                            <MultiBinding Converter="{StaticResource conversor}">
                                <Binding ElementName="ToggleButton" Path="." />
                                <Binding ElementName="Column" Path="." />
                            </MultiBinding>
                        </ToggleButton.CommandParameter>
                    </ToggleButton>
                    <Separator
                        Grid.Row="1"
                        Margin="4,0"
                        VerticalAlignment="Bottom"
                        Style="{StaticResource MaterialDesignDarkSeparator}" />
                    <ListBox
                        x:Name="LvDrawerHost"
                        Grid.Row="2"
                        Margin="0,0,0,8"
                        IsEnabled="{Binding IsTabEnable, UpdateSourceTrigger=PropertyChanged}"
                        ItemTemplate="{StaticResource ItemsLeftMenu}"
                        ItemsSource="{Binding Items, UpdateSourceTrigger=PropertyChanged}"
                        ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                        SelectedIndex="{Binding SelectedPageIndex, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}">
                        <ListBox.ItemContainerStyle>
                            <Style BasedOn="{StaticResource MaterialDesignListBoxItem}" TargetType="{x:Type ListBoxItem}">
                                <Setter Property="Visibility" Value="Visible" />
                                <Setter Property="Cursor" Value="Hand" />
                                <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                                <Style.Triggers>
                                    <Trigger Property="IsSelected" Value="True">
                                        <Setter Property="BorderBrush" Value="{StaticResource PrimaryHueDarkBrush}" />
                                        <Setter Property="BorderThickness" Value="4,0,0,0" />
                                        <Setter Property="FontWeight" Value="Bold" />
                                        <Setter Property="Background" Value="Transparent" />
                                        <Setter Property="Foreground" Value="{StaticResource PrimaryHueDarkBrush}" />
                                    </Trigger>
                                    <DataTrigger Binding="{Binding IsVisible, UpdateSourceTrigger=PropertyChanged}" Value="False">
                                        <Setter Property="Visibility" Value="Collapsed" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Path=., UpdateSourceTrigger=PropertyChanged}" Value="{x:Null}">
                                        <Setter Property="Visibility" Value="Hidden" />
                                        <Setter Property="Height" Value="14" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </ListBox.ItemContainerStyle>
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="MouseUp">
                                <i:InvokeCommandAction Command="{Binding Dashboard.SelectedPageCommand, Source={StaticResource Locator}}" CommandParameter="{Binding ElementName=LvDrawerHost, Path=SelectedItem, UpdateSourceTrigger=PropertyChanged}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </ListBox>
                </Grid>
            </Border>
            <Frame
                x:Name="FrameDashBoard"
                Grid.Row="1"
                Grid.Column="1"
                Margin="0,0,0,0"
                FocusVisualStyle="{x:Null}"
                NavigationUIVisibility="Hidden" />
            <materialDesign:Snackbar
                Grid.Row="1"
                Grid.Column="0"
                Grid.ColumnSpan="2"
                HorizontalAlignment="Center"
                Background="{Binding BackgroundSnackbar, UpdateSourceTrigger=PropertyChanged}"
                IsActive="{Binding IsActiveSnackbar}">
                <materialDesign:SnackbarMessage
                    ActionCommand="{Binding ActionSnackbarCommand}"
                    ActionContent="{Binding ActionContentSnackbar}"
                    Content="{Binding ContentSnackbar}" />
            </materialDesign:Snackbar>
        </Grid>
    </materialDesign:DialogHost>
</Page>