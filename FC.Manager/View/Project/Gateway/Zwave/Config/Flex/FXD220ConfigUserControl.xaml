<UserControl
    x:Class="FC.Manager.View.Project.Gateway.Zwave.Config.Flex.FXD220ConfigUserControl"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:p="clr-namespace:FC.Domain.Properties;assembly=FC.Domain"
    xmlns:validator="clr-namespace:FC.Domain.Validator;assembly=FC.Domain"
    d:DesignHeight="450"
    d:DesignWidth="800"
    DataContext="{Binding FXD220Config, Source={StaticResource Locator}}"
    mc:Ignorable="d">
    <materialDesign:DialogHost
        DialogContent="{Binding DialogContent}"
        FocusVisualStyle="{x:Null}"
        IsOpen="{Binding IsOpenDialogHost}">
        <Expander
            Padding="16"
            materialDesign:ThemeAssist.Theme="Dark"
            Background="#60000000"
            BorderBrush="Black"
            BorderThickness="2"
            Header="{x:Static p:Resources.Advanced_Settings}">
            <Grid>
                <Grid.Resources>
                    <Style TargetType="{x:Type materialDesign:PackIcon}">
                        <Setter Property="Margin" Value="8,0,0,0" />
                        <Setter Property="Foreground" Value="{StaticResource DenimBillson}" />
                    </Style>
                    <Style BasedOn="{StaticResource {x:Type ToolTip}}" TargetType="ToolTip">
                        <Style.Resources>
                            <Style TargetType="ContentPresenter">
                                <Style.Resources>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="TextWrapping" Value="Wrap" />
                                    </Style>
                                </Style.Resources>
                            </Style>
                        </Style.Resources>
                        <Setter Property="MaxWidth" Value="233" />
                    </Style>
                </Grid.Resources>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <Button
                    Grid.Row="0"
                    Grid.Column="0"
                    Grid.ColumnSpan="6"
                    Margin="0,0,0,16"
                    Command="{Binding OpenDocumentationCommand}"
                    Content="{x:Static p:Resources.Documentation}"
                    Style="{StaticResource MaterialDesignOutlinedButton}" />
                <Separator
                    Grid.Row="1"
                    Grid.Column="0"
                    Grid.ColumnSpan="6"
                    Style="{StaticResource MaterialDesignDarkSeparator}" />
                <TextBlock
                    Grid.Row="2"
                    Grid.Column="0"
                    Grid.ColumnSpan="3"
                    Margin="8,0"
                    VerticalAlignment="Center"
                    FontWeight="Bold"
                    Foreground="PaleVioletRed"
                    Text="{x:Static p:Resources.Make_sure_the_device_is_turned_on}"
                    ToolTip="{x:Static p:Resources.Make_sure_the_device_is_turned_on}" />
                <Button
                    Grid.Row="2"
                    Grid.Column="4"
                    Grid.ColumnSpan="2"
                    Margin="8,0"
                    VerticalAlignment="Center"
                    Command="{Binding GetAllCommand}"
                    CommandParameter="{Binding ZwaveDetailDevice.SelectedProjectModel, Source={StaticResource Locator}}"
                    Content="{x:Static p:Resources.Get_All}" />
                <Separator
                    Grid.Row="3"
                    Grid.Column="0"
                    Grid.ColumnSpan="6"
                    Style="{StaticResource MaterialDesignDarkSeparator}" />
                <TextBlock
                    Grid.Row="7"
                    Grid.Column="0"
                    Margin="8,0"
                    Text="{x:Static p:Resources.Parameter}" />
                <TextBlock
                    Grid.Row="7"
                    Grid.Column="1"
                    Margin="8,0"
                    Text="{x:Static p:Resources.Size}" />
                <TextBlock
                    Grid.Row="7"
                    Grid.Column="3"
                    Margin="8,0"
                    HorizontalAlignment="Center"
                    Text="{x:Static p:Resources.Value}" />
                <TextBlock
                    Grid.Row="7"
                    Grid.Column="4"
                    Grid.ColumnSpan="2"
                    Margin="8,0"
                    HorizontalAlignment="Center"
                    Text="{x:Static p:Resources.Actions}" />
                <Separator
                    Grid.Row="8"
                    Grid.Column="0"
                    Grid.ColumnSpan="6"
                    Style="{StaticResource MaterialDesignDarkSeparator}" />
                <TextBlock
                    Grid.Row="9"
                    Grid.Column="0"
                    Margin="0,0,8,0"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Text="1" />
                <TextBlock
                    Grid.Row="9"
                    Grid.Column="1"
                    Margin="0,0,8,0"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Text="1" />
                <Grid Grid.Row="9" Grid.Column="2">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <TextBlock
                        Grid.Column="0"
                        VerticalAlignment="Center"
                        Text="{x:Static p:Resources.Dimmer_state_saved_or_not_when_power_failure}"
                        TextTrimming="CharacterEllipsis"
                        ToolTip="{x:Static p:Resources.Dimmer_state_saved_or_not_when_power_failure}" />
                </Grid>
                <StackPanel
                    Grid.Row="9"
                    Grid.Column="3"
                    Margin="8,0"
                    Orientation="Horizontal">
                    <ToggleButton
                        x:Name="TbDimmerStateSaved"
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Center"
                        IsChecked="{Binding IsDimmerStateSaved, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    <TextBlock
                        Width="72"
                        Margin="8,0,0,2"
                        VerticalAlignment="Center">
                        <TextBlock.Style>
                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="Text" Value="{x:Static p:Resources.Disabled}" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=IsChecked, ElementName=TbDimmerStateSaved}" Value="True">
                                        <Setter Property="Text" Value="{x:Static p:Resources.Enabled}" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>
                </StackPanel>
                <Button
                    Grid.Row="9"
                    Grid.Column="4"
                    Margin="8,0"
                    VerticalAlignment="Center"
                    Command="{Binding GetDimmerStateSavedCommand}"
                    CommandParameter="{Binding ZwaveDetailDevice.SelectedProjectModel, Source={StaticResource Locator}}"
                    Content="{x:Static p:Resources.Get}" />
                <Button
                    Grid.Row="9"
                    Grid.Column="5"
                    Margin="8,0"
                    VerticalAlignment="Center"
                    Command="{Binding SetDimmerStateSavedCommand}"
                    CommandParameter="{Binding ZwaveDetailDevice.SelectedProjectModel, Source={StaticResource Locator}}"
                    Content="{x:Static p:Resources.Set}"
                    Style="{StaticResource MaterialDesignRaisedButton}" />
                <Separator
                    Grid.Row="10"
                    Grid.Column="0"
                    Grid.ColumnSpan="6"
                    Style="{StaticResource MaterialDesignDarkSeparator}" />
                <TextBlock
                    Grid.Row="11"
                    Grid.Column="0"
                    Margin="0,0,8,0"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Text="2" />
                <TextBlock
                    Grid.Row="11"
                    Grid.Column="1"
                    Margin="0,0,8,0"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Text="1" />
                <StackPanel
                    Grid.Row="11"
                    Grid.Column="2"
                    Orientation="Horizontal">
                    <TextBlock
                        VerticalAlignment="Center"
                        Text="{x:Static p:Resources.Dimming_mode}"
                        ToolTip="{x:Static p:Resources.Dimming_mode}" />
                    <!--<materialDesign:PackIcon
                        VerticalAlignment="Center"
                        Kind="Information"
                        ToolTip="{x:Static p:Resources._0_LED_disabled_2}" />-->
                </StackPanel>
                <ComboBox
                    Grid.Row="11"
                    Grid.Column="3"
                    Width="140"
                    Margin="8,0"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Top"
                    materialDesign:HintAssist.Hint="{x:Static p:Resources.Dimming_mode}"
                    materialDesign:ValidationAssist.Suppress="True"
                    ItemsSource="{Binding DimmingModes}"
                    SelectedIndex="{Binding DimmingMode, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    Style="{StaticResource MaterialDesignFloatingHintComboBox}" />
                <Button
                    Grid.Row="11"
                    Grid.Column="4"
                    Margin="8,0"
                    VerticalAlignment="Center"
                    Command="{Binding GetDimmingModeCommand}"
                    CommandParameter="{Binding ZwaveDetailDevice.SelectedProjectModel, Source={StaticResource Locator}}"
                    Content="{x:Static p:Resources.Get}" />
                <Button
                    Grid.Row="11"
                    Grid.Column="5"
                    Margin="8,0"
                    VerticalAlignment="Center"
                    Command="{Binding SetDimmingModeCommand}"
                    CommandParameter="{Binding ZwaveDetailDevice.SelectedProjectModel, Source={StaticResource Locator}}"
                    Content="{x:Static p:Resources.Set}"
                    Style="{StaticResource MaterialDesignRaisedButton}" />
                <Separator
                    Grid.Row="12"
                    Grid.Column="0"
                    Grid.ColumnSpan="6"
                    Style="{StaticResource MaterialDesignDarkSeparator}" />
                <TextBlock
                    Grid.Row="13"
                    Grid.Column="0"
                    Margin="0,0,8,0"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Text="3" />
                <TextBlock
                    Grid.Row="13"
                    Grid.Column="1"
                    Margin="0,0,8,0"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Text="1" />
                <TextBlock
                    Grid.Row="13"
                    Grid.Column="2"
                    VerticalAlignment="Center"
                    Text="{x:Static p:Resources.Auto_detection_of_dimming_mode_when_powered_on}"
                    TextTrimming="CharacterEllipsis"
                    ToolTip="{x:Static p:Resources.Auto_detection_of_dimming_mode_when_powered_on}" />
                <StackPanel
                    Grid.Row="13"
                    Grid.Column="3"
                    Margin="8,0"
                    Orientation="Horizontal">
                    <ToggleButton
                        x:Name="TbAutoDetectionDimminMode"
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Center"
                        IsChecked="{Binding IsAutoDetectionDimminMode, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    <TextBlock
                        Width="72"
                        Margin="8,0,0,2"
                        VerticalAlignment="Center">
                        <TextBlock.Style>
                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="Text" Value="{x:Static p:Resources.Disabled}" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=IsChecked, ElementName=TbAutoDetectionDimminMode}" Value="True">
                                        <Setter Property="Text" Value="{x:Static p:Resources.Enabled}" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>
                </StackPanel>
                <Button
                    Grid.Row="13"
                    Grid.Column="4"
                    Margin="8,0"
                    VerticalAlignment="Center"
                    Command="{Binding GetAutoDetectionDimminModeCommand}"
                    CommandParameter="{Binding ZwaveDetailDevice.SelectedProjectModel, Source={StaticResource Locator}}"
                    Content="{x:Static p:Resources.Get}" />
                <Button
                    Grid.Row="13"
                    Grid.Column="5"
                    Margin="8,0"
                    VerticalAlignment="Center"
                    Command="{Binding SetAutoDetectionDimminModeCommand}"
                    CommandParameter="{Binding ZwaveDetailDevice.SelectedProjectModel, Source={StaticResource Locator}}"
                    Content="{x:Static p:Resources.Set}"
                    Style="{StaticResource MaterialDesignRaisedButton}" />
                <Separator
                    Grid.Row="18"
                    Grid.Column="0"
                    Grid.ColumnSpan="6"
                    Style="{StaticResource MaterialDesignDarkSeparator}" />
                <TextBlock
                    Grid.Row="19"
                    Grid.Column="0"
                    Margin="0,0,8,0"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Text="5" />
                <TextBlock
                    Grid.Row="19"
                    Grid.Column="1"
                    Margin="0,0,8,0"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Text="1" />
                <Grid Grid.Row="19" Grid.Column="2">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <TextBlock
                        Grid.Column="0"
                        VerticalAlignment="Center"
                        Text="{x:Static p:Resources.Minimum_brightness_level}"
                        ToolTip="{x:Static p:Resources.Minimum_brightness_level}" />
                    <materialDesign:PackIcon
                        Grid.Column="1"
                        VerticalAlignment="Center"
                        Kind="Information"
                        ToolTip="{x:Static p:Resources._1_98_percentage_brightness_level}" />
                </Grid>
                <TextBox
                    x:Name="TxtMinimumBrightnessLevel"
                    Grid.Row="19"
                    Grid.Column="3"
                    Margin="8,0"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Top"
                    materialDesign:HintAssist.Hint="1 ~ 98 %"
                    materialDesign:ValidationAssist.Suppress="True">
                    <TextBox.Style>
                        <Style BasedOn="{StaticResource MaterialDesignFilledTextBox}" TargetType="{x:Type TextBox}">
                            <Style.Triggers>
                                <Trigger Property="Validation.HasError" Value="true">
                                    <Setter Property="ToolTip" Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors)/ErrorContent}" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </TextBox.Style>
                    <TextBox.Text>
                        <Binding
                            Mode="TwoWay"
                            Path="MinimumBrightnessLevel"
                            UpdateSourceTrigger="PropertyChanged"
                            ValidatesOnDataErrors="True">
                            <Binding.ValidationRules>
                                <validator:NumberRangeValidationRule Max="98" Min="1" />
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                </TextBox>
                <Button
                    Grid.Row="19"
                    Grid.Column="4"
                    Margin="8,0"
                    VerticalAlignment="Center"
                    Command="{Binding GetMinimumBrightnessLevelCommand}"
                    CommandParameter="{Binding ZwaveDetailDevice.SelectedProjectModel, Source={StaticResource Locator}}"
                    Content="{x:Static p:Resources.Get}" />
                <Button
                    Grid.Row="19"
                    Grid.Column="5"
                    Margin="8,0"
                    VerticalAlignment="Center"
                    Command="{Binding SetMinimumBrightnessLevelCommand}"
                    CommandParameter="{Binding ZwaveDetailDevice.SelectedProjectModel, Source={StaticResource Locator}}"
                    Content="{x:Static p:Resources.Set}">
                    <Button.Style>
                        <Style BasedOn="{StaticResource MaterialDesignRaisedButton}" TargetType="Button">
                            <Setter Property="IsEnabled" Value="False" />
                            <Style.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding Path=(Validation.HasError), UpdateSourceTrigger=PropertyChanged, ElementName=TxtMinimumBrightnessLevel}" Value="False" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="IsEnabled" Value="True" />
                                </MultiDataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
                <Separator
                    Grid.Row="20"
                    Grid.Column="0"
                    Grid.ColumnSpan="6"
                    Style="{StaticResource MaterialDesignDarkSeparator}" />
                <TextBlock
                    Grid.Row="21"
                    Grid.Column="0"
                    Margin="0,0,8,0"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Text="6" />
                <TextBlock
                    Grid.Row="21"
                    Grid.Column="1"
                    Margin="0,0,8,0"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Text="1" />
                <Grid Grid.Row="21" Grid.Column="2">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <TextBlock
                        Grid.Column="0"
                        VerticalAlignment="Center"
                        Text="{x:Static p:Resources.Maximum_brightness_level}"
                        TextTrimming="CharacterEllipsis"
                        ToolTip="{x:Static p:Resources.Maximum_brightness_level}" />
                    <materialDesign:PackIcon
                        Grid.Column="1"
                        VerticalAlignment="Center"
                        Kind="Information"
                        ToolTip="{x:Static p:Resources._2_99_percentage_brightness_level}" />
                </Grid>
                <TextBox
                    x:Name="TxtMaximumBrightnessLevel"
                    Grid.Row="21"
                    Grid.Column="3"
                    Margin="8,0"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Top"
                    materialDesign:HintAssist.Hint="2 ~ 99 %"
                    materialDesign:ValidationAssist.Suppress="True">
                    <TextBox.Style>
                        <Style BasedOn="{StaticResource MaterialDesignFilledTextBox}" TargetType="{x:Type TextBox}">
                            <Style.Triggers>
                                <Trigger Property="Validation.HasError" Value="true">
                                    <Setter Property="ToolTip" Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors)/ErrorContent}" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </TextBox.Style>
                    <TextBox.Text>
                        <Binding
                            Mode="TwoWay"
                            Path="MaximumBrightnessLevel"
                            UpdateSourceTrigger="PropertyChanged"
                            ValidatesOnDataErrors="True">
                            <Binding.ValidationRules>
                                <validator:NumberRangeValidationRule Max="99" Min="2" />
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                </TextBox>
                <Button
                    Grid.Row="21"
                    Grid.Column="4"
                    Margin="8,0"
                    VerticalAlignment="Center"
                    Command="{Binding GetMaximumBrightnessLevelCommand}"
                    CommandParameter="{Binding ZwaveDetailDevice.SelectedProjectModel, Source={StaticResource Locator}}"
                    Content="{x:Static p:Resources.Get}" />
                <Button
                    Grid.Row="21"
                    Grid.Column="5"
                    Margin="8,0"
                    VerticalAlignment="Center"
                    Command="{Binding SetMaximumBrightnessLevelCommand}"
                    CommandParameter="{Binding ZwaveDetailDevice.SelectedProjectModel, Source={StaticResource Locator}}"
                    Content="{x:Static p:Resources.Set}">
                    <Button.Style>
                        <Style BasedOn="{StaticResource MaterialDesignRaisedButton}" TargetType="Button">
                            <Setter Property="IsEnabled" Value="False" />
                            <Style.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding Path=(Validation.HasError), UpdateSourceTrigger=PropertyChanged, ElementName=TxtMaximumBrightnessLevel}" Value="False" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="IsEnabled" Value="True" />
                                </MultiDataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
                <Separator
                    Grid.Row="23"
                    Grid.Column="0"
                    Grid.ColumnSpan="6"
                    Style="{StaticResource MaterialDesignDarkSeparator}" />
                <TextBlock
                    Grid.Row="24"
                    Grid.Column="0"
                    Margin="0,0,8,0"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Text="7" />
                <TextBlock
                    Grid.Row="24"
                    Grid.Column="1"
                    Margin="0,0,8,0"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Text="2" />
                <Grid Grid.Row="24" Grid.Column="2">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <TextBlock
                        Grid.Column="0"
                        VerticalAlignment="Center"
                        Text="{x:Static p:Resources.Single_dimming_step_time_Manual}"
                        TextTrimming="CharacterEllipsis"
                        ToolTip="{Binding RelativeSource={RelativeSource Self}, Path=Text}" />
                    <materialDesign:PackIcon
                        Grid.Column="1"
                        VerticalAlignment="Center"
                        Kind="Information"
                        ToolTip="{x:Static p:Resources.Max_2_55s__in_10ms_steps_}" />
                </Grid>
                <TextBox
                    x:Name="TxtSingleDimmingStepTimeManual"
                    Grid.Row="24"
                    Grid.Column="3"
                    Margin="8,0"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Top"
                    materialDesign:HintAssist.Hint="0 ~ 255 (10ms)"
                    materialDesign:ValidationAssist.Suppress="True">
                    <TextBox.Style>
                        <Style BasedOn="{StaticResource MaterialDesignFilledTextBox}" TargetType="{x:Type TextBox}">
                            <Style.Triggers>
                                <Trigger Property="Validation.HasError" Value="true">
                                    <Setter Property="ToolTip" Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors)/ErrorContent}" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </TextBox.Style>
                    <TextBox.Text>
                        <Binding
                            Mode="TwoWay"
                            Path="SingleDimmingStepTimeManual"
                            UpdateSourceTrigger="PropertyChanged"
                            ValidatesOnDataErrors="True">
                            <Binding.ValidationRules>
                                <validator:NumberRangeValidationRule Max="255" Min="0" />
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                </TextBox>
                <Button
                    Grid.Row="24"
                    Grid.Column="4"
                    Margin="8,0"
                    VerticalAlignment="Center"
                    Command="{Binding GetSingleDimmingStepTimeManualCommand}"
                    CommandParameter="{Binding ZwaveDetailDevice.SelectedProjectModel, Source={StaticResource Locator}}"
                    Content="{x:Static p:Resources.Get}" />
                <Button
                    Grid.Row="24"
                    Grid.Column="5"
                    Margin="8,0"
                    VerticalAlignment="Center"
                    Command="{Binding SetSingleDimmingStepTimeManualCommand}"
                    CommandParameter="{Binding ZwaveDetailDevice.SelectedProjectModel, Source={StaticResource Locator}}"
                    Content="{x:Static p:Resources.Set}">
                    <Button.Style>
                        <Style BasedOn="{StaticResource MaterialDesignRaisedButton}" TargetType="Button">
                            <Setter Property="IsEnabled" Value="False" />
                            <Style.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding Path=(Validation.HasError), UpdateSourceTrigger=PropertyChanged, ElementName=TxtSingleDimmingStepTimeManual}" Value="False" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="IsEnabled" Value="True" />
                                </MultiDataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
                <Separator
                    Grid.Row="25"
                    Grid.Column="0"
                    Grid.ColumnSpan="6"
                    Style="{StaticResource MaterialDesignDarkSeparator}" />
                <TextBlock
                    Grid.Row="26"
                    Grid.Column="0"
                    Margin="0,0,8,0"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Text="8" />
                <TextBlock
                    Grid.Row="26"
                    Grid.Column="1"
                    Margin="0,0,8,0"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Text="1" />
                <Grid Grid.Row="26" Grid.Column="2">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <TextBlock
                        Grid.Column="0"
                        VerticalAlignment="Center"
                        Text="{x:Static p:Resources.Single_dimming_step_size}"
                        TextTrimming="CharacterEllipsis"
                        ToolTip="{x:Static p:Resources.Single_dimming_step_size}" />
                    <materialDesign:PackIcon
                        Grid.Column="1"
                        VerticalAlignment="Center"
                        Kind="Information"
                        ToolTip="{x:Static p:Resources._1___99_percentage_value__modification_isn_t_recommended___This_parameter}" />
                </Grid>
                <TextBox
                    x:Name="TxtSingleDimmingStepSizeManual"
                    Grid.Row="26"
                    Grid.Column="3"
                    Margin="8,0"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Top"
                    materialDesign:HintAssist.Hint="1 ~ 99 %"
                    materialDesign:ValidationAssist.Suppress="True">
                    <TextBox.Style>
                        <Style BasedOn="{StaticResource MaterialDesignFilledTextBox}" TargetType="{x:Type TextBox}">
                            <Style.Triggers>
                                <Trigger Property="Validation.HasError" Value="true">
                                    <Setter Property="ToolTip" Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors)/ErrorContent}" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </TextBox.Style>
                    <TextBox.Text>
                        <Binding
                            Mode="TwoWay"
                            Path="SingleDimmingStepSizeManual"
                            UpdateSourceTrigger="PropertyChanged"
                            ValidatesOnDataErrors="True">
                            <Binding.ValidationRules>
                                <validator:NumberRangeValidationRule Max="99" Min="1" />
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                </TextBox>
                <Button
                    Grid.Row="26"
                    Grid.Column="4"
                    Margin="8,0"
                    VerticalAlignment="Center"
                    Command="{Binding GetSingleDimmingStepSizeManualCommand}"
                    CommandParameter="{Binding ZwaveDetailDevice.SelectedProjectModel, Source={StaticResource Locator}}"
                    Content="{x:Static p:Resources.Get}" />
                <Button
                    Grid.Row="26"
                    Grid.Column="5"
                    Margin="8,0"
                    VerticalAlignment="Center"
                    Command="{Binding SetSingleDimmingStepSizeManualCommand}"
                    CommandParameter="{Binding ZwaveDetailDevice.SelectedProjectModel, Source={StaticResource Locator}}"
                    Content="{x:Static p:Resources.Set}">
                    <Button.Style>
                        <Style BasedOn="{StaticResource MaterialDesignRaisedButton}" TargetType="Button">
                            <Setter Property="IsEnabled" Value="False" />
                            <Style.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding Path=(Validation.HasError), UpdateSourceTrigger=PropertyChanged, ElementName=TxtSingleDimmingStepSizeManual}" Value="False" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="IsEnabled" Value="True" />
                                </MultiDataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
                <Separator
                    Grid.Row="29"
                    Grid.Column="0"
                    Grid.ColumnSpan="6"
                    Style="{StaticResource MaterialDesignDarkSeparator}" />
                <TextBlock
                    Grid.Row="30"
                    Grid.Column="0"
                    Margin="0,0,8,0"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Text="9" />
                <TextBlock
                    Grid.Row="30"
                    Grid.Column="1"
                    Margin="0,0,8,0"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Text="2" />
                <Grid Grid.Row="30" Grid.Column="2">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <TextBlock
                        Grid.Column="0"
                        VerticalAlignment="Center"
                        Text="{x:Static p:Resources.Single_dimming_step_time__Auto_}"
                        TextTrimming="CharacterEllipsis"
                        ToolTip="{x:Static p:Resources.Single_dimming_step_time__Auto_}" />
                    <materialDesign:PackIcon
                        Grid.Column="1"
                        VerticalAlignment="Center"
                        Kind="Information"
                        ToolTip="{x:Static p:Resources.Max_2_55s__in_10ms_steps__This_parameter_defines_the_time_of_a_single}" />
                </Grid>
                <TextBox
                    x:Name="TxtSingleDimmingStepTimeAuto"
                    Grid.Row="30"
                    Grid.Column="3"
                    Margin="8,0"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Top"
                    materialDesign:HintAssist.Hint="0 ~ 255 (10ms)"
                    materialDesign:ValidationAssist.Suppress="True">
                    <TextBox.Style>
                        <Style BasedOn="{StaticResource MaterialDesignFilledTextBox}" TargetType="{x:Type TextBox}">
                            <Style.Triggers>
                                <Trigger Property="Validation.HasError" Value="true">
                                    <Setter Property="ToolTip" Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors)/ErrorContent}" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </TextBox.Style>
                    <TextBox.Text>
                        <Binding
                            Mode="TwoWay"
                            Path="SingleDimmingStepTimeAuto"
                            UpdateSourceTrigger="PropertyChanged"
                            ValidatesOnDataErrors="True">
                            <Binding.ValidationRules>
                                <validator:NumberRangeValidationRule Max="255" Min="0" />
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                </TextBox>
                <Button
                    Grid.Row="30"
                    Grid.Column="4"
                    Margin="8,0"
                    VerticalAlignment="Center"
                    Command="{Binding GetSingleDimmingStepTimeAutoCommand}"
                    CommandParameter="{Binding ZwaveDetailDevice.SelectedProjectModel, Source={StaticResource Locator}}"
                    Content="{x:Static p:Resources.Get}" />
                <Button
                    Grid.Row="30"
                    Grid.Column="5"
                    Margin="8,0"
                    VerticalAlignment="Center"
                    Command="{Binding SetSingleDimmingStepTimeAutoCommand}"
                    CommandParameter="{Binding ZwaveDetailDevice.SelectedProjectModel, Source={StaticResource Locator}}"
                    Content="{x:Static p:Resources.Set}">
                    <Button.Style>
                        <Style BasedOn="{StaticResource MaterialDesignRaisedButton}" TargetType="Button">
                            <Setter Property="IsEnabled" Value="False" />
                            <Style.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding Path=(Validation.HasError), UpdateSourceTrigger=PropertyChanged, ElementName=TxtSingleDimmingStepTimeAuto}" Value="False" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="IsEnabled" Value="True" />
                                </MultiDataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
                <Separator
                    Grid.Row="33"
                    Grid.Column="0"
                    Grid.ColumnSpan="6"
                    Style="{StaticResource MaterialDesignDarkSeparator}" />
                <TextBlock
                    Grid.Row="34"
                    Grid.Column="0"
                    Margin="0,0,8,0"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Text="10" />
                <TextBlock
                    Grid.Row="34"
                    Grid.Column="1"
                    Margin="0,0,8,0"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Text="1" />
                <Grid Grid.Row="34" Grid.Column="2">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <TextBlock
                        Grid.Column="0"
                        VerticalAlignment="Center"
                        Text="{x:Static p:Resources.Single_dimming_step_size__Auto_}"
                        TextTrimming="CharacterEllipsis"
                        ToolTip="{x:Static p:Resources.Single_dimming_step_size__Auto_}" />
                    <materialDesign:PackIcon
                        Grid.Column="1"
                        VerticalAlignment="Center"
                        Kind="Information"
                        ToolTip="{x:Static p:Resources._1___99_percentage_value__modification_isn_t_recommended___This}" />
                </Grid>
                <TextBox
                    x:Name="TxtSingleDimmingStepSizeAuto"
                    Grid.Row="34"
                    Grid.Column="3"
                    Margin="8,0"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Top"
                    materialDesign:HintAssist.Hint="1 ~ 99 %"
                    materialDesign:ValidationAssist.Suppress="True">
                    <TextBox.Style>
                        <Style BasedOn="{StaticResource MaterialDesignFilledTextBox}" TargetType="{x:Type TextBox}">
                            <Style.Triggers>
                                <Trigger Property="Validation.HasError" Value="true">
                                    <Setter Property="ToolTip" Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors)/ErrorContent}" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </TextBox.Style>
                    <TextBox.Text>
                        <Binding
                            Mode="TwoWay"
                            Path="SingleDimmingStepSizeAuto"
                            UpdateSourceTrigger="PropertyChanged"
                            ValidatesOnDataErrors="True">
                            <Binding.ValidationRules>
                                <validator:NumberRangeValidationRule Max="99" Min="1" />
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                </TextBox>
                <Button
                    Grid.Row="34"
                    Grid.Column="4"
                    Margin="8,0"
                    VerticalAlignment="Center"
                    Command="{Binding GetSingleDimmingStepSizeAutoCommand}"
                    CommandParameter="{Binding ZwaveDetailDevice.SelectedProjectModel, Source={StaticResource Locator}}"
                    Content="{x:Static p:Resources.Get}" />
                <Button
                    Grid.Row="34"
                    Grid.Column="5"
                    Margin="8,0"
                    VerticalAlignment="Center"
                    Command="{Binding SetSingleDimmingStepSizeAutoCommand}"
                    CommandParameter="{Binding ZwaveDetailDevice.SelectedProjectModel, Source={StaticResource Locator}}"
                    Content="{x:Static p:Resources.Set}">
                    <Button.Style>
                        <Style BasedOn="{StaticResource MaterialDesignRaisedButton}" TargetType="Button">
                            <Setter Property="IsEnabled" Value="False" />
                            <Style.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding Path=(Validation.HasError), UpdateSourceTrigger=PropertyChanged, ElementName=TxtSingleDimmingStepSizeAuto}" Value="False" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="IsEnabled" Value="True" />
                                </MultiDataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
                <Separator
                    Grid.Row="35"
                    Grid.Column="0"
                    Grid.ColumnSpan="6"
                    Style="{StaticResource MaterialDesignDarkSeparator}" />
                <TextBlock
                    Grid.Row="36"
                    Grid.Column="0"
                    Margin="0,0,8,0"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Text="11" />
                <TextBlock
                    Grid.Row="36"
                    Grid.Column="1"
                    Margin="0,0,8,0"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Text="1" />
                <Grid Grid.Row="36" Grid.Column="2">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <TextBlock
                        Grid.Column="0"
                        VerticalAlignment="Center"
                        Text="{x:Static p:Resources.The_dimming_percentage_when_a_single_touch_of_a_button}"
                        TextTrimming="CharacterEllipsis"
                        ToolTip="{x:Static p:Resources.The_dimming_percentage_when_a_single_touch_of_a_button}" />
                    <materialDesign:PackIcon
                        Grid.Column="1"
                        VerticalAlignment="Center"
                        Kind="Information"
                        ToolTip="{x:Static p:Resources._0_The_percentage_saved_by_the_last_button_holding_touch_}" />
                </Grid>
                <TextBox
                    x:Name="TxtDimmingPercentageSingleTouchButton"
                    Grid.Row="36"
                    Grid.Column="3"
                    Margin="8,0"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Top"
                    materialDesign:HintAssist.Hint="0 ~ 99 %"
                    materialDesign:ValidationAssist.Suppress="True">
                    <TextBox.Style>
                        <Style BasedOn="{StaticResource MaterialDesignFilledTextBox}" TargetType="{x:Type TextBox}">
                            <Style.Triggers>
                                <Trigger Property="Validation.HasError" Value="true">
                                    <Setter Property="ToolTip" Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors)/ErrorContent}" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </TextBox.Style>
                    <TextBox.Text>
                        <Binding
                            Mode="TwoWay"
                            Path="DimmingPercentageSingleTouchButton"
                            UpdateSourceTrigger="PropertyChanged"
                            ValidatesOnDataErrors="True">
                            <Binding.ValidationRules>
                                <validator:NumberRangeValidationRule Max="99" Min="0" />
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                </TextBox>
                <Button
                    Grid.Row="36"
                    Grid.Column="4"
                    Margin="8,0"
                    VerticalAlignment="Center"
                    Command="{Binding GetDimmingPercentageSingleTouchButtonCommand}"
                    CommandParameter="{Binding ZwaveDetailDevice.SelectedProjectModel, Source={StaticResource Locator}}"
                    Content="{x:Static p:Resources.Get}" />
                <Button
                    Grid.Row="36"
                    Grid.Column="5"
                    Margin="8,0"
                    VerticalAlignment="Center"
                    Command="{Binding SetDimmingPercentageSingleTouchButtonCommand}"
                    CommandParameter="{Binding ZwaveDetailDevice.SelectedProjectModel, Source={StaticResource Locator}}"
                    Content="{x:Static p:Resources.Set}">
                    <Button.Style>
                        <Style BasedOn="{StaticResource MaterialDesignRaisedButton}" TargetType="Button">
                            <Setter Property="IsEnabled" Value="False" />
                            <Style.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding Path=(Validation.HasError), UpdateSourceTrigger=PropertyChanged, ElementName=TxtDimmingPercentageSingleTouchButton}" Value="False" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="IsEnabled" Value="True" />
                                </MultiDataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
                <Separator
                    Grid.Row="37"
                    Grid.Column="0"
                    Grid.ColumnSpan="6"
                    Style="{StaticResource MaterialDesignDarkSeparator}" />
                <TextBlock
                    Grid.Row="38"
                    Grid.Column="0"
                    Margin="0,0,8,0"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Text="12" />
                <TextBlock
                    Grid.Row="38"
                    Grid.Column="1"
                    Margin="0,0,8,0"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Text="1" />
                <Grid Grid.Row="38" Grid.Column="2">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <TextBlock
                        Grid.Column="0"
                        VerticalAlignment="Center"
                        Text="{x:Static p:Resources.Reporting_interval_for_dimming_level}"
                        TextTrimming="CharacterEllipsis"
                        ToolTip="{x:Static p:Resources.Reporting_interval_for_dimming_level}" />
                    <materialDesign:PackIcon
                        Grid.Column="1"
                        VerticalAlignment="Center"
                        Kind="Information"
                        ToolTip="{x:Static p:Resources._0_No_report_during_dimming_}" />
                </Grid>
                <TextBox
                    x:Name="TxtReportingIntervalDimmingLevel"
                    Grid.Row="38"
                    Grid.Column="3"
                    Margin="8,0"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Top"
                    materialDesign:HintAssist.Hint="0 ~ 99 %"
                    materialDesign:ValidationAssist.Suppress="True">
                    <TextBox.Style>
                        <Style BasedOn="{StaticResource MaterialDesignFilledTextBox}" TargetType="{x:Type TextBox}">
                            <Style.Triggers>
                                <Trigger Property="Validation.HasError" Value="true">
                                    <Setter Property="ToolTip" Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors)/ErrorContent}" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </TextBox.Style>
                    <TextBox.Text>
                        <Binding
                            Mode="TwoWay"
                            Path="ReportingIntervalDimmingLevel"
                            UpdateSourceTrigger="PropertyChanged"
                            ValidatesOnDataErrors="True">
                            <Binding.ValidationRules>
                                <validator:NumberRangeValidationRule Max="255" Min="1" />
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                </TextBox>
                <Button
                    Grid.Row="38"
                    Grid.Column="4"
                    Margin="8,0"
                    VerticalAlignment="Center"
                    Command="{Binding GetReportingIntervalDimmingLevelCommand}"
                    CommandParameter="{Binding ZwaveDetailDevice.SelectedProjectModel, Source={StaticResource Locator}}"
                    Content="{x:Static p:Resources.Get}" />
                <Button
                    Grid.Row="38"
                    Grid.Column="5"
                    Margin="8,0"
                    VerticalAlignment="Center"
                    Command="{Binding SetReportingIntervalDimmingLevelCommand}"
                    CommandParameter="{Binding ZwaveDetailDevice.SelectedProjectModel, Source={StaticResource Locator}}"
                    Content="{x:Static p:Resources.Set}">
                    <Button.Style>
                        <Style BasedOn="{StaticResource MaterialDesignRaisedButton}" TargetType="Button">
                            <Setter Property="IsEnabled" Value="False" />
                            <Style.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding Path=(Validation.HasError), UpdateSourceTrigger=PropertyChanged, ElementName=TxtReportingIntervalDimmingLevel}" Value="False" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="IsEnabled" Value="True" />
                                </MultiDataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
                <Separator
                    Grid.Row="39"
                    Grid.Column="0"
                    Grid.ColumnSpan="6"
                    Style="{StaticResource MaterialDesignDarkSeparator}" />
                <TextBlock
                    Grid.Row="40"
                    Grid.Column="0"
                    Margin="0,0,8,0"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Text="13" />
                <TextBlock
                    Grid.Row="40"
                    Grid.Column="1"
                    Margin="0,0,8,0"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Text="1" />
                <Grid Grid.Row="40" Grid.Column="2">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <TextBlock
                        Grid.Column="0"
                        VerticalAlignment="Center"
                        Text="{x:Static p:Resources.External_switch_type}"
                        TextTrimming="CharacterEllipsis"
                        ToolTip="{x:Static p:Resources.External_switch_type}" />
                    <materialDesign:PackIcon
                        Grid.Column="1"
                        VerticalAlignment="Center"
                        Kind="Information"
                        ToolTip="{x:Static p:Resources._0_Button__momentary_buttons__}" />
                </Grid>
                <TextBox
                    x:Name="TxtExternalSwitchType"
                    Grid.Row="40"
                    Grid.Column="3"
                    Margin="8,0"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Top"
                    materialDesign:HintAssist.Hint="0, 1"
                    materialDesign:ValidationAssist.Suppress="True">
                    <TextBox.Style>
                        <Style BasedOn="{StaticResource MaterialDesignFilledTextBox}" TargetType="{x:Type TextBox}">
                            <Style.Triggers>
                                <Trigger Property="Validation.HasError" Value="true">
                                    <Setter Property="ToolTip" Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors)/ErrorContent}" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </TextBox.Style>
                    <TextBox.Text>
                        <Binding
                            Mode="TwoWay"
                            Path="ExternalSwitchType"
                            UpdateSourceTrigger="PropertyChanged"
                            ValidatesOnDataErrors="True">
                            <Binding.ValidationRules>
                                <validator:NumberRangeValidationRule Max="1" Min="0" />
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                </TextBox>
                <Button
                    Grid.Row="40"
                    Grid.Column="4"
                    Margin="8,0"
                    VerticalAlignment="Center"
                    Command="{Binding GetExternalSwitchTypeCommand}"
                    CommandParameter="{Binding ZwaveDetailDevice.SelectedProjectModel, Source={StaticResource Locator}}"
                    Content="{x:Static p:Resources.Get}" />
                <Button
                    Grid.Row="40"
                    Grid.Column="5"
                    Margin="8,0"
                    VerticalAlignment="Center"
                    Command="{Binding SetExternalSwitchTypeCommand}"
                    CommandParameter="{Binding ZwaveDetailDevice.SelectedProjectModel, Source={StaticResource Locator}}"
                    Content="{x:Static p:Resources.Set}">
                    <Button.Style>
                        <Style BasedOn="{StaticResource MaterialDesignRaisedButton}" TargetType="Button">
                            <Setter Property="IsEnabled" Value="False" />
                            <Style.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding Path=(Validation.HasError), UpdateSourceTrigger=PropertyChanged, ElementName=TxtExternalSwitchType}" Value="False" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="IsEnabled" Value="True" />
                                </MultiDataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
                <Separator
                    Grid.Row="41"
                    Grid.Column="0"
                    Grid.ColumnSpan="6"
                    Style="{StaticResource MaterialDesignDarkSeparator}" />
                <TextBlock
                    Grid.Row="42"
                    Grid.Column="0"
                    Margin="0,0,8,0"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Text="14" />
                <TextBlock
                    Grid.Row="42"
                    Grid.Column="1"
                    Margin="0,0,8,0"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Text="1" />
                <Grid Grid.Row="42" Grid.Column="2">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <TextBlock
                        Grid.Column="0"
                        VerticalAlignment="Center"
                        Text="{x:Static p:Resources.External_switch_input}"
                        TextTrimming="CharacterEllipsis"
                        ToolTip="{x:Static p:Resources.External_switch_input}" />
                    <materialDesign:PackIcon
                        Grid.Column="1"
                        VerticalAlignment="Center"
                        Kind="Information"
                        ToolTip="{x:Static p:Resources._0_No_external_switch_}" />
                </Grid>
                <TextBox
                    x:Name="TxtExternalSwitchInput"
                    Grid.Row="42"
                    Grid.Column="3"
                    Margin="8,0"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Top"
                    materialDesign:HintAssist.Hint="0 ~ 4"
                    materialDesign:ValidationAssist.Suppress="True">
                    <TextBox.Style>
                        <Style BasedOn="{StaticResource MaterialDesignFilledTextBox}" TargetType="{x:Type TextBox}">
                            <Style.Triggers>
                                <Trigger Property="Validation.HasError" Value="true">
                                    <Setter Property="ToolTip" Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors)/ErrorContent}" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </TextBox.Style>
                    <TextBox.Text>
                        <Binding
                            Mode="TwoWay"
                            Path="ExternalSwitchInput"
                            UpdateSourceTrigger="PropertyChanged"
                            ValidatesOnDataErrors="True">
                            <Binding.ValidationRules>
                                <validator:NumberRangeValidationRule Max="4" Min="0" />
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                </TextBox>
                <Button
                    Grid.Row="42"
                    Grid.Column="4"
                    Margin="8,0"
                    VerticalAlignment="Center"
                    Command="{Binding GetExternalSwitchInputCommand}"
                    CommandParameter="{Binding ZwaveDetailDevice.SelectedProjectModel, Source={StaticResource Locator}}"
                    Content="{x:Static p:Resources.Get}" />
                <Button
                    Grid.Row="42"
                    Grid.Column="5"
                    Margin="8,0"
                    VerticalAlignment="Center"
                    Command="{Binding SetExternalSwitchInputCommand}"
                    CommandParameter="{Binding ZwaveDetailDevice.SelectedProjectModel, Source={StaticResource Locator}}"
                    Content="{x:Static p:Resources.Set}">
                    <Button.Style>
                        <Style BasedOn="{StaticResource MaterialDesignRaisedButton}" TargetType="Button">
                            <Setter Property="IsEnabled" Value="False" />
                            <Style.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding Path=(Validation.HasError), UpdateSourceTrigger=PropertyChanged, ElementName=TxtExternalSwitchInput}" Value="False" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="IsEnabled" Value="True" />
                                </MultiDataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
                <Separator
                    Grid.Row="43"
                    Grid.Column="0"
                    Grid.ColumnSpan="6"
                    Style="{StaticResource MaterialDesignDarkSeparator}" />
                <TextBlock
                    Grid.Row="44"
                    Grid.Column="0"
                    Margin="0,0,8,0"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Text="15" />
                <TextBlock
                    Grid.Row="44"
                    Grid.Column="1"
                    Margin="0,0,8,0"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Text="1" />
                <Grid Grid.Row="44" Grid.Column="2">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <TextBlock
                        Grid.Column="0"
                        VerticalAlignment="Center"
                        Text="{x:Static p:Resources.Energy_metering_reporting}"
                        TextTrimming="CharacterEllipsis"
                        ToolTip="{x:Static p:Resources.Energy_metering_reporting}" />
                    <materialDesign:PackIcon
                        Grid.Column="1"
                        VerticalAlignment="Center"
                        Kind="Information"
                        ToolTip="{x:Static p:Resources._1_Only_report_Watt_}" />
                </Grid>
                <TextBox
                    x:Name="TxtEnergyMeteringReporting"
                    Grid.Row="44"
                    Grid.Column="3"
                    Margin="8,0"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Top"
                    materialDesign:HintAssist.Hint="0 ~ 15"
                    materialDesign:ValidationAssist.Suppress="True">
                    <TextBox.Style>
                        <Style BasedOn="{StaticResource MaterialDesignFilledTextBox}" TargetType="{x:Type TextBox}">
                            <Style.Triggers>
                                <Trigger Property="Validation.HasError" Value="true">
                                    <Setter Property="ToolTip" Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors)/ErrorContent}" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </TextBox.Style>
                    <TextBox.Text>
                        <Binding
                            Mode="TwoWay"
                            Path="EnergyMeteringReporting"
                            UpdateSourceTrigger="PropertyChanged"
                            ValidatesOnDataErrors="True">
                            <Binding.ValidationRules>
                                <validator:NumberRangeValidationRule Max="15" Min="0" />
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                </TextBox>
                <Button
                    Grid.Row="44"
                    Grid.Column="4"
                    Margin="8,0"
                    VerticalAlignment="Center"
                    Command="{Binding GetEnergyMeteringReportingCommand}"
                    CommandParameter="{Binding ZwaveDetailDevice.SelectedProjectModel, Source={StaticResource Locator}}"
                    Content="{x:Static p:Resources.Get}" />
                <Button
                    Grid.Row="44"
                    Grid.Column="5"
                    Margin="8,0"
                    VerticalAlignment="Center"
                    Command="{Binding SetEnergyMeteringReportingCommand}"
                    CommandParameter="{Binding ZwaveDetailDevice.SelectedProjectModel, Source={StaticResource Locator}}"
                    Content="{x:Static p:Resources.Set}">
                    <Button.Style>
                        <Style BasedOn="{StaticResource MaterialDesignRaisedButton}" TargetType="Button">
                            <Setter Property="IsEnabled" Value="False" />
                            <Style.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding Path=(Validation.HasError), UpdateSourceTrigger=PropertyChanged, ElementName=TxtEnergyMeteringReporting}" Value="False" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="IsEnabled" Value="True" />
                                </MultiDataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>

                <Separator
                    Grid.Row="45"
                    Grid.Column="0"
                    Grid.ColumnSpan="6"
                    Style="{StaticResource MaterialDesignDarkSeparator}" />
                <TextBlock
                    Grid.Row="46"
                    Grid.Column="0"
                    Margin="0,0,8,0"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Text="16" />
                <TextBlock
                    Grid.Row="46"
                    Grid.Column="1"
                    Margin="0,0,8,0"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Text="2" />
                <Grid Grid.Row="46" Grid.Column="2">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <TextBlock
                        Grid.Column="0"
                        VerticalAlignment="Center"
                        Text="{x:Static p:Resources.Energy_metering_reporting_interval}"
                        TextTrimming="CharacterEllipsis"
                        ToolTip="{x:Static p:Resources.Energy_metering_reporting_interval}" />
                    <materialDesign:PackIcon
                        Grid.Column="1"
                        VerticalAlignment="Center"
                        Kind="Information"
                        ToolTip="{x:Static p:Resources._1___32768_in_sec_}" />
                </Grid>
                <TextBox
                    x:Name="TxtEnergyMeteringReportingInterval"
                    Grid.Row="46"
                    Grid.Column="3"
                    Margin="8,0"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Top"
                    materialDesign:HintAssist.Hint="1 ~ 32768"
                    materialDesign:ValidationAssist.Suppress="True">
                    <TextBox.Style>
                        <Style BasedOn="{StaticResource MaterialDesignFilledTextBox}" TargetType="{x:Type TextBox}">
                            <Style.Triggers>
                                <Trigger Property="Validation.HasError" Value="true">
                                    <Setter Property="ToolTip" Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors)/ErrorContent}" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </TextBox.Style>
                    <TextBox.Text>
                        <Binding
                            Mode="TwoWay"
                            Path="EnergyMeteringReportingInterval"
                            UpdateSourceTrigger="PropertyChanged"
                            ValidatesOnDataErrors="True">
                            <Binding.ValidationRules>
                                <validator:NumberRangeValidationRule Max="32768" Min="1" />
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                </TextBox>
                <Button
                    Grid.Row="46"
                    Grid.Column="4"
                    Margin="8,0"
                    VerticalAlignment="Center"
                    Command="{Binding GetEnergyMeteringReportingIntervalCommand}"
                    CommandParameter="{Binding ZwaveDetailDevice.SelectedProjectModel, Source={StaticResource Locator}}"
                    Content="{x:Static p:Resources.Get}" />
                <Button
                    Grid.Row="46"
                    Grid.Column="5"
                    Margin="8,0"
                    VerticalAlignment="Center"
                    Command="{Binding SetEnergyMeteringReportingIntervalCommand}"
                    CommandParameter="{Binding ZwaveDetailDevice.SelectedProjectModel, Source={StaticResource Locator}}"
                    Content="{x:Static p:Resources.Set}">
                    <Button.Style>
                        <Style BasedOn="{StaticResource MaterialDesignRaisedButton}" TargetType="Button">
                            <Setter Property="IsEnabled" Value="False" />
                            <Style.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding Path=(Validation.HasError), UpdateSourceTrigger=PropertyChanged, ElementName=TxtEnergyMeteringReportingInterval}" Value="False" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="IsEnabled" Value="True" />
                                </MultiDataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>

                <Separator
                    Grid.Row="47"
                    Grid.Column="0"
                    Grid.ColumnSpan="6"
                    Style="{StaticResource MaterialDesignDarkSeparator}" />
                <TextBlock
                    Grid.Row="48"
                    Grid.Column="0"
                    Margin="0,0,8,0"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Text="32" />
                <TextBlock
                    Grid.Row="48"
                    Grid.Column="1"
                    Margin="0,0,8,0"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Text="2" />
                <Grid Grid.Row="48" Grid.Column="2">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <TextBlock
                        Grid.Column="0"
                        VerticalAlignment="Center"
                        Text="{x:Static p:Resources.Ampere_alarm_threshold}"
                        TextTrimming="CharacterEllipsis"
                        ToolTip="{x:Static p:Resources.Ampere_alarm_threshold}" />
                    <materialDesign:PackIcon
                        Grid.Column="1"
                        VerticalAlignment="Center"
                        Kind="Information"
                        ToolTip="{x:Static p:Resources._1___5000__0_01_Ampere__alarm_enabled_}" />
                </Grid>
                <TextBox
                    x:Name="TxtAmpereAlarmThreshold"
                    Grid.Row="48"
                    Grid.Column="3"
                    Margin="8,0"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Top"
                    materialDesign:HintAssist.Hint="0 ~ 5000 (0.01 A)"
                    materialDesign:ValidationAssist.Suppress="True">
                    <TextBox.Style>
                        <Style BasedOn="{StaticResource MaterialDesignFilledTextBox}" TargetType="{x:Type TextBox}">
                            <Style.Triggers>
                                <Trigger Property="Validation.HasError" Value="true">
                                    <Setter Property="ToolTip" Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors)/ErrorContent}" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </TextBox.Style>
                    <TextBox.Text>
                        <Binding
                            Mode="TwoWay"
                            Path="AmpereAlarmThreshold"
                            UpdateSourceTrigger="PropertyChanged"
                            ValidatesOnDataErrors="True">
                            <Binding.ValidationRules>
                                <validator:NumberRangeValidationRule Max="5000" Min="0" />
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                </TextBox>
                <Button
                    Grid.Row="48"
                    Grid.Column="4"
                    Margin="8,0"
                    VerticalAlignment="Center"
                    Command="{Binding GetAmpereAlarmThresholdCommand}"
                    CommandParameter="{Binding ZwaveDetailDevice.SelectedProjectModel, Source={StaticResource Locator}}"
                    Content="{x:Static p:Resources.Get}" />
                <Button
                    Grid.Row="48"
                    Grid.Column="5"
                    Margin="8,0"
                    VerticalAlignment="Center"
                    Command="{Binding SetAmpereAlarmThresholdCommand}"
                    CommandParameter="{Binding ZwaveDetailDevice.SelectedProjectModel, Source={StaticResource Locator}}"
                    Content="{x:Static p:Resources.Set}">
                    <Button.Style>
                        <Style BasedOn="{StaticResource MaterialDesignRaisedButton}" TargetType="Button">
                            <Setter Property="IsEnabled" Value="False" />
                            <Style.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding Path=(Validation.HasError), UpdateSourceTrigger=PropertyChanged, ElementName=TxtAmpereAlarmThreshold}" Value="False" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="IsEnabled" Value="True" />
                                </MultiDataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>

                <Separator
                    Grid.Row="49"
                    Grid.Column="0"
                    Grid.ColumnSpan="6"
                    Style="{StaticResource MaterialDesignDarkSeparator}" />
                <TextBlock
                    Grid.Row="50"
                    Grid.Column="0"
                    Margin="0,0,8,0"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Text="33" />
                <TextBlock
                    Grid.Row="50"
                    Grid.Column="1"
                    Margin="0,0,8,0"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Text="2" />
                <Grid Grid.Row="50" Grid.Column="2">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <TextBlock
                        Grid.Column="0"
                        VerticalAlignment="Center"
                        Text="{x:Static p:Resources.Voltage_alarm_threshold}"
                        TextTrimming="CharacterEllipsis"
                        ToolTip="{x:Static p:Resources.Voltage_alarm_threshold}" />
                    <materialDesign:PackIcon
                        Grid.Column="1"
                        VerticalAlignment="Center"
                        Kind="Information"
                        ToolTip="{x:Static p:Resources._1___10000__0_1_V__alarm_enabled_}" />
                </Grid>
                <TextBox
                    x:Name="TxtVoltageAlarmThreshold"
                    Grid.Row="50"
                    Grid.Column="3"
                    Margin="8,0"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Top"
                    materialDesign:HintAssist.Hint="0 ~ 10000 (0.1 V)"
                    materialDesign:ValidationAssist.Suppress="True">
                    <TextBox.Style>
                        <Style BasedOn="{StaticResource MaterialDesignFilledTextBox}" TargetType="{x:Type TextBox}">
                            <Style.Triggers>
                                <Trigger Property="Validation.HasError" Value="true">
                                    <Setter Property="ToolTip" Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors)/ErrorContent}" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </TextBox.Style>
                    <TextBox.Text>
                        <Binding
                            Mode="TwoWay"
                            Path="VoltageAlarmThreshold"
                            UpdateSourceTrigger="PropertyChanged"
                            ValidatesOnDataErrors="True">
                            <Binding.ValidationRules>
                                <validator:NumberRangeValidationRule Max="10000" Min="0" />
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                </TextBox>
                <Button
                    Grid.Row="50"
                    Grid.Column="4"
                    Margin="8,0"
                    VerticalAlignment="Center"
                    Command="{Binding GetVoltageAlarmThresholdCommand}"
                    CommandParameter="{Binding ZwaveDetailDevice.SelectedProjectModel, Source={StaticResource Locator}}"
                    Content="{x:Static p:Resources.Get}" />
                <Button
                    Grid.Row="50"
                    Grid.Column="5"
                    Margin="8,0"
                    VerticalAlignment="Center"
                    Command="{Binding SetVoltageAlarmThresholdCommand}"
                    CommandParameter="{Binding ZwaveDetailDevice.SelectedProjectModel, Source={StaticResource Locator}}"
                    Content="{x:Static p:Resources.Set}">
                    <Button.Style>
                        <Style BasedOn="{StaticResource MaterialDesignRaisedButton}" TargetType="Button">
                            <Setter Property="IsEnabled" Value="False" />
                            <Style.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding Path=(Validation.HasError), UpdateSourceTrigger=PropertyChanged, ElementName=TxtVoltageAlarmThreshold}" Value="False" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="IsEnabled" Value="True" />
                                </MultiDataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>

                <Separator
                    Grid.Row="51"
                    Grid.Column="0"
                    Grid.ColumnSpan="6"
                    Style="{StaticResource MaterialDesignDarkSeparator}" />
                <TextBlock
                    Grid.Row="52"
                    Grid.Column="0"
                    Margin="0,0,8,0"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Text="34" />
                <TextBlock
                    Grid.Row="52"
                    Grid.Column="1"
                    Margin="0,0,8,0"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Text="2" />
                <Grid Grid.Row="52" Grid.Column="2">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <TextBlock
                        Grid.Column="0"
                        VerticalAlignment="Center"
                        Text="{x:Static p:Resources.The_instantaneous_consumption_alarm_threshold}"
                        TextTrimming="CharacterEllipsis"
                        ToolTip="{x:Static p:Resources.The_instantaneous_consumption_alarm_threshold}" />
                    <materialDesign:PackIcon
                        Grid.Column="1"
                        VerticalAlignment="Center"
                        Kind="Information"
                        ToolTip="{x:Static p:Resources._1___3000__0_1_W__alarm_enabled_}" />
                </Grid>
                <TextBox
                    x:Name="TxtInstantaneouscConsumptionAlarmThreshold"
                    Grid.Row="52"
                    Grid.Column="3"
                    Margin="8,0"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Top"
                    materialDesign:HintAssist.Hint="0 ~ 3000 (0.1 W)"
                    materialDesign:ValidationAssist.Suppress="True">
                    <TextBox.Style>
                        <Style BasedOn="{StaticResource MaterialDesignFilledTextBox}" TargetType="{x:Type TextBox}">
                            <Style.Triggers>
                                <Trigger Property="Validation.HasError" Value="true">
                                    <Setter Property="ToolTip" Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors)/ErrorContent}" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </TextBox.Style>
                    <TextBox.Text>
                        <Binding
                            Mode="TwoWay"
                            Path="InstantaneouscConsumptionAlarmThreshold"
                            UpdateSourceTrigger="PropertyChanged"
                            ValidatesOnDataErrors="True">
                            <Binding.ValidationRules>
                                <validator:NumberRangeValidationRule Max="3000" Min="0" />
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                </TextBox>
                <Button
                    Grid.Row="52"
                    Grid.Column="4"
                    Margin="8,0"
                    VerticalAlignment="Center"
                    Command="{Binding GetInstantaneouscConsumptionAlarmThresholdCommand}"
                    CommandParameter="{Binding ZwaveDetailDevice.SelectedProjectModel, Source={StaticResource Locator}}"
                    Content="{x:Static p:Resources.Get}" />
                <Button
                    Grid.Row="52"
                    Grid.Column="5"
                    Margin="8,0"
                    VerticalAlignment="Center"
                    Command="{Binding SetInstantaneouscConsumptionAlarmThresholdCommand}"
                    CommandParameter="{Binding ZwaveDetailDevice.SelectedProjectModel, Source={StaticResource Locator}}"
                    Content="{x:Static p:Resources.Set}">
                    <Button.Style>
                        <Style BasedOn="{StaticResource MaterialDesignRaisedButton}" TargetType="Button">
                            <Setter Property="IsEnabled" Value="False" />
                            <Style.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding Path=(Validation.HasError), UpdateSourceTrigger=PropertyChanged, ElementName=TxtInstantaneouscConsumptionAlarmThreshold}" Value="False" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="IsEnabled" Value="True" />
                                </MultiDataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>

                <Separator
                    Grid.Row="53"
                    Grid.Column="0"
                    Grid.ColumnSpan="6"
                    Style="{StaticResource MaterialDesignDarkSeparator}" />
                <TextBlock
                    Grid.Row="54"
                    Grid.Column="0"
                    Margin="0,0,8,0"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Text="35" />
                <TextBlock
                    Grid.Row="54"
                    Grid.Column="1"
                    Margin="0,0,8,0"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Text="2" />
                <Grid Grid.Row="54" Grid.Column="2">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <TextBlock
                        Grid.Column="0"
                        VerticalAlignment="Center"
                        Text="{x:Static p:Resources.Overload_time_before_load_off}"
                        TextTrimming="CharacterEllipsis"
                        ToolTip="{x:Static p:Resources.Overload_time_before_load_off}" />
                    <materialDesign:PackIcon
                        Grid.Column="1"
                        VerticalAlignment="Center"
                        Kind="Information"
                        ToolTip="{x:Static p:Resources._1___255_sec__To_protect_the_device_from_not_overload_burned}" />
                </Grid>
                <TextBox
                    x:Name="TxtOverloadTimeBeforeLoadOff"
                    Grid.Row="54"
                    Grid.Column="3"
                    Margin="8,0"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Top"
                    materialDesign:HintAssist.Hint="0 ~ 255 (sec.)"
                    materialDesign:ValidationAssist.Suppress="True">
                    <TextBox.Style>
                        <Style BasedOn="{StaticResource MaterialDesignFilledTextBox}" TargetType="{x:Type TextBox}">
                            <Style.Triggers>
                                <Trigger Property="Validation.HasError" Value="true">
                                    <Setter Property="ToolTip" Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors)/ErrorContent}" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </TextBox.Style>
                    <TextBox.Text>
                        <Binding
                            Mode="TwoWay"
                            Path="OverloadTimeBeforeLoadOff"
                            UpdateSourceTrigger="PropertyChanged"
                            ValidatesOnDataErrors="True">
                            <Binding.ValidationRules>
                                <validator:NumberRangeValidationRule Max="255" Min="0" />
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                </TextBox>
                <Button
                    Grid.Row="54"
                    Grid.Column="4"
                    Margin="8,0"
                    VerticalAlignment="Center"
                    Command="{Binding GetOverloadTimeBeforeLoadOffCommand}"
                    CommandParameter="{Binding ZwaveDetailDevice.SelectedProjectModel, Source={StaticResource Locator}}"
                    Content="{x:Static p:Resources.Get}" />
                <Button
                    Grid.Row="54"
                    Grid.Column="5"
                    Margin="8,0"
                    VerticalAlignment="Center"
                    Command="{Binding SetOverloadTimeBeforeLoadOffCommand}"
                    CommandParameter="{Binding ZwaveDetailDevice.SelectedProjectModel, Source={StaticResource Locator}}"
                    Content="{x:Static p:Resources.Set}">
                    <Button.Style>
                        <Style BasedOn="{StaticResource MaterialDesignRaisedButton}" TargetType="Button">
                            <Setter Property="IsEnabled" Value="False" />
                            <Style.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding Path=(Validation.HasError), UpdateSourceTrigger=PropertyChanged, ElementName=TxtOverloadTimeBeforeLoadOff}" Value="False" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="IsEnabled" Value="True" />
                                </MultiDataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>

                <Separator
                    Grid.Row="55"
                    Grid.Column="0"
                    Grid.ColumnSpan="6"
                    Style="{StaticResource MaterialDesignDarkSeparator}" />
                <TextBlock
                    Grid.Row="56"
                    Grid.Column="0"
                    Margin="0,0,8,0"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Text="36" />
                <TextBlock
                    Grid.Row="56"
                    Grid.Column="1"
                    Margin="0,0,8,0"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Text="1" />
                <Grid Grid.Row="56" Grid.Column="2">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <TextBlock
                        Grid.Column="0"
                        VerticalAlignment="Center"
                        Text="{x:Static p:Resources.Auto_load_off_when_overload}"
                        TextTrimming="CharacterEllipsis"
                        ToolTip="{x:Static p:Resources.Auto_load_off_when_overload}" />
                </Grid>
                <Grid
                    Grid.Row="56"
                    Grid.Column="3"
                    Margin="8,0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <ToggleButton
                        x:Name="TbAutoLoadOffWhenOverload"
                        Grid.Column="0"
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Center"
                        IsChecked="{Binding IsAutoLoadOffWhenOverload, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    <TextBlock
                        Grid.Column="1"
                        Width="72"
                        Margin="8,0,0,2"
                        VerticalAlignment="Center">
                        <TextBlock.Style>
                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="Text" Value="{x:Static p:Resources.Disabled}" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=IsChecked, ElementName=TbAutoLoadOffWhenOverload}" Value="True">
                                        <Setter Property="Text" Value="{x:Static p:Resources.Enabled}" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>
                </Grid>
                <Button
                    Grid.Row="56"
                    Grid.Column="4"
                    Margin="8,0"
                    VerticalAlignment="Center"
                    Command="{Binding GetAutoLoadOffWhenOverloadCommand}"
                    CommandParameter="{Binding ZwaveDetailDevice.SelectedProjectModel, Source={StaticResource Locator}}"
                    Content="{x:Static p:Resources.Get}" />
                <Button
                    Grid.Row="56"
                    Grid.Column="5"
                    Margin="8,0"
                    VerticalAlignment="Center"
                    Command="{Binding SetAutoLoadOffWhenOverloadCommand}"
                    CommandParameter="{Binding ZwaveDetailDevice.SelectedProjectModel, Source={StaticResource Locator}}"
                    Content="{x:Static p:Resources.Set}"
                    Style="{StaticResource MaterialDesignRaisedButton}" />

                <Separator
                    Grid.Row="57"
                    Grid.Column="0"
                    Grid.ColumnSpan="6"
                    Style="{StaticResource MaterialDesignDarkSeparator}" />
                <TextBlock
                    Grid.Row="58"
                    Grid.Column="0"
                    Margin="0,0,8,0"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Text="64" />
                <TextBlock
                    Grid.Row="58"
                    Grid.Column="1"
                    Margin="0,0,8,0"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Text="2" />
                <Grid Grid.Row="58" Grid.Column="2">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <TextBlock
                        Grid.Column="0"
                        VerticalAlignment="Center"
                        Text="{x:Static p:Resources.Detection_ampere_of_overload}"
                        TextTrimming="CharacterEllipsis"
                        ToolTip="{x:Static p:Resources.Detection_ampere_of_overload}" />
                </Grid>
                <TextBox
                    x:Name="TxtDetectionAmpereOverload"
                    Grid.Row="58"
                    Grid.Column="3"
                    Margin="8,0"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Top"
                    materialDesign:ValidationAssist.Suppress="True"
                    IsReadOnly="True"
                    Text="{Binding DetectionAmpereOverload}">
                    <TextBox.Style>
                        <Style BasedOn="{StaticResource MaterialDesignFilledTextBox}" TargetType="{x:Type TextBox}">
                            <Style.Triggers>
                                <Trigger Property="Validation.HasError" Value="true">
                                    <Setter Property="ToolTip" Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors)/ErrorContent}" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </TextBox.Style>
                </TextBox>
                <Button
                    Grid.Row="58"
                    Grid.Column="4"
                    Margin="8,0"
                    VerticalAlignment="Center"
                    Command="{Binding GetDetectionAmpereOverloadCommand}"
                    CommandParameter="{Binding ZwaveDetailDevice.SelectedProjectModel, Source={StaticResource Locator}}"
                    Content="{x:Static p:Resources.Get}" />

                <Separator
                    Grid.Row="59"
                    Grid.Column="0"
                    Grid.ColumnSpan="6"
                    Style="{StaticResource MaterialDesignDarkSeparator}" />
                <TextBlock
                    Grid.Row="60"
                    Grid.Column="0"
                    Margin="0,0,8,0"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Text="65" />
                <TextBlock
                    Grid.Row="60"
                    Grid.Column="1"
                    Margin="0,0,8,0"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Text="2" />
                <Grid Grid.Row="60" Grid.Column="2">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <TextBlock
                        Grid.Column="0"
                        VerticalAlignment="Center"
                        Text="{x:Static p:Resources.Detection_voltage_of_overload}"
                        TextTrimming="CharacterEllipsis"
                        ToolTip="{x:Static p:Resources.Detection_voltage_of_overload}" />
                </Grid>
                <TextBox
                    x:Name="TxtDetectionVoltageOverload"
                    Grid.Row="60"
                    Grid.Column="3"
                    Margin="8,0"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Top"
                    materialDesign:ValidationAssist.Suppress="True"
                    IsReadOnly="True"
                    Text="{Binding DetectionVoltageOverload}">
                    <TextBox.Style>
                        <Style BasedOn="{StaticResource MaterialDesignFilledTextBox}" TargetType="{x:Type TextBox}">
                            <Style.Triggers>
                                <Trigger Property="Validation.HasError" Value="true">
                                    <Setter Property="ToolTip" Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors)/ErrorContent}" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </TextBox.Style>
                </TextBox>
                <Button
                    Grid.Row="60"
                    Grid.Column="4"
                    Margin="8,0"
                    VerticalAlignment="Center"
                    Command="{Binding GetDetectionVoltageOverloadCommand}"
                    CommandParameter="{Binding ZwaveDetailDevice.SelectedProjectModel, Source={StaticResource Locator}}"
                    Content="{x:Static p:Resources.Get}" />

                <Separator
                    Grid.Row="61"
                    Grid.Column="0"
                    Grid.ColumnSpan="6"
                    Style="{StaticResource MaterialDesignDarkSeparator}" />
                <TextBlock
                    Grid.Row="62"
                    Grid.Column="0"
                    Margin="0,0,8,0"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Text="66" />
                <TextBlock
                    Grid.Row="62"
                    Grid.Column="1"
                    Margin="0,0,8,0"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Text="2" />
                <Grid Grid.Row="62" Grid.Column="2">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <TextBlock
                        Grid.Column="0"
                        VerticalAlignment="Center"
                        Text="{x:Static p:Resources.Detection_power_of_overload}"
                        TextTrimming="CharacterEllipsis"
                        ToolTip="{x:Static p:Resources.Detection_power_of_overload}" />
                </Grid>
                <TextBox
                    x:Name="TxtDetectionPowerOverload"
                    Grid.Row="62"
                    Grid.Column="3"
                    Margin="8,0"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Top"
                    materialDesign:ValidationAssist.Suppress="True"
                    IsReadOnly="True"
                    Text="{Binding DetectionPowerOverload}">
                    <TextBox.Style>
                        <Style BasedOn="{StaticResource MaterialDesignFilledTextBox}" TargetType="{x:Type TextBox}">
                            <Style.Triggers>
                                <Trigger Property="Validation.HasError" Value="true">
                                    <Setter Property="ToolTip" Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors)/ErrorContent}" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </TextBox.Style>
                </TextBox>
                <Button
                    Grid.Row="62"
                    Grid.Column="4"
                    Margin="8,0"
                    VerticalAlignment="Center"
                    Command="{Binding GetDetectionPowerOverloadCommand}"
                    CommandParameter="{Binding ZwaveDetailDevice.SelectedProjectModel, Source={StaticResource Locator}}"
                    Content="{x:Static p:Resources.Get}" />
                <Separator
                    Grid.Row="63"
                    Grid.Column="0"
                    Grid.ColumnSpan="6"
                    Style="{StaticResource MaterialDesignDarkSeparator}" />
                <TextBlock
                    Grid.Row="64"
                    Grid.Column="0"
                    Margin="0,0,8,0"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Text="67" />
                <TextBlock
                    Grid.Row="64"
                    Grid.Column="1"
                    Margin="0,0,8,0"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Text="1" />
                <Grid Grid.Row="64" Grid.Column="2">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <TextBlock
                        Grid.Column="0"
                        VerticalAlignment="Center"
                        Text="{x:Static p:Resources.Overload_time}"
                        TextTrimming="CharacterEllipsis"
                        ToolTip="{x:Static p:Resources.Overload_time}" />
                </Grid>
                <TextBox
                    x:Name="TxtOverloadTime"
                    Grid.Row="64"
                    Grid.Column="3"
                    Margin="8,0"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Top"
                    materialDesign:ValidationAssist.Suppress="True"
                    IsReadOnly="True"
                    Text="{Binding OverloadTime}">
                    <TextBox.Style>
                        <Style BasedOn="{StaticResource MaterialDesignFilledTextBox}" TargetType="{x:Type TextBox}">
                            <Style.Triggers>
                                <Trigger Property="Validation.HasError" Value="true">
                                    <Setter Property="ToolTip" Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors)/ErrorContent}" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </TextBox.Style>
                </TextBox>
                <Button
                    Grid.Row="64"
                    Grid.Column="4"
                    Margin="8,0"
                    VerticalAlignment="Center"
                    Command="{Binding GetOverloadTimeCommand}"
                    CommandParameter="{Binding ZwaveDetailDevice.SelectedProjectModel, Source={StaticResource Locator}}"
                    Content="{x:Static p:Resources.Get}" />

                <Separator
                    Grid.Row="65"
                    Grid.Column="0"
                    Grid.ColumnSpan="6"
                    Style="{StaticResource MaterialDesignDarkSeparator}" />
                <TextBlock
                    Grid.Row="66"
                    Grid.Column="0"
                    Margin="0,0,8,0"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Text="255" />
                <TextBlock
                    Grid.Row="66"
                    Grid.Column="1"
                    Margin="0,0,8,0"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Text="1" />
                <Grid Grid.Row="66" Grid.Column="2">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <TextBlock
                        Grid.Column="0"
                        VerticalAlignment="Center"
                        Text="{x:Static p:Resources.Factory_setting}"
                        TextTrimming="CharacterEllipsis"
                        ToolTip="{x:Static p:Resources.Factory_setting}" />
                    <materialDesign:PackIcon
                        Grid.Column="1"
                        VerticalAlignment="Center"
                        Kind="Information"
                        ToolTip="{x:Static p:Resources._85_Restore_factory_settings}" />
                </Grid>
                <TextBox
                    x:Name="TxtFactorySetting"
                    Grid.Row="66"
                    Grid.Column="3"
                    Margin="8,0"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Top"
                    materialDesign:HintAssist.Hint="85"
                    materialDesign:ValidationAssist.Suppress="True"
                    IsReadOnly="True">
                    <TextBox.Style>
                        <Style BasedOn="{StaticResource MaterialDesignFilledTextBox}" TargetType="{x:Type TextBox}">
                            <Style.Triggers>
                                <Trigger Property="Validation.HasError" Value="true">
                                    <Setter Property="ToolTip" Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors)/ErrorContent}" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </TextBox.Style>
                    <TextBox.Text>
                        <Binding
                            Mode="TwoWay"
                            Path="FactorySetting"
                            UpdateSourceTrigger="PropertyChanged"
                            ValidatesOnDataErrors="True">
                            <Binding.ValidationRules>
                                <validator:NumberRangeValidationRule Max="254" Min="0" />
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                </TextBox>
                <Button
                    Grid.Row="66"
                    Grid.Column="5"
                    Margin="8,0"
                    VerticalAlignment="Center"
                    Background="Red"
                    BorderBrush="Red"
                    Command="{Binding SetFactorySettingAwaitCommand}"
                    CommandParameter="{Binding ZwaveDetailDevice.SelectedProjectModel, Source={StaticResource Locator}}"
                    Content="{x:Static p:Resources.Set}">
                    <Button.Style>
                        <Style BasedOn="{StaticResource MaterialDesignRaisedButton}" TargetType="Button">
                            <Setter Property="IsEnabled" Value="False" />
                            <Style.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding Path=(Validation.HasError), UpdateSourceTrigger=PropertyChanged, ElementName=TxtFactorySetting}" Value="False" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="IsEnabled" Value="True" />
                                </MultiDataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
            </Grid>
        </Expander>
    </materialDesign:DialogHost>
</UserControl>