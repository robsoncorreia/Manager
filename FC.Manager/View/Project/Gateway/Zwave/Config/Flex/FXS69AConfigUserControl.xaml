<UserControl
    x:Class="FC.Manager.View.Project.Gateway.Zwave.Config.Flex.FXS69AConfigUserControl"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:p="clr-namespace:FC.Domain.Properties;assembly=FC.Domain"
    xmlns:validator="clr-namespace:FC.Domain.Validator;assembly=FC.Domain"
    d:DesignHeight="450"
    d:DesignWidth="800"
    DataContext="{Binding FXS69AConfig, Source={StaticResource Locator}}"
    mc:Ignorable="d">
    <materialDesign:DialogHost
        DialogContent="{Binding DialogContent}"
        FocusVisualStyle="{x:Null}"
        IsOpen="{Binding IsOpenDialogHost}">
        <Expander
            Padding="16"
            materialDesign:ThemeAssist.Theme="Dark"
            Background="#60000000"
            BorderBrush="Black"
            BorderThickness="2"
            Header="{x:Static p:Resources.Advanced_Settings}">
            <Grid>
                <Grid.Resources>
                    <Style TargetType="{x:Type materialDesign:PackIcon}">
                        <Setter Property="Margin" Value="8,0,0,0" />
                        <Setter Property="Foreground" Value="{StaticResource DenimBillson}" />
                    </Style>
                    <Style BasedOn="{StaticResource {x:Type ToolTip}}" TargetType="ToolTip">
                        <Style.Resources>
                            <Style TargetType="ContentPresenter">
                                <Style.Resources>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="TextWrapping" Value="Wrap" />
                                    </Style>
                                </Style.Resources>
                            </Style>
                        </Style.Resources>
                        <Setter Property="MaxWidth" Value="233" />
                    </Style>
                </Grid.Resources>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <!--<Button
                    Grid.Row="0"
                    Grid.Column="0"
                    Grid.ColumnSpan="6"
                    Margin="0,0,0,16"
                    Command="{Binding OpenDocumentationCommand}"
                    Content="{x:Static p:Resources.Documentation}"
                    Style="{StaticResource MaterialDesignOutlinedButton}" />-->
                <Separator
                    Grid.Row="1"
                    Grid.Column="0"
                    Grid.ColumnSpan="6"
                    Style="{StaticResource MaterialDesignDarkSeparator}" />
                <TextBlock
                    Grid.Row="2"
                    Grid.Column="0"
                    Grid.ColumnSpan="3"
                    Margin="8,0"
                    VerticalAlignment="Center"
                    FontWeight="Bold"
                    Foreground="PaleVioletRed"
                    Text="{x:Static p:Resources.Make_sure_the_devices_are_awake}" />
                <Button
                    Grid.Row="2"
                    Grid.Column="4"
                    Grid.ColumnSpan="2"
                    Margin="8,0"
                    VerticalAlignment="Center"
                    Command="{Binding GetAllCommand}"
                    CommandParameter="{Binding ZwaveDetailDevice.SelectedProjectModel, Source={StaticResource Locator}}"
                    Content="{x:Static p:Resources.Get_All}" />
                <Separator
                    Grid.Row="3"
                    Grid.Column="0"
                    Grid.ColumnSpan="6"
                    Style="{StaticResource MaterialDesignDarkSeparator}" />
                <TextBlock
                    Grid.Row="7"
                    Grid.Column="0"
                    Margin="8,0"
                    Text="{x:Static p:Resources.Parameter}" />
                <TextBlock
                    Grid.Row="7"
                    Grid.Column="1"
                    Margin="8,0"
                    Text="{x:Static p:Resources.Size}" />
                <TextBlock
                    Grid.Row="7"
                    Grid.Column="3"
                    Margin="8,0"
                    HorizontalAlignment="Center"
                    Text="{x:Static p:Resources.Value}" />
                <TextBlock
                    Grid.Row="7"
                    Grid.Column="4"
                    Grid.ColumnSpan="2"
                    Margin="8,0"
                    HorizontalAlignment="Center"
                    Text="{x:Static p:Resources.Actions}" />
                <Separator
                    Grid.Row="8"
                    Grid.Column="0"
                    Grid.ColumnSpan="6"
                    Style="{StaticResource MaterialDesignDarkSeparator}" />
                <TextBlock
                    Grid.Row="9"
                    Grid.Column="0"
                    Margin="0,0,8,0"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Text="1" />
                <TextBlock
                    Grid.Row="9"
                    Grid.Column="1"
                    Margin="0,0,8,0"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Text="1" />
                <StackPanel
                    Grid.Row="9"
                    Grid.Column="2"
                    Orientation="Horizontal">
                    <TextBlock VerticalAlignment="Center" Text="{x:Static p:Resources.Changes_the_LED_indication_status}" />
                    <materialDesign:PackIcon
                        VerticalAlignment="Center"
                        Kind="Information"
                        ToolTip="{x:Static p:Resources.When_the_value_is}" />
                </StackPanel>
                <TextBox
                    x:Name="TxtLEDIndication"
                    Grid.Row="9"
                    Grid.Column="3"
                    Margin="8,0"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Top"
                    materialDesign:HintAssist.Hint="0 ~ 1"
                    materialDesign:ValidationAssist.Suppress="True">
                    <TextBox.Style>
                        <Style BasedOn="{StaticResource MaterialDesignFilledTextBox}" TargetType="{x:Type TextBox}">
                            <Style.Triggers>
                                <Trigger Property="Validation.HasError" Value="true">
                                    <Setter Property="ToolTip" Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors)/ErrorContent}" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </TextBox.Style>
                    <TextBox.Text>
                        <Binding
                            Mode="TwoWay"
                            Path="LEDIndication"
                            UpdateSourceTrigger="PropertyChanged"
                            ValidatesOnDataErrors="True">
                            <Binding.ValidationRules>
                                <validator:NumberRangeValidationRule Max="1" Min="0" />
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                </TextBox>
                <Button
                    Grid.Row="9"
                    Grid.Column="4"
                    Margin="8,0"
                    VerticalAlignment="Center"
                    Command="{Binding GetLEDIndicationCommand}"
                    CommandParameter="{Binding ZwaveDetailDevice.SelectedProjectModel, Source={StaticResource Locator}}"
                    Content="{x:Static p:Resources.Get}" />
                <Button
                    Grid.Row="9"
                    Grid.Column="5"
                    Margin="8,0"
                    VerticalAlignment="Center"
                    Command="{Binding SetLEDIndicationCommand}"
                    CommandParameter="{Binding ZwaveDetailDevice.SelectedProjectModel, Source={StaticResource Locator}}"
                    Content="{x:Static p:Resources.Set}">
                    <Button.Style>
                        <Style BasedOn="{StaticResource MaterialDesignRaisedButton}" TargetType="Button">
                            <Setter Property="IsEnabled" Value="False" />
                            <Style.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding Path=(Validation.HasError), UpdateSourceTrigger=PropertyChanged, ElementName=TxtLEDIndication}" Value="False" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="IsEnabled" Value="True" />
                                </MultiDataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
                <Separator
                    Grid.Row="10"
                    Grid.Column="0"
                    Grid.ColumnSpan="6"
                    Style="{StaticResource MaterialDesignDarkSeparator}" />
                <TextBlock
                    Grid.Row="11"
                    Grid.Column="0"
                    Margin="0,0,8,0"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Text="2" />
                <TextBlock
                    Grid.Row="11"
                    Grid.Column="1"
                    Margin="0,0,8,0"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Text="1" />
                <StackPanel
                    Grid.Row="11"
                    Grid.Column="2"
                    Orientation="Horizontal">
                    <TextBlock VerticalAlignment="Center" Text="{x:Static p:Resources.Memory_function}" />
                    <materialDesign:PackIcon
                        VerticalAlignment="Center"
                        Kind="Information"
                        ToolTip="{x:Static p:Resources.When_turned_on_the_memory}" />
                </StackPanel>
                <StackPanel
                    Grid.Row="11"
                    Grid.Column="3"
                    Margin="8,0"
                    Orientation="Horizontal">
                    <ToggleButton
                        x:Name="TbMemoryFunction"
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Center"
                        IsChecked="{Binding IsMemoryFunction}" />
                    <TextBlock Margin="8,0,0,2" VerticalAlignment="Center">
                        <TextBlock.Style>
                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="Text" Value="{x:Static p:Resources.Disabled}" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=IsChecked, ElementName=TbMemoryFunction}" Value="True">
                                        <Setter Property="Text" Value="{x:Static p:Resources.Enabled}" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>
                </StackPanel>
                <Button
                    Grid.Row="11"
                    Grid.Column="4"
                    Margin="8,0"
                    VerticalAlignment="Center"
                    Command="{Binding GetMemoryFunctionCommand}"
                    CommandParameter="{Binding ZwaveDetailDevice.SelectedProjectModel, Source={StaticResource Locator}}"
                    Content="{x:Static p:Resources.Get}" />
                <Button
                    Grid.Row="11"
                    Grid.Column="5"
                    Margin="8,0"
                    VerticalAlignment="Center"
                    Command="{Binding SetMemoryFunctionCommand}"
                    CommandParameter="{Binding ZwaveDetailDevice.SelectedProjectModel, Source={StaticResource Locator}}"
                    Content="{x:Static p:Resources.Set}"
                    Style="{StaticResource MaterialDesignRaisedButton}" />
                <Separator
                    Grid.Row="12"
                    Grid.Column="0"
                    Grid.ColumnSpan="6"
                    Style="{StaticResource MaterialDesignDarkSeparator}" />
                <TextBlock
                    Grid.Row="13"
                    Grid.Column="0"
                    Margin="0,0,8,0"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Text="3" />
                <TextBlock
                    Grid.Row="13"
                    Grid.Column="1"
                    Margin="0,0,8,0"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Text="2" />
                <StackPanel
                    Grid.Row="13"
                    Grid.Column="2"
                    Orientation="Horizontal">
                    <TextBlock VerticalAlignment="Center" Text="{x:Static p:Resources.Report_watt_meter_period}" />
                    <materialDesign:PackIcon
                        VerticalAlignment="Center"
                        Kind="Information"
                        ToolTip="{x:Static p:Resources.If_the_option_is_set_to}" />
                </StackPanel>
                <TextBox
                    x:Name="TxtReportWattMeterPeriod"
                    Grid.Row="13"
                    Grid.Column="3"
                    Margin="8,0"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Top"
                    materialDesign:HintAssist.Hint="1 ~ 32767 (5 seg.)"
                    materialDesign:ValidationAssist.Suppress="True">
                    <TextBox.Style>
                        <Style BasedOn="{StaticResource MaterialDesignFilledTextBox}" TargetType="{x:Type TextBox}">
                            <Style.Triggers>
                                <Trigger Property="Validation.HasError" Value="true">
                                    <Setter Property="ToolTip" Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors)/ErrorContent}" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </TextBox.Style>
                    <TextBox.Text>
                        <Binding
                            Mode="TwoWay"
                            Path="ReportWattMeterPeriod"
                            UpdateSourceTrigger="PropertyChanged"
                            ValidatesOnDataErrors="True">
                            <Binding.ValidationRules>
                                <validator:NumberRangeValidationRule Max="32767" Min="1" />
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                </TextBox>
                <Button
                    Grid.Row="13"
                    Grid.Column="4"
                    Margin="8,0"
                    VerticalAlignment="Center"
                    Command="{Binding GetReportWattMeterPeriodCommand}"
                    CommandParameter="{Binding ZwaveDetailDevice.SelectedProjectModel, Source={StaticResource Locator}}"
                    Content="{x:Static p:Resources.Get}" />
                <Button
                    Grid.Row="13"
                    Grid.Column="5"
                    Margin="8,0"
                    VerticalAlignment="Center"
                    Command="{Binding SetReportWattMeterPeriodCommand}"
                    CommandParameter="{Binding ZwaveDetailDevice.SelectedProjectModel, Source={StaticResource Locator}}"
                    Content="{x:Static p:Resources.Set}">
                    <Button.Style>
                        <Style BasedOn="{StaticResource MaterialDesignRaisedButton}" TargetType="Button">
                            <Setter Property="IsEnabled" Value="False" />
                            <Style.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding Path=(Validation.HasError), UpdateSourceTrigger=PropertyChanged, ElementName=TxtReportWattMeterPeriod}" Value="False" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="IsEnabled" Value="True" />
                                </MultiDataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
                <Separator
                    Grid.Row="14"
                    Grid.Column="0"
                    Grid.ColumnSpan="6"
                    Style="{StaticResource MaterialDesignDarkSeparator}" />
                <TextBlock
                    Grid.Row="15"
                    Grid.Column="0"
                    Margin="0,0,8,0"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Text="4" />
                <TextBlock
                    Grid.Row="15"
                    Grid.Column="1"
                    Margin="0,0,8,0"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Text="2" />
                <StackPanel
                    Grid.Row="15"
                    Grid.Column="2"
                    Orientation="Horizontal">
                    <TextBlock VerticalAlignment="Center" Text="{x:Static p:Resources.Report_KWh_meter_period}" />
                    <materialDesign:PackIcon
                        VerticalAlignment="Center"
                        Kind="Information"
                        ToolTip="{x:Static p:Resources.The_module_power}" />
                </StackPanel>
                <TextBox
                    x:Name="TxtReportKWhMeterPeriod"
                    Grid.Row="15"
                    Grid.Column="3"
                    Margin="8,0"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Top"
                    materialDesign:HintAssist.Hint="1 ~ 32767 (10 min.)"
                    materialDesign:ValidationAssist.Suppress="True">
                    <TextBox.Style>
                        <Style BasedOn="{StaticResource MaterialDesignFilledTextBox}" TargetType="{x:Type TextBox}">
                            <Style.Triggers>
                                <Trigger Property="Validation.HasError" Value="true">
                                    <Setter Property="ToolTip" Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors)/ErrorContent}" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </TextBox.Style>
                    <TextBox.Text>
                        <Binding
                            Mode="TwoWay"
                            Path="ReportKWhMeterPeriod"
                            UpdateSourceTrigger="PropertyChanged"
                            ValidatesOnDataErrors="True">
                            <Binding.ValidationRules>
                                <validator:NumberRangeValidationRule Max="32767" Min="1" />
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                </TextBox>
                <Button
                    Grid.Row="15"
                    Grid.Column="4"
                    Margin="8,0"
                    VerticalAlignment="Center"
                    Command="{Binding GetReportKWhMeterPeriodCommand}"
                    CommandParameter="{Binding ZwaveDetailDevice.SelectedProjectModel, Source={StaticResource Locator}}"
                    Content="{x:Static p:Resources.Get}" />
                <Button
                    Grid.Row="15"
                    Grid.Column="5"
                    Margin="8,0"
                    VerticalAlignment="Center"
                    Command="{Binding SetReportKWhMeterPeriodCommand}"
                    CommandParameter="{Binding ZwaveDetailDevice.SelectedProjectModel, Source={StaticResource Locator}}"
                    Content="{x:Static p:Resources.Set}">
                    <Button.Style>
                        <Style BasedOn="{StaticResource MaterialDesignRaisedButton}" TargetType="Button">
                            <Setter Property="IsEnabled" Value="False" />
                            <Style.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding Path=(Validation.HasError), UpdateSourceTrigger=PropertyChanged, ElementName=TxtReportKWhMeterPeriod}" Value="False" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="IsEnabled" Value="True" />
                                </MultiDataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
                <Separator
                    Grid.Row="16"
                    Grid.Column="0"
                    Grid.ColumnSpan="6"
                    Style="{StaticResource MaterialDesignDarkSeparator}" />
                <TextBlock
                    Grid.Row="17"
                    Grid.Column="0"
                    Margin="0,0,8,0"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Text="5" />
                <TextBlock
                    Grid.Row="17"
                    Grid.Column="1"
                    Margin="0,0,8,0"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Text="2" />
                <StackPanel
                    Grid.Row="17"
                    Grid.Column="2"
                    Orientation="Horizontal">
                    <TextBlock VerticalAlignment="Center" Text="{x:Static p:Resources.Load_power_threshold_in_Watt}" />
                    <materialDesign:PackIcon
                        VerticalAlignment="Center"
                        Kind="Information"
                        ToolTip="{x:Static p:Resources.When_the_set_value_is_3000}" />
                </StackPanel>
                <TextBox
                    x:Name="TxtLoadPowerThreshold"
                    Grid.Row="17"
                    Grid.Column="3"
                    Margin="8,0"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Top"
                    materialDesign:HintAssist.Hint="10 ~ 3000 (1 Watt)"
                    materialDesign:ValidationAssist.Suppress="True">
                    <TextBox.Style>
                        <Style BasedOn="{StaticResource MaterialDesignFilledTextBox}" TargetType="{x:Type TextBox}">
                            <Style.Triggers>
                                <Trigger Property="Validation.HasError" Value="true">
                                    <Setter Property="ToolTip" Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors)/ErrorContent}" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </TextBox.Style>
                    <TextBox.Text>
                        <Binding
                            Mode="TwoWay"
                            Path="LoadPowerThreshold"
                            UpdateSourceTrigger="PropertyChanged"
                            ValidatesOnDataErrors="True">
                            <Binding.ValidationRules>
                                <validator:NumberRangeValidationRule Max="3000" Min="10" />
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                </TextBox>
                <Button
                    Grid.Row="17"
                    Grid.Column="4"
                    Margin="8,0"
                    VerticalAlignment="Center"
                    Command="{Binding GetLoadPowerThresholdCommand}"
                    CommandParameter="{Binding ZwaveDetailDevice.SelectedProjectModel, Source={StaticResource Locator}}"
                    Content="{x:Static p:Resources.Get}" />
                <Button
                    Grid.Row="17"
                    Grid.Column="5"
                    Margin="8,0"
                    VerticalAlignment="Center"
                    Command="{Binding SetLoadPowerThresholdCommand}"
                    CommandParameter="{Binding ZwaveDetailDevice.SelectedProjectModel, Source={StaticResource Locator}}"
                    Content="{x:Static p:Resources.Set}">
                    <Button.Style>
                        <Style BasedOn="{StaticResource MaterialDesignRaisedButton}" TargetType="Button">
                            <Setter Property="IsEnabled" Value="False" />
                            <Style.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding Path=(Validation.HasError), UpdateSourceTrigger=PropertyChanged, ElementName=TxtLoadPowerThreshold}" Value="False" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="IsEnabled" Value="True" />
                                </MultiDataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
                <Separator
                    Grid.Row="18"
                    Grid.Column="0"
                    Grid.ColumnSpan="6"
                    Style="{StaticResource MaterialDesignDarkSeparator}" />
                <TextBlock
                    Grid.Row="19"
                    Grid.Column="0"
                    Margin="0,0,8,0"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Text="6" />
                <TextBlock
                    Grid.Row="19"
                    Grid.Column="1"
                    Margin="0,0,8,0"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Text="2" />
                <StackPanel
                    Grid.Row="19"
                    Grid.Column="2"
                    Orientation="Horizontal">
                    <TextBlock VerticalAlignment="Center" Text="{x:Static p:Resources.Load_power_threshold_in_KWh}" />
                    <materialDesign:PackIcon
                        VerticalAlignment="Center"
                        Kind="Information"
                        ToolTip="{x:Static p:Resources.When_the_set_value_is_10000}" />
                </StackPanel>
                <TextBox
                    x:Name="TxtLoadPowerThresholdKWh"
                    Grid.Row="19"
                    Grid.Column="3"
                    Margin="8,0"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Top"
                    materialDesign:HintAssist.Hint="1 ~ 10000 (1 KWh)"
                    materialDesign:ValidationAssist.Suppress="True">
                    <TextBox.Style>
                        <Style BasedOn="{StaticResource MaterialDesignFilledTextBox}" TargetType="{x:Type TextBox}">
                            <Style.Triggers>
                                <Trigger Property="Validation.HasError" Value="true">
                                    <Setter Property="ToolTip" Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors)/ErrorContent}" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </TextBox.Style>
                    <TextBox.Text>
                        <Binding
                            Mode="TwoWay"
                            Path="LoadPowerThresholdKWh"
                            UpdateSourceTrigger="PropertyChanged"
                            ValidatesOnDataErrors="True">
                            <Binding.ValidationRules>
                                <validator:NumberRangeValidationRule Max="3000" Min="10" />
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                </TextBox>
                <Button
                    Grid.Row="19"
                    Grid.Column="4"
                    Margin="8,0"
                    VerticalAlignment="Center"
                    Command="{Binding GetLoadPowerThresholdKWhCommand}"
                    CommandParameter="{Binding ZwaveDetailDevice.SelectedProjectModel, Source={StaticResource Locator}}"
                    Content="{x:Static p:Resources.Get}" />
                <Button
                    Grid.Row="19"
                    Grid.Column="5"
                    Margin="8,0"
                    VerticalAlignment="Center"
                    Command="{Binding SetLoadPowerThresholdKWhCommand}"
                    CommandParameter="{Binding ZwaveDetailDevice.SelectedProjectModel, Source={StaticResource Locator}}"
                    Content="{x:Static p:Resources.Set}">
                    <Button.Style>
                        <Style BasedOn="{StaticResource MaterialDesignRaisedButton}" TargetType="Button">
                            <Setter Property="IsEnabled" Value="False" />
                            <Style.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding Path=(Validation.HasError), UpdateSourceTrigger=PropertyChanged, ElementName=TxtLoadPowerThresholdKWh}" Value="False" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="IsEnabled" Value="True" />
                                </MultiDataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
                <Separator
                    Grid.Row="21"
                    Grid.Column="0"
                    Grid.ColumnSpan="6"
                    Style="{StaticResource MaterialDesignDarkSeparator}" />
                <TextBlock
                    Grid.Row="22"
                    Grid.Column="0"
                    Margin="0,0,8,0"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Text="7" />
                <TextBlock
                    Grid.Row="22"
                    Grid.Column="1"
                    Margin="0,0,8,0"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Text="1" />
                <StackPanel
                    Grid.Row="22"
                    Grid.Column="2"
                    Orientation="Horizontal">
                    <TextBlock VerticalAlignment="Center" Text="{x:Static p:Resources.Front_button_actuation_mode}" />
                    <materialDesign:PackIcon
                        VerticalAlignment="Center"
                        Kind="Information"
                        ToolTip="{x:Static p:Resources.When_the_value_is_0_for}" />
                </StackPanel>
                <TextBox
                    x:Name="TxtFrontButtonActuationMode"
                    Grid.Row="22"
                    Grid.Column="3"
                    Margin="8,0"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Top"
                    materialDesign:HintAssist.Hint="0 ~ 1"
                    materialDesign:ValidationAssist.Suppress="True">
                    <TextBox.Style>
                        <Style BasedOn="{StaticResource MaterialDesignFilledTextBox}" TargetType="{x:Type TextBox}">
                            <Style.Triggers>
                                <Trigger Property="Validation.HasError" Value="true">
                                    <Setter Property="ToolTip" Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors)/ErrorContent}" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </TextBox.Style>
                    <TextBox.Text>
                        <Binding
                            Mode="TwoWay"
                            Path="FrontButtonActuationMode"
                            UpdateSourceTrigger="PropertyChanged"
                            ValidatesOnDataErrors="True">
                            <Binding.ValidationRules>
                                <validator:NumberRangeValidationRule Max="1" Min="0" />
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                </TextBox>
                <Button
                    Grid.Row="22"
                    Grid.Column="4"
                    Margin="8,0"
                    VerticalAlignment="Center"
                    Command="{Binding GetFrontButtonActuationModeCommand}"
                    CommandParameter="{Binding ZwaveDetailDevice.SelectedProjectModel, Source={StaticResource Locator}}"
                    Content="{x:Static p:Resources.Get}" />
                <Button
                    Grid.Row="22"
                    Grid.Column="5"
                    Margin="8,0"
                    VerticalAlignment="Center"
                    Command="{Binding SetFrontButtonActuationModeCommand}"
                    CommandParameter="{Binding ZwaveDetailDevice.SelectedProjectModel, Source={StaticResource Locator}}"
                    Content="{x:Static p:Resources.Set}">
                    <Button.Style>
                        <Style BasedOn="{StaticResource MaterialDesignRaisedButton}" TargetType="Button">
                            <Setter Property="IsEnabled" Value="False" />
                            <Style.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding Path=(Validation.HasError), UpdateSourceTrigger=PropertyChanged, ElementName=TxtFrontButtonActuationMode}" Value="False" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="IsEnabled" Value="True" />
                                </MultiDataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
            </Grid>
        </Expander>
    </materialDesign:DialogHost>
</UserControl>