<UserControl
    x:Class="FC.Manager.View.Project.Gateway.Zwave.Config.Flex.FXD5011ConfigUserControl"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:p="clr-namespace:FC.Domain.Properties;assembly=FC.Domain"
    xmlns:validator="clr-namespace:FC.Domain.Validator;assembly=FC.Domain"
    d:DesignHeight="450"
    d:DesignWidth="800"
    DataContext="{Binding FXD5011Config, Source={StaticResource Locator}}"
    mc:Ignorable="d">
    <materialDesign:DialogHost
        DialogContent="{Binding DialogContent}"
        FocusVisualStyle="{x:Null}"
        IsOpen="{Binding IsOpenDialogHost}">
        <Grid>
            <Grid.Resources>
                <Style TargetType="{x:Type materialDesign:PackIcon}">
                    <Setter Property="Margin" Value="8,0,0,0" />
                    <Setter Property="Foreground" Value="{StaticResource DenimBillson}" />
                </Style>
                <Style BasedOn="{StaticResource {x:Type ToolTip}}" TargetType="ToolTip">
                    <Style.Resources>
                        <Style TargetType="ContentPresenter">
                            <Style.Resources>
                                <Style TargetType="TextBlock">
                                    <Setter Property="TextWrapping" Value="Wrap" />
                                </Style>
                            </Style.Resources>
                        </Style>
                    </Style.Resources>
                    <Setter Property="MaxWidth" Value="233" />
                </Style>
            </Grid.Resources>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Button
                Grid.Row="0"
                Grid.Column="0"
                Grid.ColumnSpan="6"
                Margin="0,0,0,16"
                Command="{Binding OpenDocumentationCommand}"
                Content="{x:Static p:Resources.Documentation}"
                Style="{StaticResource MaterialDesignOutlinedButton}" />
            <Separator
                Grid.Row="1"
                Grid.Column="0"
                Grid.ColumnSpan="6"
                Style="{StaticResource MaterialDesignDarkSeparator}" />
            <Button
                Grid.Row="2"
                Grid.Column="4"
                Grid.ColumnSpan="2"
                Margin="8,0"
                VerticalAlignment="Center"
                Command="{Binding GetAllCommand}"
                CommandParameter="{Binding ZwaveDetailDevice.SelectedProjectModel, Source={StaticResource Locator}}"
                Content="{x:Static p:Resources.Get_All}"
                Style="{StaticResource GetAllFlatButton}" />
            <Separator
                Grid.Row="3"
                Grid.Column="0"
                Grid.ColumnSpan="6"
                Style="{StaticResource MaterialDesignDarkSeparator}" />
            <TextBlock
                Grid.Row="7"
                Grid.Column="0"
                Margin="8,0"
                Text="{x:Static p:Resources.Parameter}" />
            <TextBlock
                Grid.Row="7"
                Grid.Column="1"
                Margin="8,0"
                Text="{x:Static p:Resources.Size}" />
            <TextBlock
                Grid.Row="7"
                Grid.Column="3"
                Margin="8,0"
                HorizontalAlignment="Center"
                Text="{x:Static p:Resources.Value}" />
            <TextBlock
                Grid.Row="7"
                Grid.Column="4"
                Grid.ColumnSpan="2"
                Margin="8,0"
                HorizontalAlignment="Center"
                Text="{x:Static p:Resources.Actions}" />
            <Separator
                Grid.Row="8"
                Grid.Column="0"
                Grid.ColumnSpan="6"
                Style="{StaticResource MaterialDesignDarkSeparator}" />
            <TextBlock
                Grid.Row="9"
                Grid.Column="0"
                Margin="0,0,8,0"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Text="1" />
            <TextBlock
                Grid.Row="9"
                Grid.Column="1"
                Margin="0,0,8,0"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Text="1" />
            <Grid Grid.Row="9" Grid.Column="2">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <TextBlock
                    Grid.Column="0"
                    VerticalAlignment="Center"
                    Text="{x:Static p:Resources.Dimmer_state_saved_or_not_when_power_down}"
                    TextTrimming="CharacterEllipsis"
                    ToolTip="{x:Static p:Resources._0_not_saved_Dimmer_will_be_off_when_powered_again}" />
                <!--<materialDesign:PackIcon
                        Grid.Column="1"
                        VerticalAlignment="Center"
                        Kind="Information"
                        ToolTip="{x:Static p:Resources._0_not_saved}" />-->
            </Grid>
            <StackPanel
                Grid.Row="9"
                Grid.Column="3"
                Margin="8,0"
                Orientation="Horizontal">
                <ToggleButton
                    x:Name="TbDimmerStateSaved"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Center"
                    IsChecked="{Binding IsDimmerStateSaved, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                <TextBlock
                    Width="72"
                    Margin="8,0,0,2"
                    VerticalAlignment="Center">
                    <TextBlock.Style>
                        <Style TargetType="{x:Type TextBlock}">
                            <Setter Property="Text" Value="{x:Static p:Resources.Disabled}" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=IsChecked, ElementName=TbDimmerStateSaved}" Value="True">
                                    <Setter Property="Text" Value="{x:Static p:Resources.Enabled}" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>
            </StackPanel>
            <Button
                Grid.Row="9"
                Grid.Column="4"
                Margin="8,0"
                VerticalAlignment="Center"
                Command="{Binding GetDimmerStateSavedCommand}"
                CommandParameter="{Binding ZwaveDetailDevice.SelectedProjectModel, Source={StaticResource Locator}}"
                Content="{x:Static p:Resources.Get}"
                Style="{StaticResource GetFlatButton}" />
            <Button
                Grid.Row="9"
                Grid.Column="5"
                Margin="8,0"
                VerticalAlignment="Center"
                Command="{Binding SetDimmerStateSavedCommand}"
                CommandParameter="{Binding ZwaveDetailDevice.SelectedProjectModel, Source={StaticResource Locator}}"
                Content="{x:Static p:Resources.Set}"
                Style="{StaticResource SetFlatButton}" />
            <Separator
                Grid.Row="10"
                Grid.Column="0"
                Grid.ColumnSpan="6"
                Style="{StaticResource MaterialDesignDarkSeparator}" />
            <TextBlock
                Grid.Row="11"
                Grid.Column="0"
                Margin="0,0,8,0"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Text="2" />
            <TextBlock
                Grid.Row="11"
                Grid.Column="1"
                Margin="0,0,8,0"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Text="1" />
            <StackPanel
                Grid.Row="11"
                Grid.Column="2"
                Orientation="Horizontal">
                <TextBlock VerticalAlignment="Center" Text="{x:Static p:Resources.Beep}" />
                <!--<materialDesign:PackIcon
                        VerticalAlignment="Center"
                        Kind="Information"
                        ToolTip="{x:Static p:Resources._0_Beep_disabled}" />-->
            </StackPanel>
            <StackPanel
                Grid.Row="11"
                Grid.Column="3"
                Margin="8,0"
                Orientation="Horizontal">
                <ToggleButton
                    x:Name="TbBeep"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Center"
                    IsChecked="{Binding IsBeep, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                <TextBlock
                    Width="72"
                    Margin="8,0,0,2"
                    VerticalAlignment="Center">
                    <TextBlock.Style>
                        <Style TargetType="{x:Type TextBlock}">
                            <Setter Property="Text" Value="{x:Static p:Resources.Disabled}" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=IsChecked, ElementName=TbBeep}" Value="True">
                                    <Setter Property="Text" Value="{x:Static p:Resources.Enabled}" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>
            </StackPanel>
            <Button
                Grid.Row="11"
                Grid.Column="4"
                Margin="8,0"
                VerticalAlignment="Center"
                Command="{Binding GetBeepCommand}"
                CommandParameter="{Binding ZwaveDetailDevice.SelectedProjectModel, Source={StaticResource Locator}}"
                Content="{x:Static p:Resources.Get}"
                Style="{StaticResource GetFlatButton}" />
            <Button
                Grid.Row="11"
                Grid.Column="5"
                Margin="8,0"
                VerticalAlignment="Center"
                Command="{Binding SetBeepCommand}"
                CommandParameter="{Binding ZwaveDetailDevice.SelectedProjectModel, Source={StaticResource Locator}}"
                Content="{x:Static p:Resources.Set}"
                Style="{StaticResource SetFlatButton}" />
            <Separator
                Grid.Row="14"
                Grid.Column="0"
                Grid.ColumnSpan="6"
                Style="{StaticResource MaterialDesignDarkSeparator}" />
            <TextBlock
                Grid.Row="15"
                Grid.Column="0"
                Margin="0,0,8,0"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Text="3" />
            <TextBlock
                Grid.Row="15"
                Grid.Column="1"
                Margin="0,0,8,0"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Text="1" />
            <StackPanel
                Grid.Row="15"
                Grid.Column="2"
                Orientation="Horizontal">
                <TextBlock VerticalAlignment="Center" Text="{x:Static p:Resources.LED_Backlit_brightness_level}" />
                <materialDesign:PackIcon
                    VerticalAlignment="Center"
                    Kind="Information"
                    ToolTip="{x:Static p:Resources._0_LED_disabled_2}" />
            </StackPanel>
            <TextBox
                x:Name="TxtLEDBacklitBrightnessLevel"
                Grid.Row="15"
                Grid.Column="3"
                Margin="8,0"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Top"
                materialDesign:HintAssist.Hint="0 ~ 10"
                materialDesign:ValidationAssist.Suppress="True">
                <TextBox.Style>
                    <Style BasedOn="{StaticResource MaterialDesignFilledTextBox}" TargetType="{x:Type TextBox}">
                        <Style.Triggers>
                            <Trigger Property="Validation.HasError" Value="true">
                                <Setter Property="ToolTip" Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors)/ErrorContent}" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </TextBox.Style>
                <TextBox.Text>
                    <Binding
                        Mode="TwoWay"
                        Path="LEDBacklitBrightnessLevel"
                        UpdateSourceTrigger="PropertyChanged"
                        ValidatesOnDataErrors="True">
                        <Binding.ValidationRules>
                            <validator:NumberRangeValidationRule Max="10" Min="0" />
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
            </TextBox>
            <Button
                Grid.Row="15"
                Grid.Column="4"
                Margin="8,0"
                VerticalAlignment="Center"
                Command="{Binding GetLEDBacklitBrightnessLevelCommand}"
                CommandParameter="{Binding ZwaveDetailDevice.SelectedProjectModel, Source={StaticResource Locator}}"
                Content="{x:Static p:Resources.Get}"
                Style="{StaticResource GetFlatButton}" />
            <Button
                Grid.Row="15"
                Grid.Column="5"
                Margin="8,0"
                VerticalAlignment="Center"
                Command="{Binding SetLEDBacklitBrightnessLevelCommand}"
                CommandParameter="{Binding ZwaveDetailDevice.SelectedProjectModel, Source={StaticResource Locator}}"
                Content="{x:Static p:Resources.Set}">
                <Button.Style>
                    <Style BasedOn="{StaticResource SetFlatButton}" TargetType="Button">
                        <Setter Property="IsEnabled" Value="False" />
                        <Style.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding Path=(Validation.HasError), UpdateSourceTrigger=PropertyChanged, ElementName=TxtLEDBacklitBrightnessLevel}" Value="False" />
                                </MultiDataTrigger.Conditions>
                                <Setter Property="IsEnabled" Value="True" />
                            </MultiDataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
            <Separator
                Grid.Row="16"
                Grid.Column="0"
                Grid.ColumnSpan="6"
                Style="{StaticResource MaterialDesignDarkSeparator}" />
            <TextBlock
                Grid.Row="17"
                Grid.Column="0"
                Margin="0,0,8,0"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Text="4" />
            <TextBlock
                Grid.Row="17"
                Grid.Column="1"
                Margin="0,0,8,0"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Text="1" />
            <StackPanel
                Grid.Row="17"
                Grid.Column="2"
                Orientation="Horizontal">
                <TextBlock VerticalAlignment="Center" Text="{x:Static p:Resources.All_on_All_off}" />
                <materialDesign:PackIcon
                    VerticalAlignment="Center"
                    Kind="Information"
                    ToolTip="{x:Static p:Resources._0_forbid_ALL_ON__forbid_ALL_OFF}" />
            </StackPanel>
            <TextBox
                x:Name="TxtAllOnAllOff"
                Grid.Row="17"
                Grid.Column="3"
                Margin="8,0"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Top"
                materialDesign:HintAssist.Hint="0,1,2,255"
                materialDesign:ValidationAssist.Suppress="True">
                <TextBox.Style>
                    <Style BasedOn="{StaticResource MaterialDesignFilledTextBox}" TargetType="{x:Type TextBox}">
                        <Style.Triggers>
                            <Trigger Property="Validation.HasError" Value="true">
                                <Setter Property="ToolTip" Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors)/ErrorContent}" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </TextBox.Style>
                <TextBox.Text>
                    <Binding
                        Mode="TwoWay"
                        Path="AllOnAllOff"
                        UpdateSourceTrigger="PropertyChanged"
                        ValidatesOnDataErrors="True">
                        <Binding.ValidationRules>
                            <validator:NumberRangeValidationRule Max="255" Min="0" />
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
            </TextBox>
            <Button
                Grid.Row="17"
                Grid.Column="4"
                Margin="8,0"
                VerticalAlignment="Center"
                Command="{Binding GetAllOnAllOffCommand}"
                CommandParameter="{Binding ZwaveDetailDevice.SelectedProjectModel, Source={StaticResource Locator}}"
                Content="{x:Static p:Resources.Get}"
                Style="{StaticResource GetFlatButton}" />
            <Button
                Grid.Row="17"
                Grid.Column="5"
                Margin="8,0"
                VerticalAlignment="Center"
                Command="{Binding SetAllOnAllOffCommand}"
                CommandParameter="{Binding ZwaveDetailDevice.SelectedProjectModel, Source={StaticResource Locator}}"
                Content="{x:Static p:Resources.Set}">
                <Button.Style>
                    <Style BasedOn="{StaticResource SetFlatButton}" TargetType="Button">
                        <Setter Property="IsEnabled" Value="False" />
                        <Style.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding Path=(Validation.HasError), UpdateSourceTrigger=PropertyChanged, ElementName=TxtAllOnAllOff}" Value="False" />
                                </MultiDataTrigger.Conditions>
                                <Setter Property="IsEnabled" Value="True" />
                            </MultiDataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
            <Separator
                Grid.Row="18"
                Grid.Column="0"
                Grid.ColumnSpan="6"
                Style="{StaticResource MaterialDesignDarkSeparator}" />
            <TextBlock
                Grid.Row="19"
                Grid.Column="0"
                Margin="0,0,8,0"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Text="5" />
            <TextBlock
                Grid.Row="19"
                Grid.Column="1"
                Margin="0,0,8,0"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Text="1" />
            <StackPanel
                Grid.Row="19"
                Grid.Column="2"
                Orientation="Horizontal">
                <TextBlock VerticalAlignment="Center" Text="{x:Static p:Resources.Minimum_brightness_level}" />
                <materialDesign:PackIcon
                    VerticalAlignment="Center"
                    Kind="Information"
                    ToolTip="{x:Static p:Resources._1_98_percentage_brightness_level}" />
            </StackPanel>
            <TextBox
                x:Name="TxtMinimumBrightnessLevel"
                Grid.Row="19"
                Grid.Column="3"
                Margin="8,0"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Top"
                materialDesign:HintAssist.Hint="1 ~ 98"
                materialDesign:ValidationAssist.Suppress="True">
                <TextBox.Style>
                    <Style BasedOn="{StaticResource MaterialDesignFilledTextBox}" TargetType="{x:Type TextBox}">
                        <Style.Triggers>
                            <Trigger Property="Validation.HasError" Value="true">
                                <Setter Property="ToolTip" Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors)/ErrorContent}" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </TextBox.Style>
                <TextBox.Text>
                    <Binding
                        Mode="TwoWay"
                        Path="MinimumBrightnessLevel"
                        UpdateSourceTrigger="PropertyChanged"
                        ValidatesOnDataErrors="True">
                        <Binding.ValidationRules>
                            <validator:NumberRangeValidationRule Max="99" Min="2" />
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
            </TextBox>
            <Button
                Grid.Row="19"
                Grid.Column="4"
                Margin="8,0"
                VerticalAlignment="Center"
                Command="{Binding GetMinimumBrightnessLevelCommand}"
                CommandParameter="{Binding ZwaveDetailDevice.SelectedProjectModel, Source={StaticResource Locator}}"
                Content="{x:Static p:Resources.Get}"
                Style="{StaticResource GetFlatButton}" />
            <Button
                Grid.Row="19"
                Grid.Column="5"
                Margin="8,0"
                VerticalAlignment="Center"
                Command="{Binding SetMinimumBrightnessLevelCommand}"
                CommandParameter="{Binding ZwaveDetailDevice.SelectedProjectModel, Source={StaticResource Locator}}"
                Content="{x:Static p:Resources.Set}">
                <Button.Style>
                    <Style BasedOn="{StaticResource SetFlatButton}" TargetType="Button">
                        <Setter Property="IsEnabled" Value="False" />
                        <Style.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding Path=(Validation.HasError), UpdateSourceTrigger=PropertyChanged, ElementName=TxtMinimumBrightnessLevel}" Value="False" />
                                </MultiDataTrigger.Conditions>
                                <Setter Property="IsEnabled" Value="True" />
                            </MultiDataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
            <Separator
                Grid.Row="21"
                Grid.Column="0"
                Grid.ColumnSpan="6"
                Style="{StaticResource MaterialDesignDarkSeparator}" />
            <TextBlock
                Grid.Row="22"
                Grid.Column="0"
                Margin="0,0,8,0"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Text="6" />
            <TextBlock
                Grid.Row="22"
                Grid.Column="1"
                Margin="0,0,8,0"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Text="1" />
            <StackPanel
                Grid.Row="22"
                Grid.Column="2"
                Orientation="Horizontal">
                <TextBlock VerticalAlignment="Center" Text="{x:Static p:Resources.Maximum_brightness_level}" />
                <materialDesign:PackIcon
                    VerticalAlignment="Center"
                    Kind="Information"
                    ToolTip="{x:Static p:Resources._2_99_percentage_brightness_level}" />
            </StackPanel>
            <TextBox
                x:Name="TxtMaximumBrightnessLevel"
                Grid.Row="22"
                Grid.Column="3"
                Margin="8,0"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Top"
                materialDesign:HintAssist.Hint="2 ~ 99"
                materialDesign:ValidationAssist.Suppress="True">
                <TextBox.Style>
                    <Style BasedOn="{StaticResource MaterialDesignFilledTextBox}" TargetType="{x:Type TextBox}">
                        <Style.Triggers>
                            <Trigger Property="Validation.HasError" Value="true">
                                <Setter Property="ToolTip" Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors)/ErrorContent}" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </TextBox.Style>
                <TextBox.Text>
                    <Binding
                        Mode="TwoWay"
                        Path="MaximumBrightnessLevel"
                        UpdateSourceTrigger="PropertyChanged"
                        ValidatesOnDataErrors="True">
                        <Binding.ValidationRules>
                            <validator:NumberRangeValidationRule Max="99" Min="2" />
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
            </TextBox>
            <Button
                Grid.Row="22"
                Grid.Column="4"
                Margin="8,0"
                VerticalAlignment="Center"
                Command="{Binding GetMaximumBrightnessLevelCommand}"
                CommandParameter="{Binding ZwaveDetailDevice.SelectedProjectModel, Source={StaticResource Locator}}"
                Content="{x:Static p:Resources.Get}"
                Style="{StaticResource GetFlatButton}" />
            <Button
                Grid.Row="22"
                Grid.Column="5"
                Margin="8,0"
                VerticalAlignment="Center"
                Command="{Binding SetMaximumBrightnessLevelCommand}"
                CommandParameter="{Binding ZwaveDetailDevice.SelectedProjectModel, Source={StaticResource Locator}}"
                Content="{x:Static p:Resources.Set}">
                <Button.Style>
                    <Style BasedOn="{StaticResource SetFlatButton}" TargetType="Button">
                        <Setter Property="IsEnabled" Value="False" />
                        <Style.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding Path=(Validation.HasError), UpdateSourceTrigger=PropertyChanged, ElementName=TxtMaximumBrightnessLevel}" Value="False" />
                                </MultiDataTrigger.Conditions>
                                <Setter Property="IsEnabled" Value="True" />
                            </MultiDataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
            <Separator
                Grid.Row="23"
                Grid.Column="0"
                Grid.ColumnSpan="6"
                Style="{StaticResource MaterialDesignDarkSeparator}" />
            <TextBlock
                Grid.Row="24"
                Grid.Column="0"
                Margin="0,0,8,0"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Text="7" />
            <TextBlock
                Grid.Row="24"
                Grid.Column="1"
                Margin="0,0,8,0"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Text="2" />
            <Grid Grid.Row="24" Grid.Column="2">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <TextBlock
                    Grid.Column="0"
                    VerticalAlignment="Center"
                    Text="{x:Static p:Resources.Single_dimming_step_time_Manual_}"
                    TextTrimming="CharacterEllipsis"
                    ToolTip="{Binding RelativeSource={RelativeSource Self}, Path=Text}" />
                <materialDesign:PackIcon
                    Grid.Column="1"
                    VerticalAlignment="Center"
                    Kind="Information"
                    ToolTip="{x:Static p:Resources.Max_2_55s__in_10ms_steps}" />
            </Grid>
            <TextBox
                x:Name="TxtSingleDimmingStepTimeManual"
                Grid.Row="24"
                Grid.Column="3"
                Margin="8,0"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Top"
                materialDesign:HintAssist.Hint="0 ~ 65.535 (10ms)"
                materialDesign:ValidationAssist.Suppress="True">
                <TextBox.Style>
                    <Style BasedOn="{StaticResource MaterialDesignFilledTextBox}" TargetType="{x:Type TextBox}">
                        <Style.Triggers>
                            <Trigger Property="Validation.HasError" Value="true">
                                <Setter Property="ToolTip" Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors)/ErrorContent}" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </TextBox.Style>
                <TextBox.Text>
                    <Binding
                        Mode="TwoWay"
                        Path="SingleDimmingStepTimeManual"
                        UpdateSourceTrigger="PropertyChanged"
                        ValidatesOnDataErrors="True">
                        <Binding.ValidationRules>
                            <validator:NumberRangeValidationRule Max="65535" Min="0" />
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
            </TextBox>
            <Button
                Grid.Row="24"
                Grid.Column="4"
                Margin="8,0"
                VerticalAlignment="Center"
                Command="{Binding GetSingleDimmingStepTimeManualCommand}"
                CommandParameter="{Binding ZwaveDetailDevice.SelectedProjectModel, Source={StaticResource Locator}}"
                Content="{x:Static p:Resources.Get}"
                Style="{StaticResource GetFlatButton}" />
            <Button
                Grid.Row="24"
                Grid.Column="5"
                Margin="8,0"
                VerticalAlignment="Center"
                Command="{Binding SetSingleDimmingStepTimeManualCommand}"
                CommandParameter="{Binding ZwaveDetailDevice.SelectedProjectModel, Source={StaticResource Locator}}"
                Content="{x:Static p:Resources.Set}">
                <Button.Style>
                    <Style BasedOn="{StaticResource SetFlatButton}" TargetType="Button">
                        <Setter Property="IsEnabled" Value="False" />
                        <Style.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding Path=(Validation.HasError), UpdateSourceTrigger=PropertyChanged, ElementName=TxtSingleDimmingStepTimeManual}" Value="False" />
                                </MultiDataTrigger.Conditions>
                                <Setter Property="IsEnabled" Value="True" />
                            </MultiDataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
            <Separator
                Grid.Row="25"
                Grid.Column="0"
                Grid.ColumnSpan="6"
                Style="{StaticResource MaterialDesignDarkSeparator}" />
            <TextBlock
                Grid.Row="26"
                Grid.Column="0"
                Margin="0,0,8,0"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Text="8" />
            <TextBlock
                Grid.Row="26"
                Grid.Column="1"
                Margin="0,0,8,0"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Text="1" />
            <Grid Grid.Row="26" Grid.Column="2">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <TextBlock
                    Grid.Column="0"
                    VerticalAlignment="Center"
                    Text="{x:Static p:Resources.Single_dimming_step_size}"
                    TextTrimming="CharacterEllipsis" />
                <materialDesign:PackIcon
                    Grid.Column="1"
                    VerticalAlignment="Center"
                    Kind="Information"
                    ToolTip="{x:Static p:Resources._1_99_percentage_value}" />
            </Grid>
            <TextBox
                x:Name="TxtSingleDimmingStepSize"
                Grid.Row="26"
                Grid.Column="3"
                Margin="8,0"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Top"
                materialDesign:HintAssist.Hint="1 ~ 99"
                materialDesign:ValidationAssist.Suppress="True">
                <TextBox.Style>
                    <Style BasedOn="{StaticResource MaterialDesignFilledTextBox}" TargetType="{x:Type TextBox}">
                        <Style.Triggers>
                            <Trigger Property="Validation.HasError" Value="true">
                                <Setter Property="ToolTip" Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors)/ErrorContent}" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </TextBox.Style>
                <TextBox.Text>
                    <Binding
                        Mode="TwoWay"
                        Path="SingleDimmingStepSize"
                        UpdateSourceTrigger="PropertyChanged"
                        ValidatesOnDataErrors="True">
                        <Binding.ValidationRules>
                            <validator:NumberRangeValidationRule Max="99" Min="1" />
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
            </TextBox>
            <Button
                Grid.Row="26"
                Grid.Column="4"
                Margin="8,0"
                VerticalAlignment="Center"
                Command="{Binding GetSingleDimmingStepSizeCommand}"
                CommandParameter="{Binding ZwaveDetailDevice.SelectedProjectModel, Source={StaticResource Locator}}"
                Content="{x:Static p:Resources.Get}"
                Style="{StaticResource GetFlatButton}" />
            <Button
                Grid.Row="26"
                Grid.Column="5"
                Margin="8,0"
                VerticalAlignment="Center"
                Command="{Binding SetSingleDimmingStepSizeCommand}"
                CommandParameter="{Binding ZwaveDetailDevice.SelectedProjectModel, Source={StaticResource Locator}}"
                Content="{x:Static p:Resources.Set}">
                <Button.Style>
                    <Style BasedOn="{StaticResource SetFlatButton}" TargetType="Button">
                        <Setter Property="IsEnabled" Value="False" />
                        <Style.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding Path=(Validation.HasError), UpdateSourceTrigger=PropertyChanged, ElementName=TxtSingleDimmingStepSize}" Value="False" />
                                </MultiDataTrigger.Conditions>
                                <Setter Property="IsEnabled" Value="True" />
                            </MultiDataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
            <Separator
                Grid.Row="27"
                Grid.Column="0"
                Grid.ColumnSpan="6"
                Style="{StaticResource MaterialDesignDarkSeparator}" />
            <TextBlock
                Grid.Row="28"
                Grid.Column="0"
                Margin="0,0,8,0"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Text="9" />
            <TextBlock
                Grid.Row="28"
                Grid.Column="1"
                Margin="0,0,8,0"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Text="1" />
            <Grid Grid.Row="28" Grid.Column="2">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <TextBlock
                    Grid.Column="0"
                    VerticalAlignment="Center"
                    Text="{x:Static p:Resources.Single_dimming_step_time__Auto_}"
                    TextTrimming="CharacterEllipsis"
                    ToolTip="{x:Static p:Resources.Single_dimming_step_time__Auto_}" />
                <materialDesign:PackIcon
                    Grid.Column="1"
                    VerticalAlignment="Center"
                    Kind="Information"
                    ToolTip="{x:Static p:Resources.Max_2_55s__in_10ms_steps}" />
            </Grid>
            <TextBox
                x:Name="TxtSingleDimmingStepTimeAuto"
                Grid.Row="28"
                Grid.Column="3"
                Margin="8,0"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Top"
                materialDesign:HintAssist.Hint="1 ~ 65535"
                materialDesign:ValidationAssist.Suppress="True">
                <TextBox.Style>
                    <Style BasedOn="{StaticResource MaterialDesignFilledTextBox}" TargetType="{x:Type TextBox}">
                        <Style.Triggers>
                            <Trigger Property="Validation.HasError" Value="true">
                                <Setter Property="ToolTip" Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors)/ErrorContent}" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </TextBox.Style>
                <TextBox.Text>
                    <Binding
                        Mode="TwoWay"
                        Path="SingleDimmingStepTimeAuto"
                        UpdateSourceTrigger="PropertyChanged"
                        ValidatesOnDataErrors="True">
                        <Binding.ValidationRules>
                            <validator:NumberRangeValidationRule Max="65535" Min="1" />
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
            </TextBox>
            <Button
                Grid.Row="28"
                Grid.Column="4"
                Margin="8,0"
                VerticalAlignment="Center"
                Command="{Binding GetSingleDimmingStepTimeAutoCommand}"
                CommandParameter="{Binding ZwaveDetailDevice.SelectedProjectModel, Source={StaticResource Locator}}"
                Content="{x:Static p:Resources.Get}"
                Style="{StaticResource GetFlatButton}" />
            <Button
                Grid.Row="28"
                Grid.Column="5"
                Margin="8,0"
                VerticalAlignment="Center"
                Command="{Binding SetSingleDimmingStepTimeAutoCommand}"
                CommandParameter="{Binding ZwaveDetailDevice.SelectedProjectModel, Source={StaticResource Locator}}"
                Content="{x:Static p:Resources.Set}">
                <Button.Style>
                    <Style BasedOn="{StaticResource SetFlatButton}" TargetType="Button">
                        <Setter Property="IsEnabled" Value="False" />
                        <Style.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding Path=(Validation.HasError), UpdateSourceTrigger=PropertyChanged, ElementName=TxtSingleDimmingStepTimeAuto}" Value="False" />
                                </MultiDataTrigger.Conditions>
                                <Setter Property="IsEnabled" Value="True" />
                            </MultiDataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
            <Separator
                Grid.Row="29"
                Grid.Column="0"
                Grid.ColumnSpan="6"
                Style="{StaticResource MaterialDesignDarkSeparator}" />
            <TextBlock
                Grid.Row="30"
                Grid.Column="0"
                Margin="0,0,8,0"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Text="10" />
            <TextBlock
                Grid.Row="30"
                Grid.Column="1"
                Margin="0,0,8,0"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Text="1" />
            <Grid Grid.Row="30" Grid.Column="2">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <TextBlock
                    Grid.Column="0"
                    VerticalAlignment="Center"
                    Text="{x:Static p:Resources.Single_dimming_step_size__Auto_}"
                    TextTrimming="CharacterEllipsis"
                    ToolTip="{x:Static p:Resources.Single_dimming_step_size__Auto_}" />
                <materialDesign:PackIcon
                    Grid.Column="1"
                    VerticalAlignment="Center"
                    Kind="Information"
                    ToolTip="{x:Static p:Resources._1_99_percentage_value}" />
            </Grid>
            <TextBox
                x:Name="TxtSingleDimmingStepSizeAuto"
                Grid.Row="30"
                Grid.Column="3"
                Margin="8,0"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Top"
                materialDesign:HintAssist.Hint="1 ~ 99"
                materialDesign:ValidationAssist.Suppress="True">
                <TextBox.Style>
                    <Style BasedOn="{StaticResource MaterialDesignFilledTextBox}" TargetType="{x:Type TextBox}">
                        <Style.Triggers>
                            <Trigger Property="Validation.HasError" Value="true">
                                <Setter Property="ToolTip" Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors)/ErrorContent}" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </TextBox.Style>
                <TextBox.Text>
                    <Binding
                        Mode="TwoWay"
                        Path="SingleDimmingStepSizeAuto"
                        UpdateSourceTrigger="PropertyChanged"
                        ValidatesOnDataErrors="True">
                        <Binding.ValidationRules>
                            <validator:NumberRangeValidationRule Max="99" Min="1" />
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
            </TextBox>
            <Button
                Grid.Row="30"
                Grid.Column="4"
                Margin="8,0"
                VerticalAlignment="Center"
                Command="{Binding GetSingleDimmingStepSizeAutoCommand}"
                CommandParameter="{Binding ZwaveDetailDevice.SelectedProjectModel, Source={StaticResource Locator}}"
                Content="{x:Static p:Resources.Get}"
                Style="{StaticResource GetFlatButton}" />
            <Button
                Grid.Row="30"
                Grid.Column="5"
                Margin="8,0"
                VerticalAlignment="Center"
                Command="{Binding SetSingleDimmingStepSizeAutoCommand}"
                CommandParameter="{Binding ZwaveDetailDevice.SelectedProjectModel, Source={StaticResource Locator}}"
                Content="{x:Static p:Resources.Set}">
                <Button.Style>
                    <Style BasedOn="{StaticResource SetFlatButton}" TargetType="Button">
                        <Setter Property="IsEnabled" Value="False" />
                        <Style.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding Path=(Validation.HasError), UpdateSourceTrigger=PropertyChanged, ElementName=TxtSingleDimmingStepSizeAuto}" Value="False" />
                                </MultiDataTrigger.Conditions>
                                <Setter Property="IsEnabled" Value="True" />
                            </MultiDataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
            <Separator
                Grid.Row="31"
                Grid.Column="0"
                Grid.ColumnSpan="6"
                Style="{StaticResource MaterialDesignDarkSeparator}" />
            <TextBlock
                Grid.Row="32"
                Grid.Column="0"
                Margin="0,0,8,0"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Text="11" />
            <TextBlock
                Grid.Row="32"
                Grid.Column="1"
                Margin="0,0,8,0"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Text="2" />
            <Grid Grid.Row="32" Grid.Column="2">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <TextBlock
                    Grid.Column="0"
                    VerticalAlignment="Center"
                    Text="{x:Static p:Resources.Timer_function_Auto_off}"
                    TextTrimming="CharacterEllipsis"
                    ToolTip="{x:Static p:Resources.Timer_function_Auto_off}" />
                <materialDesign:PackIcon
                    Grid.Column="1"
                    VerticalAlignment="Center"
                    Kind="Information"
                    ToolTip="{x:Static p:Resources._0_function_disabled}" />
            </Grid>
            <TextBox
                x:Name="TxtTimerFunctionAutoOff"
                Grid.Row="32"
                Grid.Column="3"
                Margin="8,0"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Top"
                materialDesign:HintAssist.Hint="0 ~ 65535 (sec.)"
                materialDesign:ValidationAssist.Suppress="True">
                <TextBox.Style>
                    <Style BasedOn="{StaticResource MaterialDesignFilledTextBox}" TargetType="{x:Type TextBox}">
                        <Style.Triggers>
                            <Trigger Property="Validation.HasError" Value="true">
                                <Setter Property="ToolTip" Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors)/ErrorContent}" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </TextBox.Style>
                <TextBox.Text>
                    <Binding
                        Mode="TwoWay"
                        Path="TimerFunctionAutoOff"
                        UpdateSourceTrigger="PropertyChanged"
                        ValidatesOnDataErrors="True">
                        <Binding.ValidationRules>
                            <validator:NumberRangeValidationRule Max="65535" Min="0" />
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
            </TextBox>
            <Button
                Grid.Row="32"
                Grid.Column="4"
                Margin="8,0"
                VerticalAlignment="Center"
                Command="{Binding GetTimerFunctionAutoOffCommand}"
                CommandParameter="{Binding ZwaveDetailDevice.SelectedProjectModel, Source={StaticResource Locator}}"
                Content="{x:Static p:Resources.Get}"
                Style="{StaticResource GetFlatButton}" />
            <Button
                Grid.Row="32"
                Grid.Column="5"
                Margin="8,0"
                VerticalAlignment="Center"
                Command="{Binding SetTimerFunctionAutoOffCommand}"
                CommandParameter="{Binding ZwaveDetailDevice.SelectedProjectModel, Source={StaticResource Locator}}"
                Content="{x:Static p:Resources.Set}">
                <Button.Style>
                    <Style BasedOn="{StaticResource SetFlatButton}" TargetType="Button">
                        <Setter Property="IsEnabled" Value="False" />
                        <Style.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding Path=(Validation.HasError), UpdateSourceTrigger=PropertyChanged, ElementName=TxtTimerFunctionAutoOff}" Value="False" />
                                </MultiDataTrigger.Conditions>
                                <Setter Property="IsEnabled" Value="True" />
                            </MultiDataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
            <Separator
                Grid.Row="33"
                Grid.Column="0"
                Grid.ColumnSpan="6"
                Style="{StaticResource MaterialDesignDarkSeparator}" />
            <TextBlock
                Grid.Row="34"
                Grid.Column="0"
                Margin="0,0,8,0"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Text="13" />
            <TextBlock
                Grid.Row="34"
                Grid.Column="1"
                Margin="0,0,8,0"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Text="1" />
            <Grid Grid.Row="34" Grid.Column="2">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <TextBlock
                    Grid.Column="0"
                    VerticalAlignment="Center"
                    Text="{x:Static p:Resources.One_click_of_S1}"
                    TextTrimming="CharacterEllipsis"
                    ToolTip="{x:Static p:Resources.One_click_of_S1}" />
                <materialDesign:PackIcon
                    Grid.Column="1"
                    VerticalAlignment="Center"
                    Kind="Information"
                    ToolTip="{x:Static p:Resources._0_switch_between_Off_and_last_saved}" />
            </Grid>
            <TextBox
                x:Name="TxtOneClickS1"
                Grid.Row="34"
                Grid.Column="3"
                Margin="8,0"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Top"
                materialDesign:HintAssist.Hint="0 ~ 99"
                materialDesign:ValidationAssist.Suppress="True">
                <TextBox.Style>
                    <Style BasedOn="{StaticResource MaterialDesignFilledTextBox}" TargetType="{x:Type TextBox}">
                        <Style.Triggers>
                            <Trigger Property="Validation.HasError" Value="true">
                                <Setter Property="ToolTip" Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors)/ErrorContent}" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </TextBox.Style>
                <TextBox.Text>
                    <Binding
                        Mode="TwoWay"
                        Path="OneClickS1"
                        UpdateSourceTrigger="PropertyChanged"
                        ValidatesOnDataErrors="True">
                        <Binding.ValidationRules>
                            <validator:NumberRangeValidationRule Max="99" Min="0" />
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
            </TextBox>
            <Button
                Grid.Row="34"
                Grid.Column="4"
                Margin="8,0"
                VerticalAlignment="Center"
                Command="{Binding GetOneClickS1Command}"
                CommandParameter="{Binding ZwaveDetailDevice.SelectedProjectModel, Source={StaticResource Locator}}"
                Content="{x:Static p:Resources.Get}"
                Style="{StaticResource GetFlatButton}" />
            <Button
                Grid.Row="34"
                Grid.Column="5"
                Margin="8,0"
                VerticalAlignment="Center"
                Command="{Binding SetOneClickS1Command}"
                CommandParameter="{Binding ZwaveDetailDevice.SelectedProjectModel, Source={StaticResource Locator}}"
                Content="{x:Static p:Resources.Set}">
                <Button.Style>
                    <Style BasedOn="{StaticResource SetFlatButton}" TargetType="Button">
                        <Setter Property="IsEnabled" Value="False" />
                        <Style.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding Path=(Validation.HasError), UpdateSourceTrigger=PropertyChanged, ElementName=TxtOneClickS1}" Value="False" />
                                </MultiDataTrigger.Conditions>
                                <Setter Property="IsEnabled" Value="True" />
                            </MultiDataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
            <Separator
                Grid.Row="35"
                Grid.Column="0"
                Grid.ColumnSpan="6"
                Style="{StaticResource MaterialDesignDarkSeparator}" />
            <TextBlock
                Grid.Row="36"
                Grid.Column="0"
                Margin="0,0,8,0"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Text="14" />
            <TextBlock
                Grid.Row="36"
                Grid.Column="1"
                Margin="0,0,8,0"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Text="1" />
            <Grid Grid.Row="36" Grid.Column="2">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <TextBlock
                    Grid.Column="0"
                    VerticalAlignment="Center"
                    Text="{x:Static p:Resources.Double_click_of_S1}"
                    TextTrimming="CharacterEllipsis" />
                <materialDesign:PackIcon
                    Grid.Column="1"
                    VerticalAlignment="Center"
                    Kind="Information"
                    ToolTip="{x:Static p:Resources._0_function_disabled_1_reach_max}" />
            </Grid>
            <TextBox
                x:Name="TxtDoubleClickS1"
                Grid.Row="36"
                Grid.Column="3"
                Margin="8,0"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Top"
                materialDesign:HintAssist.Hint="0,1"
                materialDesign:ValidationAssist.Suppress="True">
                <TextBox.Style>
                    <Style BasedOn="{StaticResource MaterialDesignFilledTextBox}" TargetType="{x:Type TextBox}">
                        <Style.Triggers>
                            <Trigger Property="Validation.HasError" Value="true">
                                <Setter Property="ToolTip" Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors)/ErrorContent}" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </TextBox.Style>
                <TextBox.Text>
                    <Binding
                        Mode="TwoWay"
                        Path="DoubleClickS1"
                        UpdateSourceTrigger="PropertyChanged"
                        ValidatesOnDataErrors="True">
                        <Binding.ValidationRules>
                            <validator:NumberRangeValidationRule Max="1" Min="0" />
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
            </TextBox>
            <Button
                Grid.Row="36"
                Grid.Column="4"
                Margin="8,0"
                VerticalAlignment="Center"
                Command="{Binding GetDoubleClickS1Command}"
                CommandParameter="{Binding ZwaveDetailDevice.SelectedProjectModel, Source={StaticResource Locator}}"
                Content="{x:Static p:Resources.Get}"
                Style="{StaticResource GetFlatButton}" />
            <Button
                Grid.Row="36"
                Grid.Column="5"
                Margin="8,0"
                VerticalAlignment="Center"
                Command="{Binding SetDoubleClickS1Command}"
                CommandParameter="{Binding ZwaveDetailDevice.SelectedProjectModel, Source={StaticResource Locator}}"
                Content="{x:Static p:Resources.Set}">
                <Button.Style>
                    <Style BasedOn="{StaticResource SetFlatButton}" TargetType="Button">
                        <Setter Property="IsEnabled" Value="False" />
                        <Style.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding Path=(Validation.HasError), UpdateSourceTrigger=PropertyChanged, ElementName=TxtDoubleClickS1}" Value="False" />
                                </MultiDataTrigger.Conditions>
                                <Setter Property="IsEnabled" Value="True" />
                            </MultiDataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
            <Separator
                Grid.Row="37"
                Grid.Column="0"
                Grid.ColumnSpan="6"
                Style="{StaticResource MaterialDesignDarkSeparator}" />
            <TextBlock
                Grid.Row="38"
                Grid.Column="0"
                Margin="0,0,8,0"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Text="15" />
            <TextBlock
                Grid.Row="38"
                Grid.Column="1"
                Margin="0,0,8,0"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Text="1" />
            <Grid Grid.Row="38" Grid.Column="2">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <TextBlock
                    Grid.Column="0"
                    VerticalAlignment="Center"
                    Text="{x:Static p:Resources.Operation_report_from_Switch1_to_Association_Group_2_3}"
                    TextTrimming="CharacterEllipsis" />
                <materialDesign:PackIcon
                    Grid.Column="1"
                    VerticalAlignment="Center"
                    Kind="Information"
                    ToolTip="{x:Static p:Resources.bit_6_0}" />
            </Grid>
            <TextBox
                x:Name="TxtOperationSwitch1AssociationGroup_2_3"
                Grid.Row="38"
                Grid.Column="3"
                Margin="8,0"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Top"
                materialDesign:HintAssist.Hint="0,1,2,255"
                materialDesign:ValidationAssist.Suppress="True">
                <TextBox.Style>
                    <Style BasedOn="{StaticResource MaterialDesignFilledTextBox}" TargetType="{x:Type TextBox}">
                        <Style.Triggers>
                            <Trigger Property="Validation.HasError" Value="true">
                                <Setter Property="ToolTip" Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors)/ErrorContent}" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </TextBox.Style>
                <TextBox.Text>
                    <Binding
                        Mode="TwoWay"
                        Path="OperationSwitch1AssociationGroup_2_3"
                        UpdateSourceTrigger="PropertyChanged"
                        ValidatesOnDataErrors="True">
                        <Binding.ValidationRules>
                            <validator:NumberRangeValidationRule Max="3" Min="0" />
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
            </TextBox>
            <Button
                Grid.Row="38"
                Grid.Column="4"
                Margin="8,0"
                VerticalAlignment="Center"
                Command="{Binding GetOperationSwitch1AssociationGroup_2_3Command}"
                CommandParameter="{Binding ZwaveDetailDevice.SelectedProjectModel, Source={StaticResource Locator}}"
                Content="{x:Static p:Resources.Get}"
                Style="{StaticResource GetFlatButton}" />
            <Button
                Grid.Row="38"
                Grid.Column="5"
                Margin="8,0"
                VerticalAlignment="Center"
                Command="{Binding SetOperationSwitch1AssociationGroup_2_3Command}"
                CommandParameter="{Binding ZwaveDetailDevice.SelectedProjectModel, Source={StaticResource Locator}}"
                Content="{x:Static p:Resources.Set}">
                <Button.Style>
                    <Style BasedOn="{StaticResource SetFlatButton}" TargetType="Button">
                        <Setter Property="IsEnabled" Value="False" />
                        <Style.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding Path=(Validation.HasError), UpdateSourceTrigger=PropertyChanged, ElementName=TxtOperationSwitch1AssociationGroup_2_3}" Value="False" />
                                </MultiDataTrigger.Conditions>
                                <Setter Property="IsEnabled" Value="True" />
                            </MultiDataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
            <Separator
                Grid.Row="41"
                Grid.Column="0"
                Grid.ColumnSpan="6"
                Style="{StaticResource MaterialDesignDarkSeparator}" />
            <TextBlock
                Grid.Row="42"
                Grid.Column="0"
                Margin="0,0,8,0"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Text="16" />
            <TextBlock
                Grid.Row="42"
                Grid.Column="1"
                Margin="0,0,8,0"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Text="1" />
            <Grid Grid.Row="42" Grid.Column="2">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <TextBlock
                    Grid.Column="0"
                    VerticalAlignment="Center"
                    Text="{x:Static p:Resources.Operation_report_from_Switch1_to_Association_Group_2}"
                    TextTrimming="CharacterEllipsis" />
                <materialDesign:PackIcon
                    Grid.Column="1"
                    VerticalAlignment="Center"
                    Kind="Information"
                    ToolTip="{x:Static p:Resources._0_When_sent_Basic_Set_On__carried_Value_is_255_}" />
            </Grid>
            <TextBox
                x:Name="TxtOperationReportSwitch1AssociationGroup_2"
                Grid.Row="42"
                Grid.Column="3"
                Margin="8,0"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Top"
                materialDesign:HintAssist.Hint="0,1"
                materialDesign:ValidationAssist.Suppress="True">
                <TextBox.Style>
                    <Style BasedOn="{StaticResource MaterialDesignFilledTextBox}" TargetType="{x:Type TextBox}">
                        <Style.Triggers>
                            <Trigger Property="Validation.HasError" Value="true">
                                <Setter Property="ToolTip" Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors)/ErrorContent}" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </TextBox.Style>
                <TextBox.Text>
                    <Binding
                        Mode="TwoWay"
                        Path="OperationReportSwitch1AssociationGroup_2"
                        UpdateSourceTrigger="PropertyChanged"
                        ValidatesOnDataErrors="True">
                        <Binding.ValidationRules>
                            <validator:NumberRangeValidationRule Max="1" Min="0" />
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
            </TextBox>
            <Button
                Grid.Row="42"
                Grid.Column="4"
                Margin="8,0"
                VerticalAlignment="Center"
                Command="{Binding GetOperationReportSwitch1AssociationGroup_2Command}"
                CommandParameter="{Binding ZwaveDetailDevice.SelectedProjectModel, Source={StaticResource Locator}}"
                Content="{x:Static p:Resources.Get}"
                Style="{StaticResource GetFlatButton}" />
            <Button
                Grid.Row="42"
                Grid.Column="5"
                Margin="8,0"
                VerticalAlignment="Center"
                Command="{Binding SetOperationReportSwitch1AssociationGroup_2Command}"
                CommandParameter="{Binding ZwaveDetailDevice.SelectedProjectModel, Source={StaticResource Locator}}"
                Content="{x:Static p:Resources.Set}">
                <Button.Style>
                    <Style BasedOn="{StaticResource SetFlatButton}" TargetType="Button">
                        <Setter Property="IsEnabled" Value="False" />
                        <Style.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding Path=(Validation.HasError), UpdateSourceTrigger=PropertyChanged, ElementName=TxtOperationReportSwitch1AssociationGroup_2}" Value="False" />
                                </MultiDataTrigger.Conditions>
                                <Setter Property="IsEnabled" Value="True" />
                            </MultiDataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
            <Separator
                Grid.Row="43"
                Grid.Column="0"
                Grid.ColumnSpan="6"
                Style="{StaticResource MaterialDesignDarkSeparator}" />
            <TextBlock
                Grid.Row="44"
                Grid.Column="0"
                Margin="0,0,8,0"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Text="19" />
            <TextBlock
                Grid.Row="44"
                Grid.Column="1"
                Margin="0,0,8,0"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Text="1" />
            <Grid Grid.Row="44" Grid.Column="2">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <TextBlock
                    Grid.Column="0"
                    VerticalAlignment="Center"
                    Text="{x:Static p:Resources.Scene_ID_sent_to_AG1_when_one_clicks_of_S1}"
                    TextTrimming="CharacterEllipsis" />
                <materialDesign:PackIcon
                    Grid.Column="1"
                    VerticalAlignment="Center"
                    Kind="Information"
                    ToolTip="{x:Static p:Resources._0_Scene_Activation_disabled}" />
            </Grid>
            <TextBox
                x:Name="TxtSceneIDSentAG1WhenOneClicksS1"
                Grid.Row="44"
                Grid.Column="3"
                Margin="8,0"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Top"
                materialDesign:HintAssist.Hint="0 ~ 255"
                materialDesign:ValidationAssist.Suppress="True">
                <TextBox.Style>
                    <Style BasedOn="{StaticResource MaterialDesignFilledTextBox}" TargetType="{x:Type TextBox}">
                        <Style.Triggers>
                            <Trigger Property="Validation.HasError" Value="true">
                                <Setter Property="ToolTip" Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors)/ErrorContent}" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </TextBox.Style>
                <TextBox.Text>
                    <Binding
                        Mode="TwoWay"
                        Path="SceneIDSentAG1WhenOneClicksS1"
                        UpdateSourceTrigger="PropertyChanged"
                        ValidatesOnDataErrors="True">
                        <Binding.ValidationRules>
                            <validator:NumberRangeValidationRule Max="255" Min="0" />
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
            </TextBox>
            <Button
                Grid.Row="44"
                Grid.Column="4"
                Margin="8,0"
                VerticalAlignment="Center"
                Command="{Binding GetSceneIDSentAG1WhenOneClicksS1Command}"
                CommandParameter="{Binding ZwaveDetailDevice.SelectedProjectModel, Source={StaticResource Locator}}"
                Content="{x:Static p:Resources.Get}"
                Style="{StaticResource GetFlatButton}" />
            <Button
                Grid.Row="44"
                Grid.Column="5"
                Margin="8,0"
                VerticalAlignment="Center"
                Command="{Binding SetSceneIDSentAG1WhenOneClicksS1Command}"
                CommandParameter="{Binding ZwaveDetailDevice.SelectedProjectModel, Source={StaticResource Locator}}"
                Content="{x:Static p:Resources.Set}">
                <Button.Style>
                    <Style BasedOn="{StaticResource SetFlatButton}" TargetType="Button">
                        <Setter Property="IsEnabled" Value="False" />
                        <Style.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding Path=(Validation.HasError), UpdateSourceTrigger=PropertyChanged, ElementName=TxtSceneIDSentAG1WhenOneClicksS1}" Value="False" />
                                </MultiDataTrigger.Conditions>
                                <Setter Property="IsEnabled" Value="True" />
                            </MultiDataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
            <Separator
                Grid.Row="45"
                Grid.Column="0"
                Grid.ColumnSpan="6"
                Style="{StaticResource MaterialDesignDarkSeparator}" />
            <TextBlock
                Grid.Row="46"
                Grid.Column="0"
                Margin="0,0,8,0"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Text="20" />
            <TextBlock
                Grid.Row="46"
                Grid.Column="1"
                Margin="0,0,8,0"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Text="1" />
            <Grid Grid.Row="46" Grid.Column="2">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <TextBlock
                    Grid.Column="0"
                    VerticalAlignment="Center"
                    Text="{x:Static p:Resources.Scene_ID_sent_to_AG1_when_double_click_of_S1}"
                    TextTrimming="CharacterEllipsis" />
                <materialDesign:PackIcon
                    Grid.Column="1"
                    VerticalAlignment="Center"
                    Kind="Information"
                    ToolTip="{x:Static p:Resources._0_Scene_Activation_disabled}" />
            </Grid>
            <TextBox
                x:Name="TxtSceneSIDSentAG1WhenDoubleClickS1"
                Grid.Row="46"
                Grid.Column="3"
                Margin="8,0"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Top"
                materialDesign:HintAssist.Hint="0 ~ 255"
                materialDesign:ValidationAssist.Suppress="True">
                <TextBox.Style>
                    <Style BasedOn="{StaticResource MaterialDesignFilledTextBox}" TargetType="{x:Type TextBox}">
                        <Style.Triggers>
                            <Trigger Property="Validation.HasError" Value="true">
                                <Setter Property="ToolTip" Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors)/ErrorContent}" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </TextBox.Style>
                <TextBox.Text>
                    <Binding
                        Mode="TwoWay"
                        Path="SceneSIDSentAG1WhenDoubleClickS1"
                        UpdateSourceTrigger="PropertyChanged"
                        ValidatesOnDataErrors="True">
                        <Binding.ValidationRules>
                            <validator:NumberRangeValidationRule Max="255" Min="0" />
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
            </TextBox>
            <Button
                Grid.Row="46"
                Grid.Column="4"
                Margin="8,0"
                VerticalAlignment="Center"
                Command="{Binding GetSceneSIDSentAG1WhenDoubleClickS1Command}"
                CommandParameter="{Binding ZwaveDetailDevice.SelectedProjectModel, Source={StaticResource Locator}}"
                Content="{x:Static p:Resources.Get}"
                Style="{StaticResource GetFlatButton}" />
            <Button
                Grid.Row="46"
                Grid.Column="5"
                Margin="8,0"
                VerticalAlignment="Center"
                Command="{Binding SetSceneSIDSentAG1WhenDoubleClickS1Command}"
                CommandParameter="{Binding ZwaveDetailDevice.SelectedProjectModel, Source={StaticResource Locator}}"
                Content="{x:Static p:Resources.Set}">
                <Button.Style>
                    <Style BasedOn="{StaticResource SetFlatButton}" TargetType="Button">
                        <Setter Property="IsEnabled" Value="False" />
                        <Style.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding Path=(Validation.HasError), UpdateSourceTrigger=PropertyChanged, ElementName=TxtSceneSIDSentAG1WhenDoubleClickS1}" Value="False" />
                                </MultiDataTrigger.Conditions>
                                <Setter Property="IsEnabled" Value="True" />
                            </MultiDataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
            <Separator
                Grid.Row="47"
                Grid.Column="0"
                Grid.ColumnSpan="6"
                Style="{StaticResource MaterialDesignDarkSeparator}" />
            <TextBlock
                Grid.Row="48"
                Grid.Column="0"
                Margin="0,0,8,0"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Text="21" />
            <TextBlock
                Grid.Row="48"
                Grid.Column="1"
                Margin="0,0,8,0"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Text="1" />
            <Grid Grid.Row="48" Grid.Column="2">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <TextBlock
                    Grid.Column="0"
                    VerticalAlignment="Center"
                    Text="{x:Static p:Resources.Scene_ID_sent_to_AG1_when_hold_S1}"
                    TextTrimming="CharacterEllipsis" />
                <materialDesign:PackIcon
                    Grid.Column="1"
                    VerticalAlignment="Center"
                    Kind="Information"
                    ToolTip="{x:Static p:Resources._0_Scene_Activation_disabled}" />
            </Grid>
            <TextBox
                x:Name="TxtSceneIDSentAG1WhenHoldS1"
                Grid.Row="48"
                Grid.Column="3"
                Margin="8,0"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Top"
                materialDesign:HintAssist.Hint="0 ~ 255"
                materialDesign:ValidationAssist.Suppress="True">
                <TextBox.Style>
                    <Style BasedOn="{StaticResource MaterialDesignFilledTextBox}" TargetType="{x:Type TextBox}">
                        <Style.Triggers>
                            <Trigger Property="Validation.HasError" Value="true">
                                <Setter Property="ToolTip" Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors)/ErrorContent}" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </TextBox.Style>
                <TextBox.Text>
                    <Binding
                        Mode="TwoWay"
                        Path="SceneIDSentAG1WhenHoldS1"
                        UpdateSourceTrigger="PropertyChanged"
                        ValidatesOnDataErrors="True">
                        <Binding.ValidationRules>
                            <validator:NumberRangeValidationRule Max="255" Min="0" />
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
            </TextBox>
            <Button
                Grid.Row="48"
                Grid.Column="4"
                Margin="8,0"
                VerticalAlignment="Center"
                Command="{Binding GetSceneIDSentAG1WhenHoldS1Command}"
                CommandParameter="{Binding ZwaveDetailDevice.SelectedProjectModel, Source={StaticResource Locator}}"
                Content="{x:Static p:Resources.Get}"
                Style="{StaticResource GetFlatButton}" />
            <Button
                Grid.Row="48"
                Grid.Column="5"
                Margin="8,0"
                VerticalAlignment="Center"
                Command="{Binding SetSceneIDSentAG1WhenHoldS1Command}"
                CommandParameter="{Binding ZwaveDetailDevice.SelectedProjectModel, Source={StaticResource Locator}}"
                Content="{x:Static p:Resources.Set}">
                <Button.Style>
                    <Style BasedOn="{StaticResource SetFlatButton}" TargetType="Button">
                        <Setter Property="IsEnabled" Value="False" />
                        <Style.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding Path=(Validation.HasError), UpdateSourceTrigger=PropertyChanged, ElementName=TxtSceneIDSentAG1WhenHoldS1}" Value="False" />
                                </MultiDataTrigger.Conditions>
                                <Setter Property="IsEnabled" Value="True" />
                            </MultiDataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
            <Separator
                Grid.Row="49"
                Grid.Column="0"
                Grid.ColumnSpan="6"
                Style="{StaticResource MaterialDesignDarkSeparator}" />
            <TextBlock
                Grid.Row="50"
                Grid.Column="0"
                Margin="0,0,8,0"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Text="255" />
            <TextBlock
                Grid.Row="50"
                Grid.Column="1"
                Margin="0,0,8,0"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Text="1" />
            <Grid Grid.Row="50" Grid.Column="2">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <TextBlock
                    Grid.Column="0"
                    VerticalAlignment="Center"
                    Text="{x:Static p:Resources.Factory_setting}"
                    TextTrimming="CharacterEllipsis" />
                <materialDesign:PackIcon
                    Grid.Column="1"
                    VerticalAlignment="Center"
                    Kind="Information"
                    ToolTip="{x:Static p:Resources._85_Restore_factory_settings}" />
            </Grid>
            <TextBox
                x:Name="TxtFactorySetting"
                Grid.Row="50"
                Grid.Column="3"
                Margin="8,0"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Top"
                materialDesign:HintAssist.Hint="85"
                materialDesign:ValidationAssist.Suppress="True"
                IsReadOnly="True">
                <TextBox.Style>
                    <Style BasedOn="{StaticResource MaterialDesignFilledTextBox}" TargetType="{x:Type TextBox}">
                        <Style.Triggers>
                            <Trigger Property="Validation.HasError" Value="true">
                                <Setter Property="ToolTip" Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors)/ErrorContent}" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </TextBox.Style>
                <TextBox.Text>
                    <Binding
                        Mode="TwoWay"
                        Path="FactorySetting"
                        UpdateSourceTrigger="PropertyChanged"
                        ValidatesOnDataErrors="True">
                        <Binding.ValidationRules>
                            <validator:NumberRangeValidationRule Max="254" Min="0" />
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
            </TextBox>
            <Button
                Grid.Row="50"
                Grid.Column="5"
                Margin="8,0"
                VerticalAlignment="Center"
                Command="{Binding SetFactorySettingCommand}"
                CommandParameter="{Binding ZwaveDetailDevice.SelectedProjectModel, Source={StaticResource Locator}}"
                Content="{x:Static p:Resources.Set}">
                <Button.Style>
                    <Style BasedOn="{StaticResource SetFlatButton}" TargetType="Button">
                        <Setter Property="IsEnabled" Value="False" />
                        <Style.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding Path=(Validation.HasError), UpdateSourceTrigger=PropertyChanged, ElementName=TxtFactorySetting}" Value="False" />
                                </MultiDataTrigger.Conditions>
                                <Setter Property="IsEnabled" Value="True" />
                            </MultiDataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
        </Grid>
    </materialDesign:DialogHost>
</UserControl>