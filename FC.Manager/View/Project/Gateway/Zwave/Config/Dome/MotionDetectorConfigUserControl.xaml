<UserControl
    x:Class="FC.Manager.View.Project.Gateway.Zwave.Config.Dome.MotionDetectorConfigUserControl"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:p="clr-namespace:FC.Domain.Properties;assembly=FC.Domain"
    xmlns:validator="clr-namespace:FC.Domain.Validator;assembly=FC.Domain"
    d:DesignHeight="450"
    d:DesignWidth="800"
    DataContext="{Binding MotionDetectorConfig, Source={StaticResource Locator}}"
    mc:Ignorable="d">
    <materialDesign:DialogHost
        DialogContent="{Binding DialogContent}"
        FocusVisualStyle="{x:Null}"
        IsOpen="{Binding IsOpenDialogHost}">
        <Expander
            Padding="16"
            materialDesign:ThemeAssist.Theme="Dark"
            Background="#60000000"
            BorderBrush="Black"
            BorderThickness="2"
            Header="{x:Static p:Resources.Advanced_Settings}">
            <Grid>
                <Grid.Resources>
                    <Style TargetType="{x:Type materialDesign:PackIcon}">
                        <Setter Property="Margin" Value="8,0,0,0" />
                        <Setter Property="Foreground" Value="{StaticResource DenimBillson}" />
                    </Style>
                    <Style BasedOn="{StaticResource {x:Type ToolTip}}" TargetType="ToolTip">
                        <Style.Resources>
                            <Style TargetType="ContentPresenter">
                                <Style.Resources>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="TextWrapping" Value="Wrap" />
                                    </Style>
                                </Style.Resources>
                            </Style>
                        </Style.Resources>
                        <Setter Property="MaxWidth" Value="233" />
                    </Style>
                </Grid.Resources>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <Button
                    Grid.Row="0"
                    Grid.Column="0"
                    Grid.ColumnSpan="6"
                    Margin="0,0,0,16"
                    Command="{Binding OpenDocumentationCommand}"
                    Content="{x:Static p:Resources.Documentation}"
                    Style="{StaticResource MaterialDesignOutlinedButton}" />
                <Separator
                    Grid.Row="1"
                    Grid.Column="0"
                    Grid.ColumnSpan="6"
                    Style="{StaticResource MaterialDesignDarkSeparator}" />
                <TextBlock
                    Grid.Row="2"
                    Grid.Column="0"
                    Grid.ColumnSpan="3"
                    Margin="8,0"
                    VerticalAlignment="Center"
                    FontWeight="Bold"
                    Foreground="PaleVioletRed"
                    Text="{x:Static p:Resources.Make_sure_the_devices_are_awake}" />
                <Button
                    Grid.Row="2"
                    Grid.Column="4"
                    Grid.ColumnSpan="2"
                    Margin="8,0"
                    VerticalAlignment="Center"
                    Command="{Binding GetAllCommand}"
                    CommandParameter="{Binding ZwaveDetailDevice.SelectedProjectModel, Source={StaticResource Locator}}"
                    Content="{x:Static p:Resources.Get_All}" />
                <Separator
                    Grid.Row="3"
                    Grid.Column="0"
                    Grid.ColumnSpan="6"
                    Style="{StaticResource MaterialDesignDarkSeparator}" />
                <TextBlock
                    Grid.Row="4"
                    Grid.Column="0"
                    Grid.ColumnSpan="3"
                    Margin="8,0"
                    VerticalAlignment="Center"
                    Text="{x:Static p:Resources.Get_the_battery_level}" />
                <TextBlock
                    Grid.Row="4"
                    Grid.Column="3"
                    Margin="8,0"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center">
                    <Run Text="{Binding BatteryLevel}" />
                    <Run Text="%" />
                </TextBlock>
                <Button
                    Grid.Row="4"
                    Grid.Column="4"
                    Grid.ColumnSpan="2"
                    Margin="8,0"
                    VerticalAlignment="Center"
                    Command="{Binding GetBatteryStatusCommand}"
                    CommandParameter="{Binding ZwaveDetailDevice.SelectedProjectModel, Source={StaticResource Locator}}"
                    Content="{x:Static p:Resources.Get}">
                    <Button.Style>
                        <Style BasedOn="{StaticResource MaterialDesignRaisedButton}" TargetType="Button">
                            <Setter Property="IsEnabled" Value="False" />
                            <Style.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding Path=(Validation.HasError), UpdateSourceTrigger=PropertyChanged, ElementName=TxtBASICSETLevel}" Value="False" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="IsEnabled" Value="True" />
                                </MultiDataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
                <Separator
                    Grid.Row="6"
                    Grid.Column="0"
                    Grid.ColumnSpan="6"
                    Style="{StaticResource MaterialDesignDarkSeparator}" />
                <TextBlock
                    Grid.Row="7"
                    Grid.Column="0"
                    Margin="8,0"
                    Text="{x:Static p:Resources.Parameter}" />
                <TextBlock
                    Grid.Row="7"
                    Grid.Column="1"
                    Margin="8,0"
                    Text="{x:Static p:Resources.Size}" />
                <TextBlock
                    Grid.Row="7"
                    Grid.Column="3"
                    Margin="8,0"
                    HorizontalAlignment="Center"
                    Text="{x:Static p:Resources.Value}" />
                <TextBlock
                    Grid.Row="7"
                    Grid.Column="4"
                    Grid.ColumnSpan="2"
                    Margin="8,0"
                    HorizontalAlignment="Center"
                    Text="{x:Static p:Resources.Actions}" />
                <Separator
                    Grid.Row="8"
                    Grid.Column="0"
                    Grid.ColumnSpan="6"
                    Style="{StaticResource MaterialDesignDarkSeparator}" />
                <TextBlock
                    Grid.Row="9"
                    Grid.Column="0"
                    Margin="0,0,8,0"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Text="1" />
                <TextBlock
                    Grid.Row="9"
                    Grid.Column="1"
                    Margin="0,0,8,0"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Text="1" />
                <StackPanel
                    Grid.Row="9"
                    Grid.Column="2"
                    Orientation="Horizontal">
                    <TextBlock VerticalAlignment="Center" Text="{x:Static p:Resources.Sensitivity_Level}" />
                    <materialDesign:PackIcon
                        VerticalAlignment="Center"
                        Kind="Information"
                        ToolTip="{x:Static p:Resources.This_parameter_sets_the_sensitivity_of_the_Motion_Detector}" />
                </StackPanel>
                <TextBox
                    x:Name="TxtSensitivityLevel"
                    Grid.Row="9"
                    Grid.Column="3"
                    Margin="8,0"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Top"
                    materialDesign:HintAssist.Hint="8 ~ 255"
                    materialDesign:ValidationAssist.Suppress="True">
                    <TextBox.Style>
                        <Style BasedOn="{StaticResource MaterialDesignFilledTextBox}" TargetType="{x:Type TextBox}">
                            <Style.Triggers>
                                <Trigger Property="Validation.HasError" Value="true">
                                    <Setter Property="ToolTip" Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors)/ErrorContent}" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </TextBox.Style>
                    <TextBox.Text>
                        <Binding
                            Mode="TwoWay"
                            Path="SensitivityLevel"
                            UpdateSourceTrigger="PropertyChanged"
                            ValidatesOnDataErrors="True">
                            <Binding.ValidationRules>
                                <validator:NumberRangeValidationRule Max="255" Min="8" />
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                </TextBox>
                <Button
                    Grid.Row="9"
                    Grid.Column="4"
                    Margin="8,0"
                    VerticalAlignment="Center"
                    Command="{Binding GetSensitivityLevelCommand}"
                    CommandParameter="{Binding ZwaveDetailDevice.SelectedProjectModel, Source={StaticResource Locator}}"
                    Content="{x:Static p:Resources.Get}" />
                <Button
                    Grid.Row="9"
                    Grid.Column="5"
                    Margin="8,0"
                    VerticalAlignment="Center"
                    Command="{Binding SetSensitivityLevelCommand}"
                    CommandParameter="{Binding ZwaveDetailDevice.SelectedProjectModel, Source={StaticResource Locator}}"
                    Content="{x:Static p:Resources.Set}">
                    <Button.Style>
                        <Style BasedOn="{StaticResource MaterialDesignRaisedButton}" TargetType="Button">
                            <Setter Property="IsEnabled" Value="False" />
                            <Style.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding Path=(Validation.HasError), UpdateSourceTrigger=PropertyChanged, ElementName=TxtSensitivityLevel}" Value="False" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="IsEnabled" Value="True" />
                                </MultiDataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
                <Separator
                    Grid.Row="10"
                    Grid.Column="0"
                    Grid.ColumnSpan="6"
                    Style="{StaticResource MaterialDesignDarkSeparator}" />
                <TextBlock
                    Grid.Row="11"
                    Grid.Column="0"
                    Margin="0,0,8,0"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Text="2" />
                <TextBlock
                    Grid.Row="11"
                    Grid.Column="1"
                    Margin="0,0,8,0"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Text="2" />
                <StackPanel
                    Grid.Row="11"
                    Grid.Column="2"
                    Orientation="Horizontal">
                    <TextBlock VerticalAlignment="Center" Text="{x:Static p:Resources.Motion_cleared_time_delay}" />

                    <materialDesign:PackIcon
                        VerticalAlignment="Center"
                        Kind="Information"
                        ToolTip="{x:Static p:Resources.This_parameters_sets_the_amount_of_time_after_a_motion_event_before_the_Motion_Detector}" />
                </StackPanel>
                <TextBox
                    x:Name="TxtMotionClearedTimeDelay"
                    Grid.Row="11"
                    Grid.Column="3"
                    Margin="8,0"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Center"
                    materialDesign:ValidationAssist.Suppress="True">
                    <materialDesign:HintAssist.Hint>
                        <TextBlock>
                            <Run Text="9 ~ 600" />
                            <Run Text="{x:Static p:Resources.Range_in_Seconds}" />
                        </TextBlock>
                    </materialDesign:HintAssist.Hint>
                    <TextBox.Style>
                        <Style BasedOn="{StaticResource MaterialDesignFilledTextBox}" TargetType="{x:Type TextBox}">
                            <Style.Triggers>
                                <Trigger Property="Validation.HasError" Value="true">
                                    <Setter Property="ToolTip" Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors)/ErrorContent}" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </TextBox.Style>
                    <TextBox.Text>
                        <Binding
                            Mode="TwoWay"
                            Path="MotionClearedTimeDelay"
                            UpdateSourceTrigger="PropertyChanged"
                            ValidatesOnDataErrors="True">
                            <Binding.ValidationRules>
                                <validator:NumberRangeValidationRule Max="600" Min="9" />
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                </TextBox>
                <Button
                    Grid.Row="11"
                    Grid.Column="4"
                    Margin="8,0"
                    VerticalAlignment="Center"
                    Command="{Binding GetMotionClearedTimeDelayCommand}"
                    CommandParameter="{Binding ZwaveDetailDevice.SelectedProjectModel, Source={StaticResource Locator}}"
                    Content="{x:Static p:Resources.Get}" />
                <Button
                    Grid.Row="11"
                    Grid.Column="5"
                    Margin="8,0"
                    VerticalAlignment="Center"
                    Command="{Binding SetMotionClearedTimeDelayCommand}"
                    CommandParameter="{Binding ZwaveDetailDevice.SelectedProjectModel, Source={StaticResource Locator}}"
                    Content="{x:Static p:Resources.Set}">
                    <Button.Style>
                        <Style BasedOn="{StaticResource MaterialDesignRaisedButton}" TargetType="Button">
                            <Setter Property="IsEnabled" Value="False" />
                            <Style.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding Path=(Validation.HasError), UpdateSourceTrigger=PropertyChanged, ElementName=TxtMotionClearedTimeDelay}" Value="False" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="IsEnabled" Value="True" />
                                </MultiDataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
                <Separator
                    Grid.Row="12"
                    Grid.Column="0"
                    Grid.ColumnSpan="6"
                    Style="{StaticResource MaterialDesignDarkSeparator}" />
                <TextBlock
                    Grid.Row="13"
                    Grid.Column="0"
                    Margin="0,0,8,0"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Text="3" />
                <TextBlock
                    Grid.Row="13"
                    Grid.Column="1"
                    Margin="0,0,8,0"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Text="1" />
                <StackPanel
                    Grid.Row="13"
                    Grid.Column="2"
                    Orientation="Horizontal">
                    <TextBlock VerticalAlignment="Center" Text="{x:Static p:Resources.BASIC_SET_Level}" />

                    <materialDesign:PackIcon
                        VerticalAlignment="Center"
                        Kind="Information"
                        ToolTip="{x:Static p:Resources.This_parameter_sets_the_value_sent_by_the_BASIC_SET}" />
                </StackPanel>
                <TextBox
                    x:Name="TxtBASICSETLevel"
                    Grid.Row="13"
                    Grid.Column="3"
                    Margin="8,0"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Center"
                    materialDesign:ValidationAssist.Suppress="True">
                    <materialDesign:HintAssist.Hint>
                        <TextBlock>
                            <Run Text="0 ~ 255" />
                        </TextBlock>
                    </materialDesign:HintAssist.Hint>
                    <TextBox.Style>
                        <Style BasedOn="{StaticResource MaterialDesignFilledTextBox}" TargetType="{x:Type TextBox}">
                            <Style.Triggers>
                                <Trigger Property="Validation.HasError" Value="true">
                                    <Setter Property="ToolTip" Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors)/ErrorContent}" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </TextBox.Style>
                    <TextBox.Text>
                        <Binding
                            Mode="TwoWay"
                            Path="BASICSETLevel"
                            UpdateSourceTrigger="PropertyChanged"
                            ValidatesOnDataErrors="True">
                            <Binding.ValidationRules>
                                <validator:NumberRangeValidationRule Max="255" Min="0" />
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                </TextBox>
                <Button
                    Grid.Row="13"
                    Grid.Column="4"
                    Margin="8,0"
                    VerticalAlignment="Center"
                    Command="{Binding GetBASICSETLevelCommand}"
                    CommandParameter="{Binding ZwaveDetailDevice.SelectedProjectModel, Source={StaticResource Locator}}"
                    Content="{x:Static p:Resources.Get}" />
                <Button
                    Grid.Row="13"
                    Grid.Column="5"
                    Margin="8,0"
                    VerticalAlignment="Center"
                    Command="{Binding SetBASICSETLevelCommand}"
                    CommandParameter="{Binding ZwaveDetailDevice.SelectedProjectModel, Source={StaticResource Locator}}"
                    Content="{x:Static p:Resources.Set}">
                    <Button.Style>
                        <Style BasedOn="{StaticResource MaterialDesignRaisedButton}" TargetType="Button">
                            <Setter Property="IsEnabled" Value="False" />
                            <Style.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding Path=(Validation.HasError), UpdateSourceTrigger=PropertyChanged, ElementName=TxtBASICSETLevel}" Value="False" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="IsEnabled" Value="True" />
                                </MultiDataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
                <Separator
                    Grid.Row="14"
                    Grid.Column="0"
                    Grid.ColumnSpan="6"
                    Style="{StaticResource MaterialDesignDarkSeparator}" />
                <TextBlock
                    Grid.Row="15"
                    Grid.Column="0"
                    Margin="0,0,8,0"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Text="4" />
                <TextBlock
                    Grid.Row="15"
                    Grid.Column="1"
                    Margin="0,0,8,0"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Text="1" />
                <StackPanel
                    Grid.Row="15"
                    Grid.Column="2"
                    Orientation="Horizontal">
                    <TextBlock VerticalAlignment="Center" Text="{x:Static p:Resources.Motion_Detector}" />
                    <materialDesign:PackIcon
                        VerticalAlignment="Center"
                        Kind="Information"
                        ToolTip="{x:Static p:Resources.This_setting_enables_or_disables_motion_detection_and_light_reporting_}" />
                </StackPanel>
                <StackPanel
                    Grid.Row="15"
                    Grid.Column="3"
                    Margin="8,0"
                    Orientation="Horizontal">
                    <ToggleButton
                        x:Name="TbMotionDetector"
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Center"
                        IsChecked="{Binding IsMotionDetector}" />
                    <TextBlock Margin="8,0,0,2" VerticalAlignment="Center">
                        <TextBlock.Style>
                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="Text" Value="{x:Static p:Resources.Disabled}" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=IsChecked, ElementName=TbMotionDetector}" Value="True">
                                        <Setter Property="Text" Value="{x:Static p:Resources.Enabled}" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>
                </StackPanel>
                <Button
                    Grid.Row="15"
                    Grid.Column="4"
                    Margin="8,0"
                    VerticalAlignment="Center"
                    Command="{Binding GetMotionDetectorCommand}"
                    CommandParameter="{Binding ZwaveDetailDevice.SelectedProjectModel, Source={StaticResource Locator}}"
                    Content="{x:Static p:Resources.Get}" />
                <Button
                    Grid.Row="15"
                    Grid.Column="5"
                    Margin="8,0"
                    VerticalAlignment="Center"
                    Command="{Binding SetMotionDetectorCommand}"
                    CommandParameter="{Binding ZwaveDetailDevice.SelectedProjectModel, Source={StaticResource Locator}}"
                    Content="{x:Static p:Resources.Set}"
                    Style="{StaticResource MaterialDesignRaisedButton}" />
                <Separator
                    Grid.Row="16"
                    Grid.Column="0"
                    Grid.ColumnSpan="6"
                    Style="{StaticResource MaterialDesignDarkSeparator}" />
                <TextBlock
                    Grid.Row="17"
                    Grid.Column="0"
                    Margin="0,0,8,0"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Text="5" />
                <TextBlock
                    Grid.Row="17"
                    Grid.Column="1"
                    Margin="0,0,8,0"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Text="2" />
                <StackPanel
                    Grid.Row="17"
                    Grid.Column="2"
                    Orientation="Horizontal">
                    <TextBlock VerticalAlignment="Center" Text="{x:Static p:Resources.Group_2_Ambient_Light_Threshold}" />
                    <materialDesign:PackIcon
                        VerticalAlignment="Center"
                        Kind="Information"
                        ToolTip="{x:Static p:Resources.If_Parameter_8_is_enabled}" />
                </StackPanel>
                <TextBox
                    x:Name="TxtGroup2AmbientLightThreshold"
                    Grid.Row="17"
                    Grid.Column="3"
                    Margin="8,0"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Top"
                    materialDesign:ValidationAssist.Suppress="True">
                    <materialDesign:HintAssist.Hint>
                        <TextBlock>
                            <Run Text="5 ~ 1000" />
                            <Run Text="{x:Static p:Resources.in_Lux}" />
                        </TextBlock>
                    </materialDesign:HintAssist.Hint>
                    <TextBox.Style>
                        <Style BasedOn="{StaticResource MaterialDesignFilledTextBox}" TargetType="{x:Type TextBox}">
                            <Style.Triggers>
                                <Trigger Property="Validation.HasError" Value="true">
                                    <Setter Property="ToolTip" Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors)/ErrorContent}" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </TextBox.Style>
                    <TextBox.Text>
                        <Binding
                            Mode="TwoWay"
                            Path="Group2AmbientLightThreshold"
                            UpdateSourceTrigger="PropertyChanged"
                            ValidatesOnDataErrors="True">
                            <Binding.ValidationRules>
                                <validator:NumberRangeValidationRule Max="1000" Min="5" />
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                </TextBox>
                <Button
                    Grid.Row="17"
                    Grid.Column="4"
                    Margin="8,0"
                    VerticalAlignment="Center"
                    Command="{Binding GetGroup2AmbientLightThresholdCommand}"
                    CommandParameter="{Binding ZwaveDetailDevice.SelectedProjectModel, Source={StaticResource Locator}}"
                    Content="{x:Static p:Resources.Get}" />
                <Button
                    Grid.Row="17"
                    Grid.Column="5"
                    Margin="8,0"
                    VerticalAlignment="Center"
                    Command="{Binding SetGroup2AmbientLightThresholdCommand}"
                    CommandParameter="{Binding ZwaveDetailDevice.SelectedProjectModel, Source={StaticResource Locator}}"
                    Content="{x:Static p:Resources.Set}">
                    <Button.Style>
                        <Style BasedOn="{StaticResource MaterialDesignRaisedButton}" TargetType="Button">
                            <Setter Property="IsEnabled" Value="False" />
                            <Style.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding Path=(Validation.HasError), UpdateSourceTrigger=PropertyChanged, ElementName=TxtGroup2AmbientLightThreshold}" Value="False" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="IsEnabled" Value="True" />
                                </MultiDataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
                <Separator
                    Grid.Row="18"
                    Grid.Column="0"
                    Grid.ColumnSpan="6"
                    Style="{StaticResource MaterialDesignDarkSeparator}" />
                <TextBlock
                    Grid.Row="19"
                    Grid.Column="0"
                    Margin="0,0,8,0"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Text="6" />
                <TextBlock
                    Grid.Row="19"
                    Grid.Column="1"
                    Margin="0,0,8,0"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Text="1" />
                <StackPanel
                    Grid.Row="19"
                    Grid.Column="2"
                    Orientation="Horizontal">
                    <TextBlock VerticalAlignment="Center" Text="{x:Static p:Resources.Retrigger_Interval}" />
                    <materialDesign:PackIcon
                        VerticalAlignment="Center"
                        Kind="Information"
                        ToolTip="{x:Static p:Resources.After_each_motion_event}" />
                </StackPanel>
                <TextBox
                    x:Name="TxtRetriggerInterval"
                    Grid.Row="19"
                    Grid.Column="3"
                    Margin="8,0"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Top"
                    materialDesign:ValidationAssist.Suppress="True">
                    <materialDesign:HintAssist.Hint>
                        <TextBlock>
                            <Run Text="1 ~ 8" />
                            <Run Text="{x:Static p:Resources.Range_in_Seconds}" />
                        </TextBlock>
                    </materialDesign:HintAssist.Hint>
                    <TextBox.Style>
                        <Style BasedOn="{StaticResource MaterialDesignFilledTextBox}" TargetType="{x:Type TextBox}">
                            <Style.Triggers>
                                <Trigger Property="Validation.HasError" Value="true">
                                    <Setter Property="ToolTip" Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors)/ErrorContent}" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </TextBox.Style>
                    <TextBox.Text>
                        <Binding
                            Mode="TwoWay"
                            Path="RetriggerInterval"
                            UpdateSourceTrigger="PropertyChanged"
                            ValidatesOnDataErrors="True">
                            <Binding.ValidationRules>
                                <validator:NumberRangeValidationRule Max="8" Min="1" />
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                </TextBox>
                <Button
                    Grid.Row="19"
                    Grid.Column="4"
                    Margin="8,0"
                    VerticalAlignment="Center"
                    Command="{Binding GetRetriggerIntervalCommand}"
                    CommandParameter="{Binding ZwaveDetailDevice.SelectedProjectModel, Source={StaticResource Locator}}"
                    Content="{x:Static p:Resources.Get}" />
                <Button
                    Grid.Row="19"
                    Grid.Column="5"
                    Margin="8,0"
                    VerticalAlignment="Center"
                    Command="{Binding SetRetriggerIntervalCommand}"
                    CommandParameter="{Binding ZwaveDetailDevice.SelectedProjectModel, Source={StaticResource Locator}}"
                    Content="{x:Static p:Resources.Set}">
                    <Button.Style>
                        <Style BasedOn="{StaticResource MaterialDesignRaisedButton}" TargetType="Button">
                            <Setter Property="IsEnabled" Value="False" />
                            <Style.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding Path=(Validation.HasError), UpdateSourceTrigger=PropertyChanged, ElementName=TxtRetriggerInterval}" Value="False" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="IsEnabled" Value="True" />
                                </MultiDataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
                <Separator
                    Grid.Row="20"
                    Grid.Column="0"
                    Grid.ColumnSpan="6"
                    Style="{StaticResource MaterialDesignDarkSeparator}" />
                <TextBlock
                    Grid.Row="21"
                    Grid.Column="0"
                    Margin="0,0,8,0"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Text="7" />
                <TextBlock
                    Grid.Row="21"
                    Grid.Column="1"
                    Margin="0,0,8,0"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Text="2" />
                <StackPanel
                    Grid.Row="21"
                    Grid.Column="2"
                    Orientation="Horizontal">
                    <TextBlock VerticalAlignment="Center" Text="{x:Static p:Resources.Light_Sensing_Interval}" />
                    <materialDesign:PackIcon
                        VerticalAlignment="Center"
                        Kind="Information"
                        ToolTip="{x:Static p:Resources.This_parameter_sets_the_amount}" />
                </StackPanel>
                <TextBox
                    x:Name="TxtLightSensingInterval"
                    Grid.Row="21"
                    Grid.Column="3"
                    Margin="8,0"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Top"
                    materialDesign:ValidationAssist.Suppress="True">
                    <materialDesign:HintAssist.Hint>
                        <TextBlock>
                            <Run Text="60 ~ 36000" />
                            <Run Text="{x:Static p:Resources.Range_in_Seconds}" />
                        </TextBlock>
                    </materialDesign:HintAssist.Hint>
                    <TextBox.Style>
                        <Style BasedOn="{StaticResource MaterialDesignFilledTextBox}" TargetType="{x:Type TextBox}">
                            <Style.Triggers>
                                <Trigger Property="Validation.HasError" Value="true">
                                    <Setter Property="ToolTip" Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors)/ErrorContent}" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </TextBox.Style>
                    <TextBox.Text>
                        <Binding
                            Mode="TwoWay"
                            Path="LightSensingInterval"
                            UpdateSourceTrigger="PropertyChanged"
                            ValidatesOnDataErrors="True">
                            <Binding.ValidationRules>
                                <validator:NumberRangeValidationRule Max="36000" Min="60" />
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                </TextBox>
                <Button
                    Grid.Row="21"
                    Grid.Column="4"
                    Margin="8,0"
                    VerticalAlignment="Center"
                    Command="{Binding GetLightSensingIntervalCommand}"
                    CommandParameter="{Binding ZwaveDetailDevice.SelectedProjectModel, Source={StaticResource Locator}}"
                    Content="{x:Static p:Resources.Get}" />
                <Button
                    Grid.Row="21"
                    Grid.Column="5"
                    Margin="8,0"
                    VerticalAlignment="Center"
                    Command="{Binding SetLightSensingIntervalCommand}"
                    CommandParameter="{Binding ZwaveDetailDevice.SelectedProjectModel, Source={StaticResource Locator}}"
                    Content="{x:Static p:Resources.Set}">
                    <Button.Style>
                        <Style BasedOn="{StaticResource MaterialDesignRaisedButton}" TargetType="Button">
                            <Setter Property="IsEnabled" Value="False" />
                            <Style.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding Path=(Validation.HasError), UpdateSourceTrigger=PropertyChanged, ElementName=TxtLightSensingInterval}" Value="False" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="IsEnabled" Value="True" />
                                </MultiDataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
                <Separator
                    Grid.Row="22"
                    Grid.Column="0"
                    Grid.ColumnSpan="6"
                    Style="{StaticResource MaterialDesignDarkSeparator}" />
                <TextBlock
                    Grid.Row="23"
                    Grid.Column="0"
                    Margin="0,0,8,0"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Text="8" />
                <TextBlock
                    Grid.Row="23"
                    Grid.Column="1"
                    Margin="0,0,8,0"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Text="1" />
                <StackPanel
                    Grid.Row="23"
                    Grid.Column="2"
                    Orientation="Horizontal">
                    <TextBlock VerticalAlignment="Center" Text="{x:Static p:Resources.Group_2_Ambient_Light_Threshold}" />
                    <materialDesign:PackIcon
                        VerticalAlignment="Center"
                        Kind="Information"
                        ToolTip="{x:Static p:Resources.If_this_parameter_is_enabled__the_Motion_Detector_will}" />
                </StackPanel>
                <StackPanel
                    Grid.Row="23"
                    Grid.Column="3"
                    Margin="8,0"
                    Orientation="Horizontal">
                    <ToggleButton
                        x:Name="TbGroup2AmbientLightThreshold"
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Center"
                        IsChecked="{Binding IsGroup2AmbientLightThreshold}" />
                    <TextBlock Margin="8,0,0,2" VerticalAlignment="Center">
                        <TextBlock.Style>
                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="Text" Value="{x:Static p:Resources.Disabled}" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=IsChecked, ElementName=TbGroup2AmbientLightThreshold}" Value="True">
                                        <Setter Property="Text" Value="{x:Static p:Resources.Enabled}" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>
                </StackPanel>
                <Button
                    Grid.Row="23"
                    Grid.Column="4"
                    Margin="8,0"
                    VerticalAlignment="Center"
                    Command="{Binding GetIsGroup2AmbientLightThresholdCommand}"
                    CommandParameter="{Binding ZwaveDetailDevice.SelectedProjectModel, Source={StaticResource Locator}}"
                    Content="{x:Static p:Resources.Get}" />
                <Button
                    Grid.Row="23"
                    Grid.Column="5"
                    Margin="8,0"
                    VerticalAlignment="Center"
                    Command="{Binding SetIsGroup2AmbientLightThresholdCommand}"
                    CommandParameter="{Binding ZwaveDetailDevice.SelectedProjectModel, Source={StaticResource Locator}}"
                    Content="{x:Static p:Resources.Set}"
                    Style="{StaticResource MaterialDesignRaisedButton}" />
                <Separator
                    Grid.Row="24"
                    Grid.Column="0"
                    Grid.ColumnSpan="6"
                    Style="{StaticResource MaterialDesignDarkSeparator}" />
                <TextBlock
                    Grid.Row="25"
                    Grid.Column="0"
                    Margin="0,0,8,0"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Text="9" />
                <TextBlock
                    Grid.Row="25"
                    Grid.Column="1"
                    Margin="0,0,8,0"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Text="1" />
                <StackPanel
                    Grid.Row="25"
                    Grid.Column="2"
                    Orientation="Horizontal">
                    <TextBlock VerticalAlignment="Center" Text="{x:Static p:Resources.Group_2_Ambient_Light_Threshold}" />
                    <materialDesign:PackIcon
                        VerticalAlignment="Center"
                        Kind="Information"
                        ToolTip="{x:Static p:Resources.This_Parameter_sets_the_minimum}" />
                </StackPanel>
                <TextBox
                    x:Name="TxtAmbientLightSensitivityLevel"
                    Grid.Row="25"
                    Grid.Column="3"
                    Margin="8,0"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Top"
                    materialDesign:ValidationAssist.Suppress="True">
                    <materialDesign:HintAssist.Hint>
                        <TextBlock>
                            <Run Text="0 ~ 255" />
                            <Run Text="{x:Static p:Resources.in_Lux}" />
                        </TextBlock>
                    </materialDesign:HintAssist.Hint>
                    <TextBox.Style>
                        <Style BasedOn="{StaticResource MaterialDesignFilledTextBox}" TargetType="{x:Type TextBox}">
                            <Style.Triggers>
                                <Trigger Property="Validation.HasError" Value="true">
                                    <Setter Property="ToolTip" Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors)/ErrorContent}" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </TextBox.Style>
                    <TextBox.Text>
                        <Binding
                            Mode="TwoWay"
                            Path="AmbientLightSensitivityLevel"
                            UpdateSourceTrigger="PropertyChanged"
                            ValidatesOnDataErrors="True">
                            <Binding.ValidationRules>
                                <validator:NumberRangeValidationRule Max="255" Min="0" />
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                </TextBox>
                <Button
                    Grid.Row="25"
                    Grid.Column="4"
                    Margin="8,0"
                    VerticalAlignment="Center"
                    Command="{Binding GetAmbientLightSensitivityLevelCommand}"
                    CommandParameter="{Binding ZwaveDetailDevice.SelectedProjectModel, Source={StaticResource Locator}}"
                    Content="{x:Static p:Resources.Get}" />
                <Button
                    Grid.Row="25"
                    Grid.Column="5"
                    Margin="8,0"
                    VerticalAlignment="Center"
                    Command="{Binding SetAmbientLightSensitivityLevelCommand}"
                    CommandParameter="{Binding ZwaveDetailDevice.SelectedProjectModel, Source={StaticResource Locator}}"
                    Content="{x:Static p:Resources.Set}">
                    <Button.Style>
                        <Style BasedOn="{StaticResource MaterialDesignRaisedButton}" TargetType="Button">
                            <Setter Property="IsEnabled" Value="False" />
                            <Style.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding Path=(Validation.HasError), UpdateSourceTrigger=PropertyChanged, ElementName=TxtAmbientLightSensitivityLevel}" Value="False" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="IsEnabled" Value="True" />
                                </MultiDataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
                <Separator
                    Grid.Row="26"
                    Grid.Column="0"
                    Grid.ColumnSpan="6"
                    Style="{StaticResource MaterialDesignDarkSeparator}" />
                <TextBlock
                    Grid.Row="27"
                    Grid.Column="0"
                    Margin="0,0,8,0"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Text="10" />
                <TextBlock
                    Grid.Row="27"
                    Grid.Column="1"
                    Margin="0,0,8,0"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Text="1" />
                <StackPanel
                    Grid.Row="27"
                    Grid.Column="2"
                    Orientation="Horizontal">
                    <TextBlock VerticalAlignment="Center" Text="{x:Static p:Resources.LED_Indicator}" />
                    <materialDesign:PackIcon
                        VerticalAlignment="Center"
                        Kind="Information"
                        ToolTip="{x:Static p:Resources.If_this_parameter_is_enabled__the_LED_INDICATOR}" />
                </StackPanel>
                <StackPanel
                    Grid.Row="27"
                    Grid.Column="3"
                    Margin="8,0"
                    Orientation="Horizontal">
                    <ToggleButton
                        x:Name="TbLEDIndicator"
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Center"
                        IsChecked="{Binding IsLEDIndicator}" />
                    <TextBlock Margin="8,0,0,2" VerticalAlignment="Center">
                        <TextBlock.Style>
                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="Text" Value="{x:Static p:Resources.Disabled}" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=IsChecked, ElementName=TbLEDIndicator}" Value="True">
                                        <Setter Property="Text" Value="{x:Static p:Resources.Enabled}" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>
                </StackPanel>
                <Button
                    Grid.Row="27"
                    Grid.Column="4"
                    Margin="8,0"
                    VerticalAlignment="Center"
                    Command="{Binding GetLEDIndicatorCommand}"
                    CommandParameter="{Binding ZwaveDetailDevice.SelectedProjectModel, Source={StaticResource Locator}}"
                    Content="{x:Static p:Resources.Get}" />
                <Button
                    Grid.Row="27"
                    Grid.Column="5"
                    Margin="8,0"
                    VerticalAlignment="Center"
                    Command="{Binding SetLEDIndicatorCommand}"
                    CommandParameter="{Binding ZwaveDetailDevice.SelectedProjectModel, Source={StaticResource Locator}}"
                    Content="{x:Static p:Resources.Set}" />
            </Grid>
        </Expander>
    </materialDesign:DialogHost>
</UserControl>