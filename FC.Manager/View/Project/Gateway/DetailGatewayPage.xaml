<Page
    x:Class="FC.Manager.View.Project.Gateway.DetailGatewayPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:components="clr-namespace:FC.Manager.View.Components"
    xmlns:core="clr-namespace:System;assembly=mscorlib"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:dd="clr-namespace:GongSolutions.Wpf.DragDrop;assembly=GongSolutions.Wpf.DragDrop"
    xmlns:edit="clr-namespace:FC.Manager.View.Project.Gateway"
    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:model="clr-namespace:FC.Domain.Model;assembly=FC.Domain"
    xmlns:p="clr-namespace:FC.Domain.Properties;assembly=FC.Domain"
    xmlns:zwave="clr-namespace:FC.Manager.View.Project.Gateway.Zwave"
    x:Name="detailDevicePage"
    Title="{x:Static p:Resources.Detail_Device}"
    d:DesignHeight="450"
    d:DesignWidth="800"
    DataContext="{Binding DetailDevice, Source={StaticResource Locator}}"
    mc:Ignorable="d">
    <Page.Resources>
        <ObjectDataProvider
            x:Key="gatewayConnectionType"
            MethodName="GetValues"
            ObjectType="{x:Type core:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type Type="model:GatewayConnectionType" />
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        <Style
            x:Key="listBoxError"
            BasedOn="{StaticResource MaterialDesignListBox}"
            TargetType="{x:Type ListBox}">
            <Setter Property="Margin" Value="1" />
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="true">
                    <Setter Property="BorderThickness" Value="0" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <DataTemplate x:Key="itemModules">
            <materialDesign:Card Width="242" Height="140">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="MouseUp">
                        <i:InvokeCommandAction Command="{Binding ElementName=DetailDevicePage, Path=DataContext.SelectedChangedGatewayCommand}" CommandParameter="{Binding Path=.}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <Border Grid.Row="0" Margin="0,16">
                        <Image Source="{Binding UriImagem}" />
                    </Border>
                    <Border
                        Grid.Row="1"
                        Background="Black"
                        Opacity="0.5" />
                    <Grid Grid.Row="1" Margin="8">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <TextBlock
                            Grid.Row="0"
                            Grid.ColumnSpan="2"
                            Text="{Binding Name}" />
                        <TextBlock
                            Grid.Row="1"
                            Opacity=".5"
                            Text="{Binding LocalIP}" />
                        <TextBlock
                            Grid.Row="1"
                            Grid.Column="1"
                            Margin="8,0"
                            Opacity=".5"
                            Text="{Binding Pin}" />
                    </Grid>
                </Grid>
            </materialDesign:Card>
        </DataTemplate>
        <Style
            x:Key="myLBStyle"
            BasedOn="{StaticResource MaterialDesignListBoxItem}"
            TargetType="{x:Type ListBoxItem}">
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="IsEnabled" Value="True" />
            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
            <Setter Property="Opacity" Value="1" />
            <Setter Property="HorizontalAlignment" Value="Stretch" />
            <Setter Property="Padding" Value="4,4,4,3" />
            <Setter Property="Margin" Value="2" />
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="BorderBrush" Value="{StaticResource MaterialDesignBodyLight}" />
                    <Setter Property="BorderThickness" Value="1" />
                    <Setter Property="Background" Value="Green" />
                </Trigger>
                <Trigger Property="IsSelected" Value="False">
                    <Setter Property="Background" Value="{StaticResource MaterialDesignShadowBrush}" />
                </Trigger>
            </Style.Triggers>
            <Style.Resources>
                <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="Transparent" />
            </Style.Resources>
        </Style>
    </Page.Resources>
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding LoadedCommand}" CommandParameter="{Binding ElementName=TabControl}" />
        </i:EventTrigger>
        <i:EventTrigger EventName="Unloaded">
            <i:InvokeCommandAction Command="{Binding UnloadedCommand}" />
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <materialDesign:DialogHost
        Margin="0"
        Padding="0"
        DialogContent="{Binding DialogContent}"
        FocusVisualStyle="{x:Null}"
        IsOpen="{Binding IsOpenDialogHost}">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="56" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Rectangle Grid.Row="0" Fill="{Binding SelectedProjectModel.SelectedGateway.Background}" />
            <Rectangle
                Grid.Row="0"
                Fill="Black"
                Opacity=".5" />
            <Grid Grid.Row="0" Margin="8">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <Button
                    Grid.RowSpan="2"
                    Grid.Column="0"
                    Margin="8,0,24,0"
                    VerticalAlignment="Center"
                    Command="{Binding NavigateBeforeCommand}"
                    FocusVisualStyle="{x:Null}">
                    <Button.Style>
                        <Style BasedOn="{StaticResource MaterialDesignToolButton}" TargetType="{x:Type Button}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsSendingToGateway, UpdateSourceTrigger=PropertyChanged}" Value="True">
                                    <Setter Property="IsEnabled" Value="False" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding IsSendingToCloud, UpdateSourceTrigger=PropertyChanged}" Value="True">
                                    <Setter Property="IsEnabled" Value="False" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                    <StackPanel Orientation="Horizontal">
                        <materialDesign:PackIcon
                            Width="24"
                            Height="24"
                            Foreground="{StaticResource MaterialDesignDarkForeground}"
                            Kind="NavigateBefore" />
                        <TextBlock
                            Margin="0,0,0,1"
                            VerticalAlignment="Center"
                            Foreground="{StaticResource MaterialDesignDarkForeground}"
                            Text="{x:Static p:Resources.Back}" />
                    </StackPanel>
                </Button>
                <Grid
                    Grid.Row="0"
                    Grid.RowSpan="2"
                    Grid.Column="2"
                    VerticalAlignment="Center">
                    <Grid.Resources>
                        <Style TargetType="TextBlock">
                            <Setter Property="FontSize" Value="11" />
                        </Style>
                    </Grid.Resources>
                    <Grid.RowDefinitions>
                        <RowDefinition />
                        <RowDefinition />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <Image
                        Grid.Row="0"
                        Grid.RowSpan="2"
                        Grid.Column="0"
                        Height="40"
                        Margin="0,0,8,0"
                        RenderOptions.BitmapScalingMode="HighQuality"
                        RenderOptions.EdgeMode="Aliased"
                        Source="{Binding Path=SelectedProjectModel.SelectedGateway, Converter={StaticResource devicesImageConverter}}" />
                    <StackPanel
                        Grid.Row="0"
                        Grid.Column="1"
                        Grid.ColumnSpan="9"
                        Orientation="Horizontal">
                        <Border
                            Margin="0,0,0,0"
                            Padding="4,0"
                            VerticalAlignment="Center"
                            Background="{Binding SelectedProjectModel.PrimaryColor}"
                            BorderBrush="{DynamicResource Byzantium}"
                            BorderThickness="1"
                            CornerRadius="4">
                            <TextBlock
                                Margin="0,0,0,0"
                                VerticalAlignment="Center"
                                Foreground="{StaticResource MaterialDesignDarkForeground}"
                                Text="{Binding SelectedProjectModel.Name, TargetNullValue={x:Static p:Resources.Unnamed}}"
                                TextTrimming="CharacterEllipsis" />
                        </Border>
                        <Border
                            Margin="0,0,0,0"
                            Padding="4,0"
                            VerticalAlignment="Center"
                            Background="{Binding SelectedProjectModel.SelectedGateway.Background}"
                            BorderBrush="{DynamicResource Byzantium}"
                            BorderThickness="1"
                            CornerRadius="4">
                            <TextBlock
                                Margin="0,0,0,0"
                                VerticalAlignment="Center"
                                Foreground="{StaticResource MaterialDesignDarkForeground}"
                                Text="{Binding SelectedProjectModel.SelectedGateway.Name}"
                                TextTrimming="CharacterEllipsis" />
                        </Border>
                        <components:IsPrimaryUserControl
                            HorizontalAlignment="Left"
                            VerticalAlignment="Center"
                            DataContext="{Binding ElementName=detailDevicePage, Path=DataContext.SelectedProjectModel.SelectedGateway, TargetNullValue={x:Null}}" />
                    </StackPanel>
                    <StackPanel
                        Grid.Row="1"
                        Grid.Column="2"
                        VerticalAlignment="Center"
                        Orientation="Horizontal">
                        <TextBlock
                            Margin="0,0,4,0"
                            VerticalAlignment="Center"
                            Foreground="{StaticResource MaterialDesignDarkForeground}"
                            Opacity=".8"
                            Text="IP"
                            TextOptions.TextRenderingMode="ClearType" />
                        <TextBlock
                            Grid.Row="1"
                            Grid.Column="1"
                            Margin="0,0,8,0"
                            VerticalAlignment="Center"
                            Foreground="{StaticResource MaterialDesignDarkForeground}"
                            Text="{Binding SelectedProjectModel.SelectedGateway.LocalIP}"
                            TextOptions.TextRenderingMode="ClearType"
                            TextTrimming="CharacterEllipsis" />
                        <TextBlock
                            Margin="0,0,4,0"
                            VerticalAlignment="Center"
                            Foreground="{StaticResource MaterialDesignDarkForeground}"
                            Opacity=".8"
                            Text="TCP"
                            TextOptions.TextRenderingMode="ClearType" />
                        <TextBlock
                            Margin="0,0,8,0"
                            VerticalAlignment="Center"
                            Foreground="{StaticResource MaterialDesignDarkForeground}"
                            Text="{Binding SelectedProjectModel.SelectedGateway.LocalPortTCP}"
                            TextOptions.TextRenderingMode="ClearType" />
                        <TextBlock
                            Margin="0,0,4,0"
                            VerticalAlignment="Center"
                            Foreground="{StaticResource MaterialDesignDarkForeground}"
                            Opacity=".8"
                            Text="UDP"
                            TextOptions.TextRenderingMode="ClearType" />
                        <TextBlock
                            Margin="0,0,8,0"
                            VerticalAlignment="Center"
                            Foreground="{StaticResource MaterialDesignDarkForeground}"
                            Text="{Binding SelectedProjectModel.SelectedGateway.LocalPortUDP}"
                            TextOptions.TextRenderingMode="ClearType" />
                        <TextBlock
                            Margin="0,0,4,0"
                            VerticalAlignment="Center"
                            Foreground="{StaticResource MaterialDesignDarkForeground}"
                            Opacity=".8"
                            Text="Pin"
                            TextOptions.TextRenderingMode="ClearType" />
                        <TextBlock
                            Grid.Row="1"
                            Grid.Column="2"
                            Margin="0,0,8,0"
                            VerticalAlignment="Center"
                            Foreground="{StaticResource MaterialDesignDarkForeground}"
                            Text="{Binding SelectedProjectModel.SelectedGateway.Pin}"
                            TextOptions.TextRenderingMode="ClearType"
                            TextTrimming="CharacterEllipsis" />
                        <ContentControl Margin="0,0,0,0" VerticalAlignment="Center">
                            <ContentControl.Style>
                                <Style TargetType="{x:Type ContentControl}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding SelectedProjectModel.SelectedGateway.ConnectionType}" Value="{x:Static model:ConnectionType.Ethernet}">
                                            <Setter Property="Content">
                                                <Setter.Value>
                                                    <materialDesign:PackIcon
                                                        VerticalAlignment="Center"
                                                        Foreground="{StaticResource MaterialDesignDarkForeground}"
                                                        Kind="Ethernet" />
                                                </Setter.Value>
                                            </Setter>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding SelectedProjectModel.SelectedGateway.ConnectionType}" Value="{x:Static model:ConnectionType.WiFi}">
                                            <Setter Property="Content">
                                                <Setter.Value>
                                                    <materialDesign:PackIcon
                                                        VerticalAlignment="Center"
                                                        Foreground="{StaticResource MaterialDesignDarkForeground}"
                                                        Kind="Wifi" />
                                                </Setter.Value>
                                            </Setter>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding SelectedProjectModel.SelectedGateway.ConnectionType}" Value="{x:Static model:ConnectionType.EthernetWiFi}">
                                            <Setter Property="Content">
                                                <Setter.Value>
                                                    <StackPanel Orientation="Horizontal">
                                                        <materialDesign:PackIcon
                                                            VerticalAlignment="Center"
                                                            Foreground="{StaticResource MaterialDesignDarkForeground}"
                                                            Kind="Ethernet" />
                                                        <materialDesign:PackIcon
                                                            VerticalAlignment="Center"
                                                            Foreground="{StaticResource MaterialDesignDarkForeground}"
                                                            Kind="Wifi" />
                                                    </StackPanel>
                                                </Setter.Value>
                                            </Setter>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </ContentControl.Style>
                        </ContentControl>
                        <TextBlock
                            Grid.Row="1"
                            Grid.Column="5"
                            Margin="8,0,0,0"
                            VerticalAlignment="Center"
                            FontSize="11"
                            Foreground="{StaticResource MaterialDesignDarkForeground}"
                            Opacity=".8"
                            Text="{x:Static p:Resources.Zwave_Frequency}"
                            TextOptions.TextRenderingMode="ClearType">
                            <TextBlock.Style>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Setter Property="Visibility" Value="Visible" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding SelectedProjectModel.SelectedGateway.ZwaveFrequency}" Value="{x:Static model:ZwaveFrequencyEnum.None}">
                                            <Setter Property="Visibility" Value="Collapsed" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                        <StackPanel Orientation="Horizontal">
                            <StackPanel.Resources>
                                <Style TargetType="{x:Type Image}">
                                    <Setter Property="Width" Value="14" />
                                    <Setter Property="Height" Value="14" />
                                    <Setter Property="RenderOptions.BitmapScalingMode" Value="HighQuality" />
                                    <Setter Property="RenderOptions.EdgeMode" Value="Aliased" />
                                </Style>
                            </StackPanel.Resources>
                            <StackPanel.Style>
                                <Style TargetType="{x:Type StackPanel}">
                                    <Setter Property="Visibility" Value="Collapsed" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding SelectedProjectModel.SelectedGateway.ZwaveFrequency}" Value="{x:Static model:ZwaveFrequencyEnum.ANZBR}">
                                            <Setter Property="Visibility" Value="Visible" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </StackPanel.Style>
                            <Image
                                Margin="4,0,0,0"
                                Source="/FC.Domain;component/Assets/CountrysFlags/australia.png"
                                ToolTip="{x:Static p:Resources.Australia}">
                                <Image.Effect>
                                    <DropShadowEffect BlurRadius="4" ShadowDepth="0" />
                                </Image.Effect>
                            </Image>
                            <Image
                                Margin="-4,0,0,0"
                                Source="/FC.Domain;component/Assets/CountrysFlags/brazil.png"
                                ToolTip="{x:Static p:Resources.Brazil}">
                                <Image.Effect>
                                    <DropShadowEffect BlurRadius="4" ShadowDepth="0" />
                                </Image.Effect>
                            </Image>
                            <Image
                                Margin="-4,0,0,0"
                                Source="/FC.Domain;component/Assets/CountrysFlags/newZealand.png"
                                ToolTip="{x:Static p:Resources.New_Zealand}">
                                <Image.Effect>
                                    <DropShadowEffect BlurRadius="4" ShadowDepth="0" />
                                </Image.Effect>
                            </Image>
                        </StackPanel>
                    </StackPanel>
                    <TextBlock
                        Grid.Row="1"
                        Grid.Column="7"
                        Margin="10,0,0,0"
                        VerticalAlignment="Center"
                        FontSize="11"
                        Foreground="{StaticResource MaterialDesignDarkForeground}"
                        Opacity=".8"
                        Text="{x:Static p:Resources.HomeID}"
                        TextOptions.TextRenderingMode="ClearType"
                        TextTrimming="CharacterEllipsis">
                        <TextBlock.Style>
                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="Visibility" Value="Visible" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding SelectedProjectModel.SelectedGateway.ZwaveFrequency}" Value="{x:Static model:ZwaveFrequencyEnum.None}">
                                        <Setter Property="Visibility" Value="Collapsed" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>
                    <TextBlock
                        Grid.Row="1"
                        Grid.Column="8"
                        Margin="8,0,0,0"
                        VerticalAlignment="Center"
                        FontSize="11"
                        Foreground="{StaticResource MaterialDesignDarkForeground}"
                        Text="{Binding SelectedProjectModel.SelectedGateway.HomeId}"
                        TextTrimming="CharacterEllipsis">
                        <TextBlock.Style>
                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="Visibility" Value="Visible" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding SelectedProjectModel.SelectedGateway.ZwaveFrequency}" Value="{x:Static model:ZwaveFrequencyEnum.None}">
                                        <Setter Property="Visibility" Value="Collapsed" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>
                    <StackPanel
                        Grid.Row="0"
                        Grid.RowSpan="2"
                        Grid.Column="10"
                        HorizontalAlignment="Right"
                        VerticalAlignment="Center"
                        Orientation="Horizontal">
                        <Button
                            Width="96"
                            Margin="8,0"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Top"
                            materialDesign:ButtonProgressAssist.IsIndeterminate="True"
                            materialDesign:ButtonProgressAssist.IsIndicatorVisible="{Binding IsSendingToGateway, UpdateSourceTrigger=PropertyChanged}"
                            materialDesign:ShadowAssist.Darken="True"
                            materialDesign:ShadowAssist.ShadowDepth="Depth2"
                            Background="{StaticResource BigStoneBillson}"
                            BorderBrush="{StaticResource BigStoneBillson}"
                            Command="{Binding SyncGatewayCommand}"
                            Content="{x:Static p:Resources.Sync}"
                            FocusVisualStyle="{x:Null}"
                            FontSize="12"
                            ToolTip="{x:Static p:Resources.Sync_Gateway}">
                            <Button.Style>
                                <Style BasedOn="{StaticResource MaterialDesignRaisedAccentButton}" TargetType="{x:Type Button}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsSendingToGateway, UpdateSourceTrigger=PropertyChanged}" Value="True">
                                            <Setter Property="IsEnabled" Value="False" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding IsSendingToCloud, UpdateSourceTrigger=PropertyChanged}" Value="True">
                                            <Setter Property="IsEnabled" Value="False" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>
                        <Button
                            Width="96"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Top"
                            materialDesign:ButtonProgressAssist.IsIndeterminate="True"
                            materialDesign:ButtonProgressAssist.IsIndicatorVisible="{Binding IsSendingToGateway, UpdateSourceTrigger=PropertyChanged}"
                            materialDesign:ShadowAssist.Darken="True"
                            materialDesign:ShadowAssist.ShadowDepth="Depth2"
                            Background="{StaticResource BigStoneBillson}"
                            BorderBrush="{StaticResource BigStoneBillson}"
                            Command="{Binding RebootCommand}"
                            Content="{x:Static p:Resources.Reboot}"
                            FocusVisualStyle="{x:Null}"
                            FontSize="12"
                            ToolTip="{x:Static p:Resources.Reboot_Gateway}">
                            <Button.Style>
                                <Style BasedOn="{StaticResource MaterialDesignRaisedDarkButton}" TargetType="{x:Type Button}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsSendingToGateway, UpdateSourceTrigger=PropertyChanged}" Value="True">
                                            <Setter Property="IsEnabled" Value="False" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding IsSendingToCloud, UpdateSourceTrigger=PropertyChanged}" Value="True">
                                            <Setter Property="IsEnabled" Value="False" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>
                    </StackPanel>
                    <!--<components:GatewayConnectionTypeUserControl
                        Grid.Row="0"
                        Grid.RowSpan="2"
                        Grid.Column="12"
                        VerticalAlignment="Bottom" />-->
                </Grid>
            </Grid>
            <Rectangle
                Grid.Row="1"
                Grid.RowSpan="2"
                Fill="{Binding SelectedProjectModel.SelectedGateway.Background}" />
            <TabControl
                x:Name="TabControl"
                Grid.Row="2"
                MinWidth="960"
                Margin="0,-2,0,0"
                dd:DragDrop.DropHandler="{Binding}"
                dd:DragDrop.IsDragSource="True"
                dd:DragDrop.IsDropTarget="True"
                dd:DragDrop.UseDefaultDragAdorner="True"
                materialDesign:ThemeAssist.Theme="Dark"
                AutomationProperties.AutomationId="TabControl"
                Background="#BF303030"
                FocusVisualStyle="{x:Null}"
                ItemContainerStyle="{DynamicResource TabItemZwaveConfi}"
                SelectedIndex="{Binding SelectedProjectModel.SelectedGateway.SelectedIndexTabControl, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                <TabControl.Resources>
                    <Style TargetType="{x:Type TabPanel}">
                        <Setter Property="HorizontalAlignment" Value="Left" />
                    </Style>
                </TabControl.Resources>
                <TabControl.Style>
                    <Style BasedOn="{StaticResource TabControlCustom}" TargetType="{x:Type TabControl}">
                        <Setter Property="Padding" Value="0" />
                        <Setter Property="Margin" Value="0" />
                        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                        <Setter Property="IsEnabled" Value="True" />
                        <Setter Property="Opacity" Value="1" />
                        <Setter Property="IsEnabled" Value="False" />
                        <Style.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsSendingToGateway, UpdateSourceTrigger=PropertyChanged}" Value="False" />
                                    <Condition Binding="{Binding IsSendingToCloud, UpdateSourceTrigger=PropertyChanged}" Value="False" />
                                    <Condition Binding="{Binding IsTabEnable, UpdateSourceTrigger=PropertyChanged}" Value="True" />
                                </MultiDataTrigger.Conditions>
                                <Setter Property="IsEnabled" Value="True" />
                            </MultiDataTrigger>
                        </Style.Triggers>
                    </Style>
                </TabControl.Style>
                <!--  Network  -->
                <TabItem
                    x:Name="Network"
                    FocusVisualStyle="{x:Null}"
                    Header="{x:Static p:Resources.Network}"
                    Tag="{x:Static p:Resources.Network}">
                    <TabItem.Style>
                        <Style BasedOn="{StaticResource TabItemCustom}" TargetType="{x:Type TabItem}">
                            <Style.Triggers>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter Property="Content">
                                        <Setter.Value>
                                            <edit:NetworkGatewayUserControl />
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </TabItem.Style>
                </TabItem>
                <!--  IpCommand  -->
                <TabItem
                    x:Name="IpCommand"
                    FocusVisualStyle="{x:Null}"
                    Header="{x:Static p:Resources.Ip_Command}"
                    Tag="{x:Static p:Resources.Ip_Command}">
                    <TabItem.Style>
                        <Style BasedOn="{StaticResource TabItemCustom}" TargetType="{x:Type TabItem}">
                            <Style.Triggers>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter Property="Content">
                                        <Setter.Value>
                                            <edit:IPCommandGatewayUserControl />
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </TabItem.Style>
                </TabItem>
                <!--  IR  -->
                <TabItem
                    x:Name="IR"
                    Padding="0"
                    FocusVisualStyle="{x:Null}"
                    Header="{x:Static p:Resources.IR}"
                    Tag="{x:Static p:Resources.IR}">
                    <TabItem.Style>
                        <Style BasedOn="{StaticResource TabItemCustom}" TargetType="{x:Type TabItem}">
                            <Style.Triggers>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter Property="Content">
                                        <Setter.Value>
                                            <edit:IRLearnGatewayUserControl />
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </TabItem.Style>
                </TabItem>
                <!--  Radio433  -->
                <TabItem
                    x:Name="Radio433"
                    AutomationProperties.AutomationId="Radio433"
                    FocusVisualStyle="{x:Null}"
                    Header="{x:Static p:Resources.Radio_433MHz}"
                    Tag="{x:Static p:Resources.Radio_433MHz}">
                    <TabItem.Style>
                        <Style BasedOn="{StaticResource TabItemCustom}" TargetType="{x:Type TabItem}">
                            <Style.Triggers>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter Property="Content">
                                        <Setter.Value>
                                            <edit:Radio433GatewayUserControl />
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </TabItem.Style>
                </TabItem>
                <!--  RTS  -->
                <TabItem
                    x:Name="RTS"
                    FocusVisualStyle="{x:Null}"
                    Header="{x:Static p:Resources.RTS}"
                    Tag="{x:Static p:Resources.RTS}">
                    <TabItem.Style>
                        <Style BasedOn="{StaticResource TabItemCustom}" TargetType="{x:Type TabItem}">
                            <Style.Triggers>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter Property="Content">
                                        <Setter.Value>
                                            <edit:RTSGatewayUserControl />
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </TabItem.Style>
                </TabItem>
                <!--  RelayState  -->
                <TabItem
                    x:Name="RelayState"
                    FocusVisualStyle="{x:Null}"
                    Header="{x:Static p:Resources.Relay}"
                    Tag="{x:Static p:Resources.Relay}">
                    <TabItem.Style>
                        <Style BasedOn="{StaticResource TabItemCustom}" TargetType="{x:Type TabItem}">
                            <Style.Triggers>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter Property="Content">
                                        <Setter.Value>
                                            <edit:RelayTestGatewayUserControl />
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </TabItem.Style>
                </TabItem>
                <!--  VoiceAssistent  -->
                <TabItem
                    Name="VoiceAssistent"
                    FocusVisualStyle="{x:Null}"
                    Header="{x:Static p:Resources.Voice_Assistant}"
                    Style="{StaticResource TabItemCustom}"
                    Tag="{x:Static p:Resources.Voice_Assistant}">
                    <edit:VoiceAssistantGatewayUserControl />
                </TabItem>
                <!--  Serial  -->
                <TabItem
                    x:Name="Serial"
                    FocusVisualStyle="{x:Null}"
                    Header="{x:Static p:Resources.Serial}"
                    Tag="{x:Static p:Resources.Serial}">
                    <TabItem.Style>
                        <Style BasedOn="{StaticResource TabItemCustom}" TargetType="{x:Type TabItem}">
                            <Style.Triggers>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter Property="Content">
                                        <Setter.Value>
                                            <edit:SerialGatewayUserControl />
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </TabItem.Style>
                </TabItem>
                <!--  Zwave  -->
                <TabItem
                    x:Name="Zwave"
                    FocusVisualStyle="{x:Null}"
                    Header="{x:Static p:Resources.Primary_Z_Wave}"
                    Tag="{x:Static p:Resources.Primary_Z_Wave}">
                    <TabItem.Style>
                        <Style BasedOn="{StaticResource TabItemCustom}" TargetType="{x:Type TabItem}">
                            <Style.Triggers>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter Property="Content">
                                        <Setter.Value>
                                            <edit:ZwaveGatewayUserControl />
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </TabItem.Style>
                </TabItem>
                <!--  Zwave Quick Settings  -->
                <TabItem
                    x:Name="ZwaveQuickSettings"
                    FocusVisualStyle="{x:Null}"
                    Header="{x:Static p:Resources.Secondary_Z_Wave}"
                    Tag="{x:Static p:Resources.Secondary_Z_Wave}">
                    <TabItem.Style>
                        <Style BasedOn="{StaticResource TabItemCustom}" TargetType="{x:Type TabItem}">
                            <Style.Triggers>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter Property="Content">
                                        <Setter.Value>
                                            <zwave:SecondaryZwaveUserControl />
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </TabItem.Style>
                </TabItem>
                <!--  IfThen  -->
                <TabItem
                    x:Name="IfThen"
                    FocusVisualStyle="{x:Null}"
                    Header="{x:Static p:Resources.If_Then_Beta}"
                    Tag="{x:Static p:Resources.If_Then}">
                    <TabItem.Style>
                        <Style BasedOn="{StaticResource TabItemCustom}" TargetType="{x:Type TabItem}">
                            <Style.Triggers>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter Property="Content">
                                        <Setter.Value>
                                            <edit:DashboardIfThenUserControl />
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </TabItem.Style>
                </TabItem>
                <TabItem
                    x:Name="Schedule"
                    FocusVisualStyle="{x:Null}"
                    Header="{x:Static p:Resources.Scheduling_Beta}"
                    Tag="{x:Static p:Resources.Scheduling}">
                    <TabItem.Style>
                        <Style BasedOn="{StaticResource TabItemCustom}" TargetType="{x:Type TabItem}">
                            <Style.Triggers>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter Property="Content">
                                        <Setter.Value>
                                            <edit:DashboardScheduleUserControl />
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </TabItem.Style>
                </TabItem>
                <!--  Configuration  -->
                <TabItem
                    x:Name="Configuration"
                    FocusVisualStyle="{x:Null}"
                    Header="{x:Static p:Resources.Configuration}"
                    Tag="{x:Static p:Resources.Configuration}">
                    <TabItem.Style>
                        <Style BasedOn="{StaticResource TabItemCustom}" TargetType="{x:Type TabItem}">
                            <Style.Triggers>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter Property="Content">
                                        <Setter.Value>
                                            <edit:ConfigurationGatewayUserControl />
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </TabItem.Style>
                </TabItem>
                <!--  Users  -->
                <TabItem
                    x:Name="Users"
                    FocusVisualStyle="{x:Null}"
                    Header="{x:Static p:Resources.Users}"
                    Style="{StaticResource TabItemCustom}"
                    Tag="{x:Static p:Resources.Users}">
                    <edit:UserGetewayUserControl />
                </TabItem>
            </TabControl>

            <components:FooterUserControl Grid.Row="3" />
        </Grid>
    </materialDesign:DialogHost>
</Page>