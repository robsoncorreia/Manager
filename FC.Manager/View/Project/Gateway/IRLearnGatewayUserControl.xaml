<UserControl
    x:Class="FC.Manager.View.Project.Gateway.IRLearnGatewayUserControl"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:enum="clr-namespace:FC.Domain.Model.IR;assembly=FC.Domain"
    xmlns:p="clr-namespace:FC.Domain.Properties;assembly=FC.Domain"
    xmlns:validator="clr-namespace:FC.Domain.Validator;assembly=FC.Domain"
    xmlns:components="clr-namespace:FC.Manager.View.Components"
    xmlns:core="clr-namespace:System;assembly=mscorlib"
    x:Name="irLearnDetailDeviceUserControl"
    d:DesignHeight="450"
    d:DesignWidth="800"
    DataContext="{Binding IRLearnDetailDevice, Source={StaticResource Locator}}"
    mc:Ignorable="d">
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding LoadedCommand}" CommandParameter="{Binding ElementName=irLearnDetailDeviceUserControl}" />
        </i:EventTrigger>
        <i:EventTrigger EventName="Unloaded">
            <i:InvokeCommandAction Command="{Binding UnloadedCommand}" CommandParameter="{Binding ElementName=irLearnDetailDeviceUserControl}" />
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <UserControl.Resources>
        <ObjectDataProvider
            x:Key="enumType"
            MethodName="GetValues"
            ObjectType="{x:Type core:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type Type="enum:ChannelIR" />
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        <DataTemplate x:Key="irItemFromCloud">
            <Grid>
                <Border
                    Width="264"
                    HorizontalAlignment="Stretch"
                    Background="{StaticResource Dark}"
                    BorderBrush="Black"
                    CornerRadius="2"
                    Cursor="Hand"
                    ToolTip="{Binding Path=.}">
                    <Border.Effect>
                        <DropShadowEffect BlurRadius="4" ShadowDepth="0" />
                    </Border.Effect>
                </Border>
                <Grid Margin="8">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <TextBox
                        Grid.Row="0"
                        Margin="0,-3,0,0"
                        materialDesign:HintAssist.Hint="{x:Static p:Resources.Description}"
                        materialDesign:TextFieldAssist.UnderlineBrush="Transparent"
                        BorderBrush="Transparent"
                        BorderThickness="0"
                        Foreground="White"
                        IsReadOnly="True"
                        Style="{StaticResource MaterialDesignFloatingHintTextBox}"
                        Text="{Binding Description, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    <StackPanel Grid.Row="1" Orientation="Horizontal">
                        <TextBox
                            HorizontalAlignment="Left"
                            materialDesign:HintAssist.Hint="{x:Static p:Resources.Delay}"
                            materialDesign:TextFieldAssist.SuffixText="ms"
                            materialDesign:TextFieldAssist.UnderlineBrush="Transparent"
                            BorderBrush="Transparent"
                            BorderThickness="0"
                            FontSize="11"
                            Foreground="White"
                            IsReadOnly="True"
                            Style="{StaticResource MaterialDesignFloatingHintTextBox}"
                            Text="{Binding Delay, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        <TextBox
                            Margin="8,0,0,0"
                            HorizontalAlignment="Left"
                            materialDesign:HintAssist.Hint="{x:Static p:Resources.Repetition}"
                            materialDesign:TextFieldAssist.UnderlineBrush="Transparent"
                            BorderBrush="Transparent"
                            BorderThickness="0"
                            FontSize="11"
                            Foreground="White"
                            IsReadOnly="True"
                            Style="{StaticResource MaterialDesignFloatingHintTextBox}"
                            Text="{Binding Repetition, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        <TextBox
                            Margin="8,0,0,0"
                            HorizontalAlignment="Left"
                            materialDesign:HintAssist.Hint="{x:Static p:Resources.Memory}"
                            materialDesign:TextFieldAssist.SuffixText="id"
                            materialDesign:TextFieldAssist.UnderlineBrush="Transparent"
                            BorderBrush="Transparent"
                            BorderThickness="0"
                            FontSize="11"
                            Foreground="White"
                            IsReadOnly="True"
                            Style="{StaticResource MaterialDesignFloatingHintTextBox}"
                            Text="{Binding MemoryId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    </StackPanel>
                    <StackPanel
                        Grid.Row="3"
                        Grid.Column="0"
                        Grid.ColumnSpan="3"
                        Margin="8,8,0,0"
                        HorizontalAlignment="Right"
                        Orientation="Horizontal">
                        <Button
                            Width="82"
                            Margin="0,0,8,0"
                            Command="{Binding IRLearnDetailDevice.PlayCodeCloudCommand, Source={StaticResource Locator}}"
                            CommandParameter="{Binding Path=., UpdateSourceTrigger=PropertyChanged}"
                            FocusVisualStyle="{x:Null}">
                            <Button.Style>
                                <Style BasedOn="{StaticResource PlayButton}" TargetType="{x:Type Button}">
                                    <Setter Property="IsEnabled" Value="True" />
                                    <Setter Property="Content">
                                        <Setter.Value>
                                            <TextBlock Text="{x:Static p:Resources.Play}" />
                                        </Setter.Value>
                                    </Setter>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IRLearnDetailDevice.IsSendingToGateway, Source={StaticResource Locator}}" Value="True">
                                            <Setter Property="IsEnabled" Value="False" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding IsSending}" Value="True">
                                            <Setter Property="Content">
                                                <Setter.Value>
                                                    <ProgressBar IsIndeterminate="True" Style="{StaticResource MaterialDesignCircularProgressBar}" />
                                                </Setter.Value>
                                            </Setter>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>
                        <Button
                            Width="82"
                            Command="{Binding IRLearnDetailDevice.DeleteCloudAsyncCommand, Source={StaticResource Locator}}"
                            CommandParameter="{Binding Path=.}"
                            Content="{x:Static p:Resources._Delete}"
                            FocusVisualStyle="{x:Null}">
                            <Button.Style>
                                <Style BasedOn="{StaticResource DeleteButton}" TargetType="{x:Type Button}">
                                    <Setter Property="IsEnabled" Value="True" />

                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IRLearnDetailDevice.IsSendingToGateway, Source={StaticResource Locator}}" Value="True">
                                            <Setter Property="IsEnabled" Value="False" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>
                    </StackPanel>
                </Grid>
            </Grid>
        </DataTemplate>
        <DataTemplate x:Key="irItemFromGateway">
            <Grid>
                <Border
                    Width="264"
                    HorizontalAlignment="Stretch"
                    Background="{StaticResource Dark}"
                    BorderBrush="Black"
                    CornerRadius="2"
                    Cursor="Hand"
                    ToolTip="{Binding Path=.}">
                    <Border.Effect>
                        <DropShadowEffect BlurRadius="4" ShadowDepth="0" />
                    </Border.Effect>
                </Border>
                <Grid Margin="8">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <TextBox
                        Grid.Row="0"
                        Margin="0,-3,0,0"
                        materialDesign:HintAssist.Hint="{x:Static p:Resources.Description}"
                        materialDesign:TextFieldAssist.UnderlineBrush="Transparent"
                        BorderBrush="Transparent"
                        BorderThickness="0"
                        Foreground="White"
                        IsReadOnly="True"
                        Style="{StaticResource MaterialDesignFloatingHintTextBox}"
                        Text="{Binding Description, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    <StackPanel Grid.Row="1" Orientation="Horizontal">
                        <TextBox
                            HorizontalAlignment="Left"
                            materialDesign:HintAssist.Hint="{x:Static p:Resources.Delay}"
                            materialDesign:TextFieldAssist.SuffixText="ms"
                            materialDesign:TextFieldAssist.UnderlineBrush="Transparent"
                            BorderBrush="Transparent"
                            BorderThickness="0"
                            FontSize="11"
                            Foreground="White"
                            IsReadOnly="True"
                            Style="{StaticResource MaterialDesignFloatingHintTextBox}"
                            Text="{Binding Delay, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        <TextBox
                            Margin="8,0,0,0"
                            HorizontalAlignment="Left"
                            materialDesign:HintAssist.Hint="{x:Static p:Resources.Repetition}"
                            materialDesign:TextFieldAssist.UnderlineBrush="Transparent"
                            BorderBrush="Transparent"
                            BorderThickness="0"
                            FontSize="11"
                            Foreground="White"
                            IsReadOnly="True"
                            Style="{StaticResource MaterialDesignFloatingHintTextBox}"
                            Text="{Binding Repetition, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        <TextBox
                            Margin="8,0,0,0"
                            HorizontalAlignment="Left"
                            materialDesign:HintAssist.Hint="{x:Static p:Resources.Memory}"
                            materialDesign:TextFieldAssist.SuffixText="id"
                            materialDesign:TextFieldAssist.UnderlineBrush="Transparent"
                            BorderBrush="Transparent"
                            BorderThickness="0"
                            FontSize="11"
                            Foreground="White"
                            IsReadOnly="True"
                            Style="{StaticResource MaterialDesignFloatingHintTextBox}"
                            Text="{Binding MemoryId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    </StackPanel>
                    <StackPanel
                        Grid.Row="3"
                        Grid.Column="0"
                        Grid.ColumnSpan="3"
                        Margin="8,8,0,0"
                        HorizontalAlignment="Right"
                        Orientation="Horizontal">
                        <Button
                            Width="82"
                            Margin="0,0,8,0"
                            Command="{Binding IRLearnDetailDevice.PlayMemoryCommand, Source={StaticResource Locator}}"
                            CommandParameter="{Binding Path=., UpdateSourceTrigger=PropertyChanged}"
                            FocusVisualStyle="{x:Null}">
                            <Button.Style>
                                <Style BasedOn="{StaticResource PlayButton}" TargetType="{x:Type Button}">
                                    <Setter Property="IsEnabled" Value="True" />
                                    <Setter Property="Content">
                                        <Setter.Value>
                                            <TextBlock Text="{x:Static p:Resources.Play}" />
                                        </Setter.Value>
                                    </Setter>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IRLearnDetailDevice.IsSendingToGateway, Source={StaticResource Locator}}" Value="True">
                                            <Setter Property="IsEnabled" Value="False" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding IsSending}" Value="True">
                                            <Setter Property="Content">
                                                <Setter.Value>
                                                    <ProgressBar IsIndeterminate="True" Style="{StaticResource MaterialDesignCircularProgressBar}" />
                                                </Setter.Value>
                                            </Setter>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>
                        <Button
                            Width="82"
                            Command="{Binding IRLearnDetailDevice.DeleteFromGatewayAwaitCommand, Source={StaticResource Locator}}"
                            CommandParameter="{Binding Path=.}"
                            Content="{x:Static p:Resources._Delete}"
                            FocusVisualStyle="{x:Null}">
                            <Button.Style>
                                <Style BasedOn="{StaticResource DeleteButton}" TargetType="{x:Type Button}">
                                    <Setter Property="IsEnabled" Value="True" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IRLearnDetailDevice.IsSendingToGateway, Source={StaticResource Locator}}" Value="True">
                                            <Setter Property="IsEnabled" Value="False" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>
                    </StackPanel>
                </Grid>
            </Grid>
        </DataTemplate>
        <Style TargetType="{x:Type TabItem}">
            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabItem}">
                        <Border
                            Name="Border"
                            Margin="0,0,0,0"
                            Background="Transparent"
                            BorderBrush="{StaticResource PrimaryHueDarkBrush}"
                            CornerRadius="5 5 0 0">
                            <ContentPresenter
                                x:Name="ContentSite"
                                Margin="12,12,12,12"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch"
                                ContentSource="Header"
                                RecognizesAccessKey="True">
                                <ContentPresenter.LayoutTransform>
                                    <RotateTransform Angle="0" />
                                </ContentPresenter.LayoutTransform>
                            </ContentPresenter>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="BorderBrush" Value="{StaticResource PrimaryHueDarkBrush}" />
                                <Setter Property="Panel.ZIndex" Value="100" />
                                <Setter TargetName="Border" Property="Background" Value="{StaticResource ResourceKey=TundoraBillson}" />
                                <Setter Property="Foreground" Value="White" />
                                <Setter Property="BorderThickness" Value="2,2,2,0" />
                            </Trigger>
                            <Trigger Property="IsSelected" Value="False">
                                <Setter TargetName="Border" Property="Background" Value="{StaticResource ResourceKey=Dark}" />
                                <Setter Property="BorderBrush" Value="White" />
                                <Setter Property="Foreground" Value="White" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>
    <UserControl.InputBindings>
        <KeyBinding Command="{Binding IRLearningCommand}" Gesture="Ctrl+L" />
    </UserControl.InputBindings>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <materialDesign:DialogHost
            Grid.Row="0"
            Margin="0"
            Padding="0"
            DialogContent="{Binding DialogContent, UpdateSourceTrigger=PropertyChanged}"
            FocusVisualStyle="{x:Null}"
            IsOpen="{Binding IsOpenDialogHost, UpdateSourceTrigger=PropertyChanged}">
            <Grid FocusVisualStyle="{x:Null}">
                <Grid.Style>
                    <Style TargetType="{x:Type Grid}">
                        <Setter Property="IsEnabled" Value="True" />
                        <Setter Property="Opacity" Value="1" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsSendingToGateway, UpdateSourceTrigger=PropertyChanged}" Value="True">
                                <Setter Property="IsEnabled" Value="False" />
                                <Setter Property="Opacity" Value=".2" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding IsSendingToCloud, UpdateSourceTrigger=PropertyChanged}" Value="True">
                                <Setter Property="IsEnabled" Value="False" />
                                <Setter Property="Opacity" Value=".2" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Grid.Style>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <ScrollViewer
                    Grid.Row="1"
                    Padding="0"
                    VerticalContentAlignment="Stretch"
                    FocusVisualStyle="{x:Null}"
                    VerticalScrollBarVisibility="Auto">
                    <Grid>
                        <Grid.Resources>
                            <Style TargetType="{x:Type Border}">
                                <Setter Property="CornerRadius" Value="4" />
                            </Style>
                        </Grid.Resources>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" MinWidth="564" />
                            <ColumnDefinition Width="*" MinWidth="310" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" MinHeight="480" />
                            <RowDefinition Height="8" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <Border
                            Grid.Column="0"
                            Margin="8,8,4,0"
                            Padding="16"
                            VerticalAlignment="Stretch"
                            Background="{StaticResource TundoraBillson}">
                            <Border.Effect>
                                <DropShadowEffect BlurRadius="4" ShadowDepth="0" />
                            </Border.Effect>
                        </Border>
                        <Border
                            Grid.Column="0"
                            Margin="8,8,4,0"
                            Padding="16"
                            VerticalAlignment="Stretch"
                            Background="{StaticResource TundoraBillson}">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <StackPanel
                                    Grid.Column="0"
                                    HorizontalAlignment="Left"
                                    Orientation="Horizontal">
                                    <ComboBox
                                        x:Name="ComboBoxChannel"
                                        Width="84"
                                        Margin="0,6,0,0"
                                        HorizontalAlignment="Left"
                                        VerticalAlignment="Top"
                                        materialDesign:HintAssist.Hint="{x:Static p:Resources.Channel}"
                                        materialDesign:ThemeAssist.Theme="Dark"
                                        materialDesign:ValidationAssist.Background="{StaticResource Dark}"
                                        materialDesign:ValidationAssist.OnlyShowOnFocus="True"
                                        FocusVisualStyle="{x:Null}"
                                        ItemsSource="{Binding Source={StaticResource enumType}}"
                                        SelectedIndex="{Binding IRModel.SelectedChannelIndex, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                                        <ComboBox.ItemTemplate>
                                            <DataTemplate>
                                                <TextBlock Text="{Binding Converter={StaticResource enumDescriptionConverter}}" />
                                            </DataTemplate>
                                        </ComboBox.ItemTemplate>
                                        <ComboBox.Style>
                                            <Style BasedOn="{StaticResource MaterialDesignFloatingHintComboBox}" TargetType="ComboBox">
                                                <Setter Property="IsEnabled" Value="True" />
                                                <Style.Triggers>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding SelectedProjectModel.SelectedGateway.LocalIP, Mode=TwoWay}" Value="{x:Null}" />
                                                        </MultiDataTrigger.Conditions>
                                                        <Setter Property="IsEnabled" Value="False" />
                                                    </MultiDataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </ComboBox.Style>
                                    </ComboBox>
                                    <TextBox
                                        x:Name="TxtDelay"
                                        Grid.Column="1"
                                        Width="120"
                                        Margin="8,-1,0,0"
                                        HorizontalAlignment="Left"
                                        VerticalAlignment="Top"
                                        materialDesign:HintAssist.Hint="{x:Static p:Resources.Delay_ms}"
                                        materialDesign:TextFieldAssist.HasClearButton="True"
                                        materialDesign:ValidationAssist.Background="{StaticResource Dark}"
                                        materialDesign:ValidationAssist.OnlyShowOnFocus="True"
                                        materialDesign:ValidationAssist.Suppress="True"
                                        Background="Transparent"
                                        Foreground="White"
                                        MaxLength="3">
                                        <TextBox.Style>
                                            <Style BasedOn="{StaticResource MaterialDesignFilledTextBox}" TargetType="{x:Type TextBox}">
                                                <Style.Triggers>
                                                    <Trigger Property="Validation.HasError" Value="true">
                                                        <Setter Property="ToolTip" Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors)/ErrorContent}" />
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBox.Style>
                                        <TextBox.Text>
                                            <Binding
                                                Mode="TwoWay"
                                                Path=" IRModel.Delay"
                                                UpdateSourceTrigger="PropertyChanged"
                                                ValidatesOnDataErrors="True">
                                                <Binding.ValidationRules>
                                                    <validator:NumberRangeValidationRule Max="255" Min="0" />
                                                </Binding.ValidationRules>
                                            </Binding>
                                        </TextBox.Text>
                                    </TextBox>
                                    <TextBox
                                        x:Name="TxtRepetition"
                                        Grid.Column="3"
                                        Width="120"
                                        Margin="8,-1,0,0"
                                        HorizontalAlignment="Left"
                                        VerticalAlignment="Top"
                                        materialDesign:HintAssist.Hint="{x:Static p:Resources.Repetition}"
                                        materialDesign:TextFieldAssist.HasClearButton="True"
                                        materialDesign:ValidationAssist.Background="{StaticResource Dark}"
                                        materialDesign:ValidationAssist.OnlyShowOnFocus="True"
                                        materialDesign:ValidationAssist.Suppress="True"
                                        Background="Transparent"
                                        Foreground="White"
                                        MaxLength="3">
                                        <TextBox.Style>
                                            <Style BasedOn="{StaticResource MaterialDesignFilledTextBox}" TargetType="{x:Type TextBox}">
                                                <Style.Triggers>
                                                    <Trigger Property="Validation.HasError" Value="true">
                                                        <Setter Property="ToolTip" Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors)/ErrorContent}" />
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBox.Style>
                                        <TextBox.Text>
                                            <Binding
                                                Mode="TwoWay"
                                                Path=" IRModel.Repetition"
                                                UpdateSourceTrigger="PropertyChanged"
                                                ValidatesOnDataErrors="True">
                                                <Binding.ValidationRules>
                                                    <validator:NumberRangeValidationRule Max="255" Min="1" />
                                                </Binding.ValidationRules>
                                            </Binding>
                                        </TextBox.Text>
                                    </TextBox>
                                </StackPanel>
                                <Grid
                                    Grid.Row="0"
                                    Grid.Column="1"
                                    HorizontalAlignment="Right">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>
                                    <Button
                                        Grid.Row="0"
                                        Grid.Column="0"
                                        Margin="0,0,8,0"
                                        Command="{Binding NewCommand}"
                                        Content="{x:Static p:Resources._New}"
                                        Style="{StaticResource NewButton}" />
                                    <Button
                                        Grid.Column="1"
                                        materialDesign:ButtonProgressAssist.IsIndeterminate="{Binding IsSendingToGateway}"
                                        materialDesign:ButtonProgressAssist.IsIndicatorVisible="{Binding IsSendingToGateway}"
                                        materialDesign:ButtonProgressAssist.Value="-1"
                                        Command="{Binding IRLearningCommand}"
                                        Content="{x:Static p:Resources._Learn}"
                                        FocusVisualStyle="{x:Null}">
                                        <Button.ToolTip>
                                            <ToolTip Content="{Binding Source={x:Static p:Resources.Learn_Code_IR}}" ContentStringFormat="{}{0} | Crtl+L" />
                                        </Button.ToolTip>
                                        <Button.Style>
                                            <Style BasedOn="{StaticResource LearnButton}" TargetType="Button">
                                                <Setter Property="IsEnabled" Value="True" />
                                                <Style.Triggers>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding SelectedProjectModel.SelectedGateway.LocalIP, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Value="{x:Null}" />
                                                        </MultiDataTrigger.Conditions>
                                                        <Setter Property="IsEnabled" Value="False" />
                                                    </MultiDataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Button.Style>
                                    </Button>
                                    <Button
                                        Grid.Row="1"
                                        Grid.Column="0"
                                        Margin="0,8,8,0"
                                        Command="{Binding IRLearnDetailDevice.PlayCodeCommand, Source={StaticResource Locator}}"
                                        CommandParameter="{Binding ElementName=LbIRsGateway, Path=SelectedItem}"
                                        Content="{x:Static p:Resources._Play}"
                                        FocusVisualStyle="{x:Null}">
                                        <Button.Style>
                                            <Style BasedOn="{StaticResource PlayButton}" TargetType="Button">
                                                <Setter Property="IsEnabled" Value="False" />
                                                <Style.Triggers>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding Path=(Validation.HasError), UpdateSourceTrigger=PropertyChanged, ElementName=TextBoxCommand}" Value="False" />
                                                            <Condition Binding="{Binding Path=(Validation.HasError), UpdateSourceTrigger=PropertyChanged, ElementName=TxtDelay}" Value="False" />
                                                            <Condition Binding="{Binding Path=(Validation.HasError), UpdateSourceTrigger=PropertyChanged, ElementName=TxtRepetition}" Value="False" />
                                                        </MultiDataTrigger.Conditions>
                                                        <Setter Property="IsEnabled" Value="True" />
                                                    </MultiDataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Button.Style>
                                    </Button>
                                    <Button
                                        Grid.Row="1"
                                        Grid.Column="1"
                                        Margin="0,8,0,0"
                                        Command="{Binding SaveCommand}"
                                        Content="{x:Static p:Resources._Save}"
                                        FocusVisualStyle="{x:Null}">
                                        <Button.Style>
                                            <Style BasedOn="{StaticResource SaveButton}" TargetType="Button">
                                                <Setter Property="IsEnabled" Value="False" />
                                                <Style.Triggers>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding Path=(Validation.HasError), UpdateSourceTrigger=PropertyChanged, ElementName=TextBoxDescription}" Value="False" />
                                                            <Condition Binding="{Binding Path=(Validation.HasError), UpdateSourceTrigger=PropertyChanged, ElementName=TextBoxCommand}" Value="False" />
                                                            <Condition Binding="{Binding Path=(Validation.HasError), UpdateSourceTrigger=PropertyChanged, ElementName=ComboBoxChannel}" Value="False" />
                                                            <Condition Binding="{Binding Path=(Validation.HasError), UpdateSourceTrigger=PropertyChanged, ElementName=TxtDelay}" Value="False" />
                                                            <Condition Binding="{Binding Path=(Validation.HasError), UpdateSourceTrigger=PropertyChanged, ElementName=TxtRepetition}" Value="False" />
                                                        </MultiDataTrigger.Conditions>
                                                        <Setter Property="IsEnabled" Value="True" />
                                                    </MultiDataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Button.Style>
                                    </Button>
                                </Grid>
                                <TextBox
                                    x:Name="TextBoxDescription"
                                    Grid.Row="3"
                                    Width="320"
                                    Margin="0,0,0,16"
                                    HorizontalAlignment="Left"
                                    materialDesign:HintAssist.Hint="{x:Static p:Resources.Description}"
                                    materialDesign:TextFieldAssist.HasClearButton="True"
                                    materialDesign:ValidationAssist.Background="{StaticResource Dark}"
                                    materialDesign:ValidationAssist.OnlyShowOnFocus="True"
                                    MaxLength="30"
                                    MaxLines="1"
                                    TextWrapping="Wrap">
                                    <TextBox.Style>
                                        <Style BasedOn="{StaticResource MaterialDesignFilledTextBox}" TargetType="TextBox">
                                            <Setter Property="IsEnabled" Value="False" />
                                            <Style.Triggers>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding Path=(Validation.HasError), UpdateSourceTrigger=PropertyChanged, ElementName=TextBoxCommand}" Value="False" />
                                                    </MultiDataTrigger.Conditions>
                                                    <Setter Property="IsEnabled" Value="True" />
                                                </MultiDataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBox.Style>
                                    <TextBox.Text>
                                        <Binding
                                            Mode="TwoWay"
                                            Path="IRModel.Description"
                                            UpdateSourceTrigger="PropertyChanged"
                                            ValidatesOnDataErrors="True">
                                            <Binding.ValidationRules>
                                                <validator:NotEmptyValidationRule TextError="{x:Static p:Resources.Field_Is_Required}" ValidatesOnTargetUpdated="True" />
                                            </Binding.ValidationRules>
                                        </Binding>
                                    </TextBox.Text>
                                </TextBox>
                                <Border
                                    Grid.Row="5"
                                    Margin="0,8,0,0"
                                    Padding="8,4"
                                    HorizontalAlignment="Left"
                                    CornerRadius="2,2,0,0">
                                    <Border.Style>
                                        <Style TargetType="{x:Type Border}">
                                            <Setter Property="Background" Value="{StaticResource DenimBillson}" />
                                            <Setter Property="BorderBrush" Value="{StaticResource DenimBillson}" />
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding ElementName=TextBoxCommand, Path=(Validation.HasError)}" Value="True">
                                                    <Setter Property="Background" Value="Red" />
                                                    <Setter Property="BorderBrush" Value="Red" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Border.Style>
                                    <TextBlock Text="{x:Static p:Resources.Command}" />
                                </Border>
                                <Border
                                    Grid.Row="6"
                                    Grid.Column="0"
                                    Grid.ColumnSpan="2"
                                    VerticalAlignment="Stretch"
                                    CornerRadius="0,2,2,2">
                                    <Border.Style>
                                        <Style TargetType="{x:Type Border}">
                                            <Setter Property="Background" Value="{StaticResource DenimBillson}" />
                                            <Setter Property="BorderBrush" Value="{StaticResource DenimBillson}" />
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding ElementName=TextBoxCommand, Path=(Validation.HasError)}" Value="True">
                                                    <Setter Property="Background" Value="Red" />
                                                    <Setter Property="BorderBrush" Value="Red" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Border.Style>
                                    <Grid>
                                        <TextBox
                                            x:Name="TextBoxCommand"
                                            Margin="2"
                                            Padding="8"
                                            HorizontalAlignment="Stretch"
                                            VerticalAlignment="Stretch"
                                            Background="Transparent"
                                            BorderBrush="Transparent"
                                            BorderThickness="0"
                                            FontSize="12"
                                            Foreground="White"
                                            TextWrapping="Wrap">
                                            <TextBox.Text>
                                                <Binding
                                                    Mode="TwoWay"
                                                    Path="IRModel.Data"
                                                    UpdateSourceTrigger="PropertyChanged"
                                                    ValidatesOnDataErrors="True">
                                                    <Binding.ValidationRules>
                                                        <validator:NotEmptyValidationRule TextError="{x:Static p:Resources.Field_Is_Required}" ValidatesOnTargetUpdated="True" />
                                                    </Binding.ValidationRules>
                                                </Binding>
                                            </TextBox.Text>
                                        </TextBox>

                                        <Border
                                            Margin="0,-10,0,0"
                                            Padding="4,2"
                                            HorizontalAlignment="Right"
                                            VerticalAlignment="Top"
                                            Background="{StaticResource BigStoneBillson}"
                                            CornerRadius="4">
                                            <Border.Style>
                                                <Style TargetType="{x:Type Border}">
                                                    <Setter Property="Visibility" Value="Visible" />
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding IRModel.Data.Length}" Value="{x:Null}">
                                                            <Setter Property="Visibility" Value="Collapsed" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Border.Style>
                                            <StackPanel Orientation="Horizontal">
                                                <TextBlock
                                                    Grid.Row="1"
                                                    FontSize="10"
                                                    Text="{Binding IRModel.Data.Length}" />
                                                <TextBlock
                                                    Grid.Row="1"
                                                    FontSize="10"
                                                    Text=" / " />
                                                <TextBlock
                                                    Grid.Row="1"
                                                    FontSize="10"
                                                    Text="{Binding SelectedProjectModel.SelectedGateway.IRSizeLimit}" />
                                            </StackPanel>
                                        </Border>
                                    </Grid>
                                </Border>
                                <StackPanel
                                    Grid.Row="6"
                                    Grid.Column="0"
                                    Grid.ColumnSpan="2"
                                    Margin="0,0,0,4"
                                    HorizontalAlignment="Right"
                                    VerticalAlignment="Bottom"
                                    FocusVisualStyle="{x:Null}"
                                    Orientation="Horizontal">
                                    <Button
                                        Height="26"
                                        Margin="0,0,2,0"
                                        HorizontalAlignment="Right"
                                        VerticalAlignment="Bottom"
                                        VerticalContentAlignment="Center"
                                        Background="{StaticResource ChathamsBlueBillson}"
                                        BorderBrush="Transparent"
                                        Command="{Binding ClearCommand}"
                                        CommandParameter="{Binding ElementName=TextBoxCommand, Path=Text}">
                                        <TextBlock
                                            Margin="0,0,0,2"
                                            VerticalAlignment="Center"
                                            FontSize="10"
                                            Text="{x:Static p:Resources.Clear}" />
                                    </Button>
                                    <Button
                                        Height="26"
                                        HorizontalAlignment="Right"
                                        VerticalAlignment="Bottom"
                                        VerticalContentAlignment="Center"
                                        Background="{StaticResource BigStoneBillson}"
                                        BorderBrush="Transparent"
                                        Command="{Binding CopyCommand}"
                                        CommandParameter="{Binding ElementName=TextBoxCommand, Path=Text}"
                                        FocusVisualStyle="{x:Null}">
                                        <TextBlock
                                            Margin="0,0,0,2"
                                            VerticalAlignment="Center"
                                            FontSize="10"
                                            Text="{x:Static p:Resources.Copy}" />
                                    </Button>
                                </StackPanel>
                                <Border
                                    Grid.Row="7"
                                    Margin="0,16,0,0"
                                    Padding="8,4"
                                    HorizontalAlignment="Left"
                                    Background="{StaticResource DenimBillson}"
                                    CornerRadius="2,2,0,0">
                                    <TextBlock Text="{x:Static p:Resources.Last_command_sent}" />
                                </Border>
                                <Border
                                    Grid.Row="8"
                                    Grid.Column="0"
                                    Grid.ColumnSpan="2"
                                    Margin="0,0,0,2"
                                    VerticalAlignment="Stretch"
                                    Background="{StaticResource DenimBillson}"
                                    BorderBrush="Transparent"
                                    CornerRadius="0,2,2,2">
                                    <TextBox
                                        x:Name="TbLastCommandSent"
                                        Margin="2"
                                        Padding="8"
                                        HorizontalAlignment="Stretch"
                                        VerticalAlignment="Stretch"
                                        Background="{StaticResource DenimBillson}"
                                        BorderBrush="Transparent"
                                        BorderThickness="0"
                                        FontSize="12"
                                        Foreground="White"
                                        IsReadOnly="True"
                                        Text="{Binding LastCommandSend, Mode=TwoWay}"
                                        TextWrapping="Wrap" />
                                </Border>
                                <Button
                                    Grid.Row="8"
                                    Grid.Column="0"
                                    Grid.ColumnSpan="2"
                                    Height="26"
                                    Margin="0,0,0,4"
                                    HorizontalAlignment="Right"
                                    VerticalAlignment="Bottom"
                                    VerticalContentAlignment="Center"
                                    Background="{StaticResource BigStoneBillson}"
                                    BorderBrush="Transparent"
                                    Command="{Binding CopyCommand}"
                                    CommandParameter="{Binding ElementName=TbLastCommandSent, Path=Text}">
                                    <TextBlock
                                        Margin="0,0,0,0"
                                        VerticalAlignment="Center"
                                        FontSize="10"
                                        Text="{x:Static p:Resources.Copy}" />
                                </Button>
                            </Grid>
                        </Border>
                        <Border
                            Grid.Column="1"
                            Margin="4,8,8,0"
                            VerticalAlignment="Stretch"
                            Background="Black">
                            <Border.Effect>
                                <DropShadowEffect BlurRadius="4" ShadowDepth="0" />
                            </Border.Effect>
                        </Border>
                        <Border
                            Grid.Column="1"
                            Margin="4,8,8,0"
                            VerticalAlignment="Stretch"
                            Background="Black">
                            <TabControl
                                Margin="0"
                                Padding="0"
                                Background="{StaticResource TundoraBillson}"
                                BorderBrush="{StaticResource TundoraBillson}">
                                <TabControl.Resources>
                                    <Style BasedOn="{StaticResource TabItemCustom}" TargetType="{x:Type TabItem}">
                                        <Setter Property="Margin" Value="0,0,0,0" />
                                    </Style>
                                </TabControl.Resources>
                                <TabControl.Style>
                                    <Style TargetType="TabControl">
                                        <Setter Property="IsEnabled" Value="True" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsSendingToGateway}" Value="Trure">
                                                <Setter Property="IsEnabled" Value="False" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TabControl.Style>
                                <TabItem Header="{x:Static p:Resources.Gateway}">
                                    <Border
                                        HorizontalAlignment="Stretch"
                                        VerticalAlignment="Stretch"
                                        Background="{StaticResource TundoraBillson}">
                                        <Grid>
                                            <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="Auto" />
                                                    <RowDefinition Height="*" />
                                                    <RowDefinition Height="Auto" />
                                                </Grid.RowDefinitions>
                                                <ListBox
                                                    x:Name="LbIRsGateway"
                                                    Grid.Row="1"
                                                    Margin="0,0,0,0"
                                                    HorizontalAlignment="Stretch"
                                                    VerticalAlignment="Stretch"
                                                    FocusVisualStyle="{x:Null}"
                                                    ItemTemplate="{StaticResource irItemFromGateway}"
                                                    ItemsSource="{Binding SelectedProjectModel.SelectedGateway.IRsGateway}"
                                                    ScrollViewer.CanContentScroll="True"
                                                    SelectedIndex="{Binding SelectedProjectModel.SelectedGateway.SelectedIndexIR}"
                                                    SelectionMode="Single">
                                                    <i:Interaction.Triggers>
                                                        <i:EventTrigger EventName="SelectionChanged">
                                                            <i:InvokeCommandAction Command="{Binding IRLearnDetailDevice.SelectedIRCommand, Source={StaticResource Locator}}" CommandParameter="{Binding ElementName=LbIRsGateway, Path=SelectedItem, UpdateSourceTrigger=PropertyChanged}" />
                                                        </i:EventTrigger>
                                                    </i:Interaction.Triggers>
                                                    <ListBox.ItemContainerStyle>
                                                        <Style TargetType="ListBoxItem">
                                                            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                                                            <Setter Property="Cursor" Value="Hand" />
                                                            <Setter Property="HorizontalAlignment" Value="Left" />
                                                            <Setter Property="HorizontalContentAlignment" Value="Left" />
                                                            <Setter Property="VerticalContentAlignment" Value="Top" />
                                                            <Setter Property="VerticalAlignment" Value="Top" />
                                                            <Setter Property="Template">
                                                                <Setter.Value>
                                                                    <ControlTemplate TargetType="ListBoxItem">
                                                                        <Border
                                                                            Name="Border"
                                                                            Margin="2"
                                                                            Padding="4"
                                                                            CornerRadius="2"
                                                                            SnapsToDevicePixels="true">
                                                                            <ContentPresenter />
                                                                        </Border>
                                                                        <ControlTemplate.Triggers>
                                                                            <Trigger Property="IsSelected" Value="true">
                                                                                <Setter TargetName="Border" Property="Background" Value="{StaticResource PrimaryHueDarkBrush}" />
                                                                            </Trigger>
                                                                        </ControlTemplate.Triggers>
                                                                    </ControlTemplate>
                                                                </Setter.Value>
                                                            </Setter>
                                                            <Setter Property="Opacity" Value="0" />
                                                            <Style.Triggers>
                                                                <Trigger Property="Visibility" Value="Visible">
                                                                    <Trigger.EnterActions>
                                                                        <BeginStoryboard>
                                                                            <Storyboard>
                                                                                <DoubleAnimation
                                                                                    Storyboard.TargetProperty="Opacity"
                                                                                    From="0.0"
                                                                                    To="1.0"
                                                                                    Duration="0:0:1" />
                                                                            </Storyboard>
                                                                        </BeginStoryboard>
                                                                    </Trigger.EnterActions>
                                                                </Trigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </ListBox.ItemContainerStyle>
                                                    <ListBox.ItemsPanel>
                                                        <ItemsPanelTemplate>
                                                            <WrapPanel />
                                                        </ItemsPanelTemplate>
                                                    </ListBox.ItemsPanel>
                                                    <ListBox.Style>
                                                        <Style BasedOn="{StaticResource MaterialDesignCardsListBox}" TargetType="{x:Type ListBox}">
                                                            <Setter Property="IsEnabled" Value="True" />
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding IsSendingToGateway}" Value="True">
                                                                    <Setter Property="IsEnabled" Value="False" />
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </ListBox.Style>
                                                </ListBox>
                                            </Grid>
                                        </Grid>
                                    </Border>
                                </TabItem>
                                <TabItem Header="Cloud">
                                    <Border Background="{StaticResource TundoraBillson}">
                                        <Grid>
                                            <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="Auto" />
                                                    <RowDefinition Height="*" />
                                                    <RowDefinition Height="Auto" />
                                                </Grid.RowDefinitions>
                                                <ListBox
                                                    x:Name="LbCloud"
                                                    Grid.Row="1"
                                                    HorizontalAlignment="Stretch"
                                                    VerticalAlignment="Stretch"
                                                    ItemContainerStyle="{StaticResource selectedItem}"
                                                    ItemTemplate="{StaticResource irItemFromCloud}"
                                                    ItemsSource="{Binding SelectedProjectModel.SelectedGateway.IRsCloud}"
                                                    ScrollViewer.CanContentScroll="True"
                                                    SelectedIndex="{Binding SelectedProjectModel.SelectedGateway.SelectedIndexIRCloud}">
                                                    <i:Interaction.Triggers>
                                                        <i:EventTrigger EventName="SelectionChanged">
                                                            <i:InvokeCommandAction Command="{Binding IRLearnDetailDevice.SelectedIRCommand, Source={StaticResource Locator}}" CommandParameter="{Binding ElementName=LbCloud, Path=SelectedItem, UpdateSourceTrigger=PropertyChanged}" />
                                                        </i:EventTrigger>
                                                    </i:Interaction.Triggers>
                                                    <ListBox.ItemsPanel>
                                                        <ItemsPanelTemplate>
                                                            <WrapPanel />
                                                        </ItemsPanelTemplate>
                                                    </ListBox.ItemsPanel>
                                                </ListBox>
                                            </Grid>
                                        </Grid>
                                    </Border>
                                </TabItem>
                            </TabControl>
                        </Border>
                        <components:SnackbarUserControl
                            Grid.Column="0"
                            Grid.ColumnSpan="2"
                            Margin="0,0,0,-8"
                            VerticalAlignment="Bottom" />
                    </Grid>
                </ScrollViewer>
                <Border
                    Grid.Row="0"
                    Grid.ColumnSpan="3"
                    Margin="0"
                    Style="{DynamicResource BorderMenu}" />
                <Menu
                    Grid.Row="0"
                    Grid.ColumnSpan="3"
                    Margin="0"
                    VerticalAlignment="Stretch"
                    materialDesign:ThemeAssist.Theme="Dark"
                    Background="{StaticResource CodGrayBillson}"
                    Cursor="Hand"
                    IsMainMenu="True"
                    Style="{StaticResource MaterialDesignMenuBillson}">
                    <MenuItem Header="{x:Static p:Resources.Excel}">
                        <MenuItem.Style>
                            <Style BasedOn="{StaticResource MaterialDesignMenuItem}" TargetType="{x:Type MenuItem}">
                                <Setter Property="IsEnabled" Value="True" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding SelectedProjectModel.SelectedGateway.IRsGateway.Count}" Value="0">
                                        <Setter Property="IsEnabled" Value="False" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </MenuItem.Style>
                        <MenuItem
                            Height="48"
                            Command="{Binding ExportToExcelGatewayListCommand}"
                            Header="{x:Static p:Resources.Export_gateway_list_to_excel_file}" />
                    </MenuItem>
                    <MenuItem Header="{x:Static p:Resources._Edit}">
                        <MenuItem
                            Height="48"
                            Command="{Binding DeleteAllFromGatewayAwaitCommand}"
                            Header="{x:Static p:Resources.Delete_all_IR_from_the_gateway}"
                            Style="{DynamicResource MaterialDesignMenuItemBillson}" />
                        <Separator Margin="8,0" Style="{StaticResource MaterialDesignDarkSeparator}" />
                        <MenuItem
                            Height="48"
                            Command="{Binding DeleteAllFromCloudAwaitCommand}"
                            Header="{x:Static p:Resources.Delete_all_IR_from_the_cloud}"
                            Style="{DynamicResource MaterialDesignMenuItemBillson}" />
                    </MenuItem>
                    <MenuItem Header="{x:Static p:Resources._Reload}">
                        <MenuItem
                            Height="48"
                            Command="{Binding GetAllFromGatewayCommand}"
                            Header="{x:Static p:Resources.Gateway_List}"
                            Style="{DynamicResource MaterialDesignMenuItemBillson}" />
                        <Separator Margin="8,0" Style="{StaticResource MaterialDesignDarkSeparator}" />
                        <MenuItem
                            Height="48"
                            Command="{Binding GetAllFromCloudCommand}"
                            Header="{x:Static p:Resources.Cloud_List}"
                            Style="{DynamicResource MaterialDesignMenuItemBillson}" />
                    </MenuItem>
                </Menu>
                <StackPanel
                    Margin="16"
                    HorizontalAlignment="Right"
                    VerticalAlignment="Top"
                    Orientation="Horizontal">
                    <TextBlock
                        Margin="0,0,8,0"
                        VerticalAlignment="Center"
                        Opacity=".8"
                        Text="{x:Static p:Resources.Memory}" />
                    <TextBlock
                        VerticalAlignment="Center"
                        Opacity=".8"
                        Text="{Binding SelectedProjectModel.SelectedGateway.IRsGateway.Count, UpdateSourceTrigger=PropertyChanged}" />
                    <TextBlock
                        VerticalAlignment="Center"
                        Opacity=".8"
                        Text="/" />
                    <TextBlock
                        VerticalAlignment="Center"
                        Opacity=".8"
                        Text="{Binding SelectedProjectModel.SelectedGateway.IRCommandsLimit, UpdateSourceTrigger=PropertyChanged}" />
                </StackPanel>
            </Grid>
        </materialDesign:DialogHost>
    </Grid>
</UserControl>