<Page
    x:Class="FC.Manager.View.Project.Gateway.ListSchedulePage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:p="clr-namespace:FC.Domain.Properties;assembly=FC.Domain"
    x:Name="listSchedulePage"
    Title="ListSchedulePage"
    d:DesignHeight="450"
    d:DesignWidth="800"
    DataContext="{Binding ListSchedule, Source={StaticResource Locator}}"
    mc:Ignorable="d">
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding LoadedCommand}" CommandParameter="{Binding ElementName=listSchedulePage}" />
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <materialDesign:DialogHost
        x:Name="dialogHost"
        Margin="0"
        Padding="0"
        AllowDrop="True"
        CloseOnClickAway="True"
        DialogContent="{Binding DialogContent}"
        FocusVisualStyle="{x:Null}"
        IsOpen="{Binding IsOpenDialogHost}">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <ListBox
                x:Name="ListBoxIfThen"
                Grid.Row="3"
                Margin="8,0"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Stretch"
                ItemsSource="{Binding IfThenModels}">
                <ListBox.ItemsPanel>
                    <ItemsPanelTemplate>
                        <WrapPanel />
                    </ItemsPanelTemplate>
                </ListBox.ItemsPanel>
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <Grid Cursor="Hand">
                            <Grid.Style>
                                <Style TargetType="{x:Type Grid}">
                                    <Setter Property="Opacity" Value="0" />
                                    <Style.Triggers>
                                        <Trigger Property="Visibility" Value="Visible">
                                            <Trigger.EnterActions>
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <DoubleAnimation
                                                            Storyboard.TargetProperty="Opacity"
                                                            From="0.0"
                                                            To="1.0"
                                                            Duration="0:0:1" />
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </Trigger.EnterActions>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Grid.Style>
                            <Border
                                Width="200"
                                Height="100"
                                Padding="8"
                                Background="{StaticResource ChathamsBlueBillson}"
                                CornerRadius="4">
                                <Border.Effect>
                                    <DropShadowEffect BlurRadius="8" ShadowDepth="0" />
                                </Border.Effect>
                            </Border>
                            <Border
                                Width="200"
                                Height="100"
                                Padding="8"
                                Background="{StaticResource ChathamsBlueBillson}"
                                CornerRadius="4">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="MouseUp">
                                        <i:InvokeCommandAction Command="{Binding ElementName=ListBoxIfThen, Path=DataContext.SelectionChangedCommand}" CommandParameter="{Binding Path=., UpdateSourceTrigger=PropertyChanged}" />
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="*" />
                                        <RowDefinition Height="Auto" />
                                    </Grid.RowDefinitions>
                                    <TextBox
                                        materialDesign:HintAssist.Hint="{x:Static p:Resources.Name}"
                                        materialDesign:TextFieldAssist.CharacterCounterVisibility="Collapsed"
                                        Background="Transparent"
                                        BorderBrush="Transparent"
                                        FocusVisualStyle="{x:Null}"
                                        FontSize="14"
                                        Foreground="{StaticResource MaterialDesignDarkForeground}"
                                        MaxLength="30"
                                        Style="{StaticResource MaterialDesignFloatingHintTextBox}"
                                        Text="{Binding Name, UpdateSourceTrigger=PropertyChanged, NotifyOnSourceUpdated=True}">
                                        <TextBox.InputBindings>
                                            <KeyBinding
                                                Command="{Binding ListSchedule.RenameCommand, Source={StaticResource Locator}}"
                                                CommandParameter="{Binding Path=.}"
                                                Gesture="Enter" />
                                        </TextBox.InputBindings>
                                    </TextBox>
                                    <StackPanel
                                        Grid.Row="3"
                                        Margin="0,0,0,6"
                                        Orientation="Horizontal">
                                        <TextBlock
                                            Grid.Row="3"
                                            FontSize="9"
                                            FontWeight="Bold"
                                            Foreground="{StaticResource MaterialDesignDarkForeground}"
                                            Opacity=".5"
                                            Text="{x:Static p:Resources.Updated}" />
                                        <TextBlock
                                            Grid.Row="3"
                                            Margin="8,0,0,0"
                                            FontSize="9"
                                            Foreground="{StaticResource MaterialDesignDarkForeground}"
                                            Opacity=".5"
                                            Text="{Binding ParseObject.UpdatedAt, Converter={StaticResource currentOffSetConverter}}" />
                                    </StackPanel>
                                    <materialDesign:PopupBox
                                        x:Name="popupBox"
                                        Grid.Row="0"
                                        Grid.RowSpan="4"
                                        Margin="0,0,-8,0"
                                        Padding="0"
                                        HorizontalAlignment="Right"
                                        VerticalAlignment="Bottom"
                                        materialDesign:ThemeAssist.Theme="Dark"
                                        FocusVisualStyle="{x:Null}"
                                        Foreground="{StaticResource MaterialDesignDarkForeground}"
                                        Style="{StaticResource MaterialDesignPopupBox}">
                                        <Border Width="255" Background="Transparent">
                                            <Grid Margin="0,0,0,16">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="*" />
                                                    <ColumnDefinition Width="Auto" />
                                                </Grid.ColumnDefinitions>
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="Auto" />
                                                    <RowDefinition Height="Auto" />
                                                    <RowDefinition Height="Auto" />
                                                    <RowDefinition Height="Auto" />
                                                    <RowDefinition Height="Auto" />
                                                    <RowDefinition Height="Auto" />
                                                </Grid.RowDefinitions>

                                                <TextBlock
                                                    Grid.Row="0"
                                                    Grid.Column="0"
                                                    Grid.ColumnSpan="2"
                                                    Margin="10,0,16,0"
                                                    VerticalAlignment="Center"
                                                    FontSize="13"
                                                    FontWeight="Bold"
                                                    Text="{Binding Name}"
                                                    TextTrimming="CharacterEllipsis" />
                                                <TextBlock
                                                    Grid.Row="1"
                                                    Grid.Column="0"
                                                    Grid.ColumnSpan="2"
                                                    Margin="16,16,8,0"
                                                    VerticalAlignment="Center"
                                                    FontWeight="DemiBold"
                                                    TextWrapping="Wrap">
                                                    <TextBlock.Style>
                                                        <Style TargetType="{x:Type TextBlock}">
                                                            <Setter Property="Text" Value="{x:Static p:Resources.Disabled}" />
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding IsEnabled}" Value="True">
                                                                    <Setter Property="Text" Value="{x:Static p:Resources.Enabled}" />
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </TextBlock.Style>
                                                </TextBlock>
                                                <ToggleButton
                                                    Grid.Row="1"
                                                    Grid.Column="1"
                                                    Margin="16,16,16,0"
                                                    HorizontalAlignment="Right"
                                                    VerticalAlignment="Center"
                                                    Command="{Binding ListSchedule.EnableCommand, Source={StaticResource Locator}}"
                                                    CommandParameter="{Binding Path=.}"
                                                    FocusVisualStyle="{x:Null}"
                                                    IsChecked="{Binding IsEnabled, UpdateSourceTrigger=PropertyChanged, NotifyOnSourceUpdated=True}" />
                                                <Separator
                                                    Grid.Row="2"
                                                    Grid.Column="0"
                                                    Grid.ColumnSpan="2"
                                                    Style="{StaticResource MaterialDesignDarkSeparator}" />
                                                <TextBlock
                                                    Grid.Row="3"
                                                    Grid.Column="0"
                                                    Grid.ColumnSpan="2"
                                                    Margin="16,0,8,0"
                                                    VerticalAlignment="Center"
                                                    FontWeight="DemiBold"
                                                    Text="{x:Static p:Resources.Delete_schedule}"
                                                    TextWrapping="Wrap" />
                                                <Button
                                                    Grid.Row="3"
                                                    Grid.Column="1"
                                                    Margin="16,0,16,0"
                                                    VerticalAlignment="Center"
                                                    Command="{Binding ListSchedule.DeleteAsyncCommand, Source={StaticResource Locator}}"
                                                    CommandParameter="{Binding Path=.}"
                                                    Content="{x:Static p:Resources._Delete}"
                                                    FocusVisualStyle="{x:Null}"
                                                    Style="{StaticResource DeleteButton}" />
                                                <Button
                                                    Grid.Row="0"
                                                    Grid.Column="1"
                                                    Margin="0,0,4,0"
                                                    HorizontalAlignment="Right"
                                                    VerticalAlignment="Center"
                                                    Command="{x:Static materialDesign:PopupBox.ClosePopupCommand}"
                                                    FocusVisualStyle="{x:Null}"
                                                    Foreground="White"
                                                    Style="{StaticResource MaterialDesignToolButton}">
                                                    <materialDesign:PackIcon Kind="Close" />
                                                </Button>
                                            </Grid>
                                        </Border>
                                    </materialDesign:PopupBox>
                                </Grid>
                            </Border>
                        </Grid>
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>
            <Border
                Grid.Row="0"
                Grid.ColumnSpan="3"
                Margin="0"
                Style="{DynamicResource BorderMenu}" />
            <Menu
                Grid.Row="0"
                Grid.ColumnSpan="4"
                VerticalAlignment="Stretch"
                materialDesign:ThemeAssist.Theme="Dark"
                Cursor="Hand"
                FocusVisualStyle="{x:Null}"
                IsMainMenu="True"
                Style="{StaticResource MaterialDesignMenuBillson}">
                <MenuItem
                    Command="{Binding ReloadCommand}"
                    Header="{x:Static p:Resources.Reload}"
                    Style="{StaticResource MaterialDesignMenuItem}" />
                <MenuItem
                    Command="{Binding NewCommand}"
                    Header="{x:Static p:Resources.New}"
                    Style="{StaticResource MaterialDesignMenuItem}" />
            </Menu>
            <Border
                Grid.Row="3"
                Grid.RowSpan="2"
                Grid.ColumnSpan="2"
                HorizontalAlignment="Center"
                VerticalAlignment="Center">
                <Border.Style>
                    <Style TargetType="{x:Type Border}">
                        <Setter Property="Visibility" Value="Collapsed" />
                        <Style.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IfThenModels.Count}" Value="0" />
                                    <Condition Binding="{Binding IsSendingToGateway}" Value="False" />
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Visibility" Value="Visible" />
                            </MultiDataTrigger>
                        </Style.Triggers>
                    </Style>
                </Border.Style>
                <Grid HorizontalAlignment="Center" VerticalAlignment="Center">
                    <TextBlock>
                        <Hyperlink
                            Command="{Binding NewCommand}"
                            Foreground="White"
                            Style="{StaticResource MaterialDesignHeadline5Hyperlink}">
                            <TextBlock
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Style="{StaticResource MaterialDesignHeadline4TextBlock}"
                                Text="{x:Static p:Resources.There_s_nothing_here__Click_here_to_create_an_Scheduling_}" />
                        </Hyperlink>
                    </TextBlock>
                </Grid>
            </Border>
            <TextBlock
                Grid.Row="1"
                Margin="16,16,16,8"
                Foreground="{StaticResource MaterialDesignDarkForeground}"
                Style="{StaticResource MaterialDesignHeadline4TextBlock}"
                Text="{x:Static p:Resources.Scheduling}" />
            <Separator Grid.Row="2" Style="{StaticResource MaterialDesignDarkSeparator}" />
        </Grid>
    </materialDesign:DialogHost>
</Page>