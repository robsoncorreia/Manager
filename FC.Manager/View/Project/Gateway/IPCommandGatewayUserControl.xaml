<UserControl
    x:Class="FC.Manager.View.Project.Gateway.IPCommandGatewayUserControl"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:p="clr-namespace:FC.Domain.Properties;assembly=FC.Domain"
    xmlns:validator="clr-namespace:FC.Domain.Validator;assembly=FC.Domain"
    xmlns:Components="clr-namespace:FC.Manager.View.Components"
    x:Name="ipCommandDetailDeviceUserControl"
    DataContext="{Binding IPCommandDetailDevice, Source={StaticResource Locator}}"
    mc:Ignorable="d">
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding LoadedCommand}" CommandParameter="{Binding ElementName=ipCommandDetailDeviceUserControl}" />
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <UserControl.Resources>
        <Style TargetType="{x:Type TabItem}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabItem}">
                        <Border
                            Name="Border"
                            Margin="0,0,0,0"
                            Background="Transparent"
                            BorderBrush="{StaticResource PrimaryHueDarkBrush}"
                            CornerRadius="5 5 0 0">
                            <ContentPresenter
                                x:Name="ContentSite"
                                Margin="12,12,12,12"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch"
                                ContentSource="Header"
                                RecognizesAccessKey="True">
                                <ContentPresenter.LayoutTransform>
                                    <RotateTransform Angle="0" />
                                </ContentPresenter.LayoutTransform>
                            </ContentPresenter>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="BorderBrush" Value="{StaticResource PrimaryHueDarkBrush}" />
                                <Setter Property="Panel.ZIndex" Value="100" />
                                <Setter TargetName="Border" Property="Background" Value="{StaticResource ResourceKey=TundoraBillson}" />
                                <Setter Property="Foreground" Value="White" />
                                <Setter Property="BorderThickness" Value="2,2,2,0" />
                            </Trigger>
                            <Trigger Property="IsSelected" Value="False">
                                <Setter TargetName="Border" Property="Background" Value="{StaticResource ResourceKey=Dark}" />
                                <Setter Property="BorderBrush" Value="White" />
                                <Setter Property="Foreground" Value="White" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <materialDesign:DialogHost
            x:Name="DialogHost"
            Padding="0"
            DialogContent="{Binding DialogContent}"
            FocusVisualStyle="{x:Null}"
            IsOpen="{Binding IsOpenDialogHost}">
            <Grid>
                <Grid.Style>
                    <Style TargetType="{x:Type Grid}">
                        <Setter Property="IsEnabled" Value="True" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsSendingToGateway, UpdateSourceTrigger=PropertyChanged}" Value="True">
                                <Setter Property="IsEnabled" Value="False" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding IsSendingToCloud, UpdateSourceTrigger=PropertyChanged}" Value="True">
                                <Setter Property="IsEnabled" Value="False" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Grid.Style>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <ScrollViewer
                    Grid.Row="1"
                    Margin="0"
                    FocusVisualStyle="{x:Null}"
                    VerticalScrollBarVisibility="Auto">
                    <Grid>
                        <Grid.Resources>
                            <Style TargetType="{x:Type Border}">
                                <Setter Property="CornerRadius" Value="4" />
                            </Style>
                        </Grid.Resources>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" MinHeight="480" />
                            <RowDefinition Height="8" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <Border
                            Grid.Row="0"
                            Grid.Column="0"
                            Margin="8,8,4,0"
                            Padding="16"
                            VerticalAlignment="Stretch"
                            Background="{StaticResource TundoraBillson}">
                            <Border.Effect>
                                <DropShadowEffect BlurRadius="4" ShadowDepth="0" />
                            </Border.Effect>
                        </Border>
                        <Border
                            Grid.Row="0"
                            Grid.Column="0"
                            Margin="8,8,4,0"
                            Padding="16"
                            VerticalAlignment="Stretch"
                            Background="{StaticResource TundoraBillson}">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <TextBox
                                    x:Name="TextBoxTargetIp"
                                    Grid.Row="0"
                                    Grid.Column="0"
                                    Margin="0,2,0,8"
                                    HorizontalAlignment="Stretch"
                                    VerticalAlignment="Top"
                                    materialDesign:HintAssist.HelperText="{x:Static p:Resources.Gateway_IP_That_Will_Receive_Command}"
                                    materialDesign:HintAssist.Hint="{x:Static p:Resources.IP}"
                                    materialDesign:TextFieldAssist.CharacterCounterVisibility="Collapsed"
                                    materialDesign:TextFieldAssist.HasClearButton="True"
                                    materialDesign:TextFieldAssist.IncludeSpellingSuggestions="True"
                                    materialDesign:ValidationAssist.Background="{StaticResource Dark}"
                                    materialDesign:ValidationAssist.OnlyShowOnFocus="True"
                                    MaxLength="15"
                                    Style="{StaticResource MaterialDesignFilledTextBox}"
                                    ToolTip="{x:Static p:Resources.Gateway_IP_That_Will_Receive_Command}">
                                    <TextBox.Text>
                                        <Binding
                                            Mode="TwoWay"
                                            Path="IpCommandModel.TargetIp"
                                            UpdateSourceTrigger="PropertyChanged"
                                            ValidatesOnDataErrors="True">
                                            <Binding.ValidationRules>
                                                <validator:RegexValidateRule
                                                    Expression="^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-4])$"
                                                    TextError="{x:Static p:Resources.Invalid_IP}"
                                                    ValidatesOnTargetUpdated="True" />
                                            </Binding.ValidationRules>
                                        </Binding>
                                    </TextBox.Text>
                                </TextBox>
                                <TextBox
                                    x:Name="TextBoxTargetPort"
                                    Grid.Row="0"
                                    Grid.Column="1"
                                    Margin="8,2,8,0"
                                    VerticalAlignment="Top"
                                    materialDesign:HintAssist.HelperText="{x:Static p:Resources.Gateway_Port_That_Will_Receive_Command}"
                                    materialDesign:HintAssist.Hint="{x:Static p:Resources.Port_UDP_}"
                                    materialDesign:HintAssist.IsFloating="True"
                                    materialDesign:TextFieldAssist.CharacterCounterVisibility="Collapsed"
                                    materialDesign:TextFieldAssist.HasClearButton="True"
                                    materialDesign:ValidationAssist.Background="{StaticResource Dark}"
                                    materialDesign:ValidationAssist.OnlyShowOnFocus="True"
                                    MaxLength="5"
                                    Style="{StaticResource MaterialDesignFilledTextBox}"
                                    ToolTip="{x:Static p:Resources.Gateway_Port_That_Will_Receive_Command}">
                                    <TextBox.Text>
                                        <Binding
                                            Mode="TwoWay"
                                            Path="IpCommandModel.TargetPort"
                                            UpdateSourceTrigger="PropertyChanged">
                                            <Binding.ValidationRules>
                                                <validator:PortValidationRule
                                                    Min="1"
                                                    RangeEnd="65535"
                                                    RangeInit="1"
                                                    TextMinError="The Port must be at least 1 characters"
                                                    TextNumberInvalid="{x:Static p:Resources.Only_numbers}"
                                                    TextRangeError="{x:Static p:Resources.Invalid_port_number}"
                                                    ValidatesOnTargetUpdated="True" />
                                            </Binding.ValidationRules>
                                        </Binding>
                                    </TextBox.Text>
                                </TextBox>
                                <Grid
                                    Grid.Row="1"
                                    Grid.Column="2"
                                    Margin="16,18,0,0"
                                    VerticalAlignment="Top">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>
                                    <TextBox
                                        x:Name="TxtRepetition"
                                        Grid.Column="0"
                                        Width="98"
                                        HorizontalAlignment="Left"
                                        VerticalAlignment="Center"
                                        materialDesign:HintAssist.Hint="{x:Static p:Resources.Repetition}"
                                        materialDesign:TextFieldAssist.HasClearButton="True"
                                        materialDesign:ValidationAssist.Background="{StaticResource Dark}"
                                        materialDesign:ValidationAssist.OnlyShowOnFocus="True"
                                        materialDesign:ValidationAssist.Suppress="True"
                                        Background="Transparent"
                                        BorderBrush="{StaticResource MaterialDesignDarkSeparatorBackground}"
                                        Foreground="{StaticResource MaterialDesignDarkForeground}"
                                        MaxLength="3"
                                        ToolTip="{x:Static p:Resources.Repetition}">
                                        <TextBox.Style>
                                            <Style BasedOn="{StaticResource MaterialDesignFilledTextBox}" TargetType="{x:Type TextBox}">
                                                <Style.Triggers>
                                                    <Trigger Property="Validation.HasError" Value="true">
                                                        <Setter Property="ToolTip" Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors)/ErrorContent}" />
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBox.Style>
                                        <TextBox.Text>
                                            <Binding
                                                Mode="TwoWay"
                                                Path="IpCommandModel.Repetition"
                                                UpdateSourceTrigger="PropertyChanged"
                                                ValidatesOnDataErrors="True">
                                                <Binding.ValidationRules>
                                                    <validator:NumberRangeValidationRule Max="255" Min="0" />
                                                </Binding.ValidationRules>
                                            </Binding>
                                        </TextBox.Text>
                                    </TextBox>
                                    <TextBox
                                        x:Name="TxtDelay"
                                        Grid.Column="2"
                                        Width="106"
                                        Margin="16,0,0,0"
                                        HorizontalAlignment="Left"
                                        VerticalAlignment="Center"
                                        materialDesign:HintAssist.Hint="{x:Static p:Resources.Delay_ms}"
                                        materialDesign:TextFieldAssist.HasClearButton="True"
                                        materialDesign:ValidationAssist.Background="{StaticResource Dark}"
                                        materialDesign:ValidationAssist.OnlyShowOnFocus="True"
                                        materialDesign:ValidationAssist.PopupPlacement="MousePoint"
                                        materialDesign:ValidationAssist.Suppress="True"
                                        Background="Transparent"
                                        BorderBrush="{StaticResource MaterialDesignDarkSeparatorBackground}"
                                        Foreground="{StaticResource MaterialDesignDarkForeground}"
                                        MaxLength="3"
                                        ToolTip="{x:Static p:Resources.Delay_ms}">
                                        <TextBox.Style>
                                            <Style BasedOn="{StaticResource MaterialDesignFilledTextBox}" TargetType="{x:Type TextBox}">
                                                <Style.Triggers>
                                                    <Trigger Property="Validation.HasError" Value="true">
                                                        <Setter Property="ToolTip" Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors)/ErrorContent}" />
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBox.Style>
                                        <TextBox.Text>
                                            <Binding
                                                Mode="TwoWay"
                                                Path="IpCommandModel.Delay"
                                                UpdateSourceTrigger="PropertyChanged"
                                                ValidatesOnDataErrors="True">
                                                <Binding.ValidationRules>
                                                    <validator:NumberRangeValidationRule Max="255" Min="0" />
                                                </Binding.ValidationRules>
                                            </Binding>
                                        </TextBox.Text>
                                    </TextBox>
                                </Grid>
                                <ComboBox
                                    Grid.Row="0"
                                    Grid.Column="2"
                                    Width="120"
                                    Margin="0,8,0,0"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Top"
                                    materialDesign:HintAssist.Hint="{x:Static p:Resources.Command_Type}"
                                    materialDesign:ThemeAssist.Theme="Dark"
                                    SelectedIndex="{Binding IpCommandModel.CommandTypeIndex}"
                                    ToolTip="{x:Static p:Resources.Command_Type}">
                                    <ComboBoxItem Content="{x:Static p:Resources.Hexa}" />
                                    <ComboBoxItem Content="{x:Static p:Resources.Base64}" />
                                    <ComboBoxItem Content="{x:Static p:Resources.Text}" />
                                    <ComboBox.Style>
                                        <Style BasedOn="{StaticResource MaterialDesignFloatingHintComboBox}" TargetType="{x:Type ComboBox}">
                                            <Setter Property="IsEnabled" Value="True" />
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding IsSendingToGateway}" Value="True">
                                                    <Setter Property="IsEnabled" Value="False" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </ComboBox.Style>
                                </ComboBox>
                                <TextBox
                                    x:Name="TextBoxName"
                                    Grid.Row="1"
                                    Grid.ColumnSpan="2"
                                    Margin="0,16,8,16"
                                    materialDesign:HintAssist.Hint="{x:Static p:Resources.Name}"
                                    materialDesign:TextFieldAssist.HasClearButton="True"
                                    materialDesign:ValidationAssist.Background="{StaticResource Dark}"
                                    materialDesign:ValidationAssist.OnlyShowOnFocus="True"
                                    MaxLength="30"
                                    Style="{StaticResource MaterialDesignFilledTextBox}"
                                    ToolTip="{x:Static p:Resources.Name}">
                                    <TextBox.Text>
                                        <Binding
                                            Mode="TwoWay"
                                            Path="IpCommandModel.Name"
                                            UpdateSourceTrigger="PropertyChanged"
                                            ValidatesOnDataErrors="True">
                                            <Binding.ValidationRules>
                                                <validator:NotEmptyValidationRule TextError="{x:Static p:Resources.Field_Is_Required}" ValidatesOnTargetUpdated="True" />
                                            </Binding.ValidationRules>
                                        </Binding>
                                    </TextBox.Text>
                                </TextBox>
                                <Border
                                    Grid.Row="2"
                                    Margin="0,16,0,0"
                                    Padding="8,4"
                                    HorizontalAlignment="Left"
                                    CornerRadius="2,2,0,0">
                                    <Border.Style>
                                        <Style TargetType="{x:Type Border}">
                                            <Setter Property="Background" Value="{StaticResource DenimBillson}" />
                                            <Setter Property="BorderBrush" Value="{StaticResource DenimBillson}" />
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding ElementName=TextBoxCommand, Path=(Validation.HasError)}" Value="True">
                                                    <Setter Property="Background" Value="Red" />
                                                    <Setter Property="BorderBrush" Value="Red" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Border.Style>
                                    <TextBlock Text="{x:Static p:Resources.Command}" />
                                </Border>
                                <Border
                                    Grid.Row="3"
                                    Grid.Column="0"
                                    Grid.ColumnSpan="3"
                                    Margin="0,0,0,16"
                                    VerticalAlignment="Stretch"
                                    CornerRadius="0,2,2,2">
                                    <Border.Resources>
                                        <ControlTemplate x:Key="validationTemplate">
                                            <DockPanel>
                                                <TextBlock FontSize="20" Foreground="Red">!</TextBlock>
                                                <AdornedElementPlaceholder />
                                            </DockPanel>
                                        </ControlTemplate>
                                    </Border.Resources>
                                    <Border.Style>
                                        <Style TargetType="{x:Type Border}">
                                            <Setter Property="Background" Value="{StaticResource DenimBillson}" />
                                            <Setter Property="BorderBrush" Value="{StaticResource DenimBillson}" />
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding ElementName=TextBoxCommand, Path=(Validation.HasError)}" Value="True">
                                                    <Setter Property="Background" Value="Red" />
                                                    <Setter Property="BorderBrush" Value="Red" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Border.Style>
                                    <TextBox
                                        x:Name="TextBoxCommand"
                                        Padding="8"
                                        HorizontalAlignment="Stretch"
                                        VerticalAlignment="Stretch"
                                        Background="Transparent"
                                        BorderBrush="Transparent"
                                        BorderThickness="0"
                                        FontSize="12"
                                        Foreground="White"
                                        TextWrapping="Wrap">
                                        <TextBox.Style>
                                            <Style TargetType="{x:Type TextBox}">
                                                <Style.Triggers>
                                                    <Trigger Property="Validation.HasError" Value="true">
                                                        <Setter Property="ToolTip" Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors)/ErrorContent}" />
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBox.Style>
                                        <TextBox.Text>
                                            <Binding
                                                Mode="TwoWay"
                                                Path="IpCommandModel.Command"
                                                UpdateSourceTrigger="PropertyChanged"
                                                ValidatesOnDataErrors="True">
                                                <Binding.ValidationRules>
                                                    <validator:IPCommandDataValidator ErrorText="{x:Static p:Resources.Field_Is_Required}" ValidatesOnTargetUpdated="True" />
                                                </Binding.ValidationRules>
                                            </Binding>
                                        </TextBox.Text>
                                    </TextBox>
                                </Border>
                                <Button
                                    Grid.Row="3"
                                    Grid.Column="0"
                                    Grid.ColumnSpan="3"
                                    Height="26"
                                    Margin="0,0,0,16"
                                    HorizontalAlignment="Right"
                                    VerticalAlignment="Bottom"
                                    VerticalContentAlignment="Center"
                                    Background="{StaticResource BigStoneBillson}"
                                    BorderBrush="Transparent"
                                    Command="{Binding CopyCommand}"
                                    CommandParameter="{Binding ElementName=TextBoxCommand, Path=Text}">
                                    <TextBlock
                                        Margin="0,0,0,2"
                                        VerticalAlignment="Center"
                                        FontSize="10"
                                        Text="{x:Static p:Resources.Copy}" />
                                </Button>
                                <StackPanel
                                    Grid.Row="4"
                                    Grid.Column="0"
                                    Grid.ColumnSpan="3"
                                    HorizontalAlignment="Right"
                                    Orientation="Horizontal">
                                    <Button
                                        Margin="10,0"
                                        Command="{Binding SaveInGatewayCommand}"
                                        Content="{x:Static p:Resources._Save}"
                                        FocusVisualStyle="{x:Null}">
                                        <Button.Style>
                                            <Style BasedOn="{StaticResource SaveButton}" TargetType="Button">
                                                <Setter Property="IsEnabled" Value="True" />
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding Path=(Validation.HasError), UpdateSourceTrigger=PropertyChanged, ElementName=TextBoxTargetIp}" Value="True">
                                                        <Setter Property="IsEnabled" Value="False" />
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding Path=(Validation.HasError), UpdateSourceTrigger=PropertyChanged, ElementName=TextBoxTargetPort}" Value="True">
                                                        <Setter Property="IsEnabled" Value="False" />
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding Path=(Validation.HasError), UpdateSourceTrigger=PropertyChanged, ElementName=TextBoxName}" Value="True">
                                                        <Setter Property="IsEnabled" Value="False" />
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding Path=(Validation.HasError), UpdateSourceTrigger=PropertyChanged, ElementName=TextBoxCommand}" Value="True">
                                                        <Setter Property="IsEnabled" Value="False" />
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding Path=(Validation.HasError), UpdateSourceTrigger=PropertyChanged, ElementName=TxtRepetition}" Value="True">
                                                        <Setter Property="IsEnabled" Value="False" />
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding Path=(Validation.HasError), UpdateSourceTrigger=PropertyChanged, ElementName=TxtDelay}" Value="True">
                                                        <Setter Property="IsEnabled" Value="False" />
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding IsSendingToGateway}" Value="True">
                                                        <Setter Property="IsEnabled" Value="False" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Button.Style>
                                    </Button>
                                    <Button
                                        Command="{Binding NewCommand}"
                                        Content="{x:Static p:Resources._New}"
                                        FocusVisualStyle="{x:Null}">
                                        <Button.Style>
                                            <Style BasedOn="{StaticResource NewButton}" TargetType="Button">
                                                <Setter Property="IsEnabled" Value="True" />
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding IsSendingToGateway}" Value="True">
                                                        <Setter Property="IsEnabled" Value="False" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Button.Style>
                                    </Button>
                                </StackPanel>
                                <Border
                                    Grid.Row="5"
                                    Margin="0,8,0,0"
                                    Padding="8,4"
                                    HorizontalAlignment="Left"
                                    Background="{StaticResource DenimBillson}"
                                    CornerRadius="2,2,0,0">
                                    <TextBlock Text="{x:Static p:Resources.Last_command_sent}" />
                                </Border>
                                <Border
                                    Grid.Row="6"
                                    Grid.Column="0"
                                    Grid.ColumnSpan="3"
                                    Margin="0,0,0,2"
                                    VerticalAlignment="Stretch"
                                    Background="{StaticResource DenimBillson}"
                                    BorderBrush="Transparent"
                                    CornerRadius="0,2,2,2">
                                    <TextBox
                                        x:Name="TbLastCommandSent"
                                        Margin="0,16"
                                        Padding="8"
                                        HorizontalAlignment="Stretch"
                                        VerticalAlignment="Stretch"
                                        Background="{StaticResource DenimBillson}"
                                        BorderBrush="Transparent"
                                        BorderThickness="0"
                                        FontSize="12"
                                        Foreground="White"
                                        IsReadOnly="True"
                                        Text="{Binding LastCommandSend, Mode=TwoWay}"
                                        TextWrapping="Wrap" />
                                </Border>
                                <Button
                                    Grid.Row="6"
                                    Grid.Column="0"
                                    Grid.ColumnSpan="3"
                                    Height="26"
                                    Margin="0,0,0,2"
                                    HorizontalAlignment="Right"
                                    VerticalAlignment="Bottom"
                                    VerticalContentAlignment="Center"
                                    Background="{StaticResource BigStoneBillson}"
                                    BorderBrush="Transparent"
                                    Command="{Binding CopyCommand}"
                                    CommandParameter="{Binding ElementName=TbLastCommandSent, Path=Text}">
                                    <TextBlock
                                        Margin="0,0,0,0"
                                        VerticalAlignment="Center"
                                        FontSize="10"
                                        Text="{x:Static p:Resources.Copy}" />
                                </Button>
                            </Grid>
                        </Border>
                        <Border
                            Grid.Row="0"
                            Grid.Column="1"
                            Margin="4,8,8,0"
                            Padding="16"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            Background="{StaticResource TundoraBillson}">
                            <Border.Effect>
                                <DropShadowEffect BlurRadius="4" ShadowDepth="0" />
                            </Border.Effect>
                        </Border>
                        <Border
                            Grid.Row="0"
                            Grid.Column="1"
                            Margin="4,8,8,0"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            Background="{StaticResource TundoraBillson}">
                            <ListBox
                                x:Name="LbIPCommands"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch"
                                FocusVisualStyle="{x:Null}"
                                ItemContainerStyle="{StaticResource selectedItem}"
                                ItemsSource="{Binding SelectedProjectModel.SelectedGateway.IpCommands}"
                                ScrollViewer.CanContentScroll="True"
                                SelectedIndex="{Binding SelectedProjectModel.SelectedGateway.SelectedIndexIPCommand}">
                                <ListBox.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <WrapPanel />
                                    </ItemsPanelTemplate>
                                </ListBox.ItemsPanel>
                                <ListBox.ItemTemplate>
                                    <DataTemplate>
                                        <Grid>
                                            <Border
                                                HorizontalAlignment="Stretch"
                                                Background="{StaticResource Dark}"
                                                BorderBrush="Black"
                                                CornerRadius="2"
                                                Cursor="Hand"
                                                ToolTip="{Binding Path=.}">
                                                <Border.Effect>
                                                    <DropShadowEffect BlurRadius="4" ShadowDepth="0" />
                                                </Border.Effect>
                                                <i:Interaction.Triggers>
                                                    <i:EventTrigger EventName="MouseUp">
                                                        <i:InvokeCommandAction Command="{Binding ElementName=LbIPCommands, Path=DataContext.SelectedIPCommand}" CommandParameter="{Binding Path=.}" />
                                                    </i:EventTrigger>
                                                </i:Interaction.Triggers>
                                            </Border>
                                            <Grid Margin="8">
                                                <i:Interaction.Triggers>
                                                    <i:EventTrigger EventName="MouseUp">
                                                        <i:InvokeCommandAction Command="{Binding ElementName=LbIPCommands, Path=DataContext.SelectedIPCommand}" CommandParameter="{Binding Path=.}" />
                                                    </i:EventTrigger>
                                                </i:Interaction.Triggers>
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="Auto" />
                                                    <RowDefinition Height="Auto" />
                                                    <RowDefinition Height="Auto" />
                                                </Grid.RowDefinitions>
                                                <TextBox
                                                    Grid.Row="0"
                                                    Margin="0,0,0,0"
                                                    materialDesign:HintAssist.Hint="{x:Static p:Resources.Name}"
                                                    materialDesign:TextFieldAssist.UnderlineBrush="Transparent"
                                                    BorderBrush="Transparent"
                                                    IsReadOnly="True"
                                                    Style="{StaticResource MaterialDesignFloatingHintTextBox}"
                                                    Text="{Binding Name, Mode=OneTime}" />
                                                <StackPanel Grid.Row="1" Orientation="Horizontal">
                                                    <TextBox
                                                        HorizontalAlignment="Left"
                                                        materialDesign:HintAssist.Hint="{x:Static p:Resources.Target_IP}"
                                                        materialDesign:TextFieldAssist.SuffixText="UDP"
                                                        materialDesign:TextFieldAssist.UnderlineBrush="Transparent"
                                                        BorderBrush="Transparent"
                                                        FontSize="11"
                                                        Foreground="White"
                                                        IsReadOnly="True"
                                                        Style="{StaticResource MaterialDesignFloatingHintTextBox}"
                                                        Text="{Binding TargetIp, Mode=OneTime}" />
                                                    <TextBox
                                                        Margin="8,0,0,0"
                                                        HorizontalAlignment="Left"
                                                        materialDesign:HintAssist.Hint="{x:Static p:Resources.Target_port}"
                                                        materialDesign:TextFieldAssist.SuffixText="UDP"
                                                        materialDesign:TextFieldAssist.UnderlineBrush="Transparent"
                                                        BorderBrush="Transparent"
                                                        FontSize="11"
                                                        IsReadOnly="True"
                                                        Style="{StaticResource MaterialDesignFloatingHintTextBox}"
                                                        Text="{Binding TargetPort, Mode=OneTime}" />
                                                    <TextBox
                                                        Margin="8,0,0,0"
                                                        HorizontalAlignment="Left"
                                                        materialDesign:HintAssist.Hint="{x:Static p:Resources.Memory}"
                                                        materialDesign:TextFieldAssist.SuffixText="id"
                                                        materialDesign:TextFieldAssist.UnderlineBrush="Transparent"
                                                        BorderBrush="Transparent"
                                                        FontSize="11"
                                                        IsReadOnly="True"
                                                        Style="{StaticResource MaterialDesignFloatingHintTextBox}"
                                                        Text="{Binding MemoryId, Mode=OneTime}" />
                                                    <TextBox
                                                        Margin="8,0,0,0"
                                                        HorizontalAlignment="Left"
                                                        materialDesign:HintAssist.Hint="{x:Static p:Resources.Delay}"
                                                        materialDesign:TextFieldAssist.SuffixText="ms"
                                                        materialDesign:TextFieldAssist.UnderlineBrush="Transparent"
                                                        BorderBrush="Transparent"
                                                        FontSize="11"
                                                        IsReadOnly="True"
                                                        Style="{StaticResource MaterialDesignFloatingHintTextBox}"
                                                        Text="{Binding Delay, Mode=OneTime}" />
                                                </StackPanel>
                                                <StackPanel
                                                    Grid.Row="3"
                                                    Margin="0,8,0,0"
                                                    HorizontalAlignment="Right"
                                                    Orientation="Horizontal">
                                                    <Button
                                                        Width="82"
                                                        Margin="0,0,8,0"
                                                        Command="{Binding IPCommandDetailDevice.PlayCommand, Source={StaticResource Locator}}"
                                                        CommandParameter="{Binding Path=., UpdateSourceTrigger=PropertyChanged}"
                                                        FocusVisualStyle="{x:Null}">
                                                        <Button.Style>
                                                            <Style BasedOn="{StaticResource PlayButton}" TargetType="{x:Type Button}">
                                                                <Setter Property="IsEnabled" Value="True" />
                                                                <Setter Property="Content">
                                                                    <Setter.Value>
                                                                        <TextBlock Text="{x:Static p:Resources.Play}" />
                                                                    </Setter.Value>
                                                                </Setter>
                                                                <Style.Triggers>
                                                                    <DataTrigger Binding="{Binding IPCommandDetailDevice.IsSendingToGateway, Source={StaticResource Locator}}" Value="True">
                                                                        <Setter Property="IsEnabled" Value="False" />
                                                                    </DataTrigger>
                                                                    <DataTrigger Binding="{Binding IsSending}" Value="True">
                                                                        <Setter Property="Content">
                                                                            <Setter.Value>
                                                                                <ProgressBar IsIndeterminate="True" Style="{StaticResource MaterialDesignCircularProgressBar}" />
                                                                            </Setter.Value>
                                                                        </Setter>
                                                                    </DataTrigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </Button.Style>
                                                    </Button>
                                                    <Button
                                                        Width="82"
                                                        Command="{Binding IPCommandDetailDevice.DeleteAwaitCommand, Source={StaticResource Locator}}"
                                                        CommandParameter="{Binding Path=.}"
                                                        Content="{x:Static p:Resources._Delete}"
                                                        FocusVisualStyle="{x:Null}">
                                                        <Button.Style>
                                                            <Style BasedOn="{StaticResource DeleteButton}" TargetType="{x:Type Button}">
                                                                <Setter Property="IsEnabled" Value="True" />
                                                                <Style.Triggers>
                                                                    <DataTrigger Binding="{Binding IPCommandDetailDevice.IsSendingToGateway, Source={StaticResource Locator}}" Value="True">
                                                                        <Setter Property="IsEnabled" Value="False" />
                                                                    </DataTrigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </Button.Style>
                                                    </Button>
                                                </StackPanel>
                                            </Grid>
                                        </Grid>
                                    </DataTemplate>
                                </ListBox.ItemTemplate>
                                <ListBox.Style>
                                    <Style BasedOn="{StaticResource MaterialDesignListBox}" TargetType="{x:Type ListBox}">
                                        <Setter Property="IsEnabled" Value="True" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsSendingToGateway}" Value="True">
                                                <Setter Property="IsEnabled" Value="False" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </ListBox.Style>
                            </ListBox>
                        </Border>
                        <Components:SnackbarUserControl Grid.RowSpan="2" Grid.ColumnSpan="3" />
                    </Grid>
                </ScrollViewer>
                <Border
                    Grid.Row="0"
                    Grid.ColumnSpan="3"
                    Margin="0"
                    Style="{DynamicResource BorderMenu}" />
                <Menu
                    Grid.Row="0"
                    Grid.ColumnSpan="3"
                    Margin="0"
                    VerticalAlignment="Stretch"
                    materialDesign:ThemeAssist.Theme="Dark"
                    Background="{StaticResource CodGrayBillson}"
                    Cursor="Hand"
                    IsMainMenu="True"
                    Style="{StaticResource MaterialDesignMenuBillson}">
                    <MenuItem Header="{x:Static p:Resources.Excel}">
                        <MenuItem.Style>
                            <Style BasedOn="{StaticResource MaterialDesignMenuItem}" TargetType="{x:Type MenuItem}">
                                <Setter Property="IsEnabled" Value="True" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding SelectedProjectModel.SelectedGateway.IpCommands.Count}" Value="0">
                                        <Setter Property="IsEnabled" Value="False" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </MenuItem.Style>
                        <MenuItem
                            Height="50"
                            Command="{Binding ExportToExcelGatewayListCommand}"
                            Header="{x:Static p:Resources.Export_gateway_list_to_excel_file}" />
                    </MenuItem>
                    <MenuItem Header="{x:Static p:Resources._Edit}">
                        <MenuItem Command="{Binding DeleteAllAwaitCommand}" Header="{x:Static p:Resources.Delete_all_IP_commands_from_the_gateway_memory}">
                            <MenuItem.Style>
                                <Style BasedOn="{StaticResource MaterialDesignMenuItem}" TargetType="{x:Type MenuItem}">
                                    <Setter Property="IsEnabled" Value="True" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding SelectedProjectModel.SelectedGateway.IpCommands.Count}" Value="0">
                                            <Setter Property="IsEnabled" Value="False" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </MenuItem.Style>
                        </MenuItem>
                    </MenuItem>
                    <MenuItem Command="{Binding GetAllIPsGatewayCommand}" Header="{x:Static p:Resources._Reload}" />
                </Menu>
            </Grid>
        </materialDesign:DialogHost>
    </Grid>
</UserControl>