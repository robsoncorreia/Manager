<UserControl
    x:Class="FC.Manager.View.Project.Gateway.RelayTestGatewayUserControl"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:components="clr-namespace:FC.Manager.View.Components"
    xmlns:core="clr-namespace:System;assembly=mscorlib"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:local="clr-namespace:FC.Domain.Model;assembly=FC.Domain"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:model="clr-namespace:FC.Domain.Model;assembly=FC.Domain"
    xmlns:p="clr-namespace:FC.Domain.Properties;assembly=FC.Domain"
    xmlns:validator="clr-namespace:FC.Domain.Validator;assembly=FC.Domain"
    xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
    x:Name="flexRelayTestPage"
    DataContext="{Binding RelayTestDetailDevice, Source={StaticResource Locator}}"
    mc:Ignorable="d">
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding LoadedCommand}" />
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <UserControl.Resources>
        <ObjectDataProvider
            x:Key="relayStateMode"
            MethodName="GetValues"
            ObjectType="{x:Type core:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type Type="{x:Type model:RelayStateMode}" />
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        <Style
            x:Key="SelectedMemory"
            BasedOn="{StaticResource MaterialDesignListBoxItem}"
            TargetType="{x:Type ListBoxItem}">
            <Setter Property="HorizontalAlignment" Value="Stretch" />
            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="BorderThickness" Value="2" />
            <Setter Property="Padding" Value="0" />
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Padding" Value="0" />
                    <Setter Property="HorizontalAlignment" Value="Stretch" />
                    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                    <Setter Property="BorderBrush" Value="{StaticResource PrimaryHueDarkBrush}" />
                    <Setter Property="BorderThickness" Value="2" />
                </Trigger>
            </Style.Triggers>
            <Style.Resources>
                <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="Transparent" />
            </Style.Resources>
        </Style>
        <Style
            x:Key="myLBStyle"
            BasedOn="{StaticResource MaterialDesignListBoxItem}"
            TargetType="{x:Type ListBoxItem}">
            <Setter Property="Cursor" Value="No" />
            <Setter Property="IsEnabled" Value="False" />
            <Setter Property="Opacity" Value="0.01" />
            <Style.Triggers>
                <DataTrigger Binding="{Binding GatewayModelEnum}" Value="{x:Static local:GatewayModelEnum.FCZIR100311}">
                    <Setter Property="Cursor" Value="Hand" />
                    <Setter Property="IsEnabled" Value="True" />
                    <Setter Property="Opacity" Value="1" />
                </DataTrigger>
                <DataTrigger Binding="{Binding GatewayModelEnum}" Value="{x:Static local:GatewayModelEnum.FCZWS100V2}">
                    <Setter Property="Cursor" Value="Hand" />
                    <Setter Property="IsEnabled" Value="True" />
                    <Setter Property="Opacity" Value="1" />
                </DataTrigger>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="#000000" />
                    <Setter Property="Margin" Value="4" />
                    <Setter Property="BorderBrush" Value="{StaticResource PrimaryHueDarkBrush}" />
                    <Setter Property="BorderThickness" Value="2" />
                    <Setter Property="Foreground" Value="White" />
                </Trigger>
                <Trigger Property="IsSelected" Value="False">
                    <Setter Property="Background" Value="#000000" />
                    <Setter Property="Margin" Value="4" />
                    <Setter Property="BorderBrush" Value="#000000" />
                    <Setter Property="BorderThickness" Value="0,0,0,2" />
                    <Setter Property="Foreground" Value="White" />
                </Trigger>
            </Style.Triggers>
            <Style.Resources>
                <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="Transparent" />
            </Style.Resources>
        </Style>
        <Style TargetType="{x:Type TabItem}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabItem}">
                        <Border
                            Name="Border"
                            Margin="0,0,0,0"
                            Background="Transparent"
                            BorderBrush="{StaticResource PrimaryHueDarkBrush}"
                            CornerRadius="5 5 0 0">
                            <ContentPresenter
                                x:Name="ContentSite"
                                Margin="12,12,12,12"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch"
                                ContentSource="Header"
                                RecognizesAccessKey="True">
                                <ContentPresenter.LayoutTransform>
                                    <RotateTransform Angle="0" />
                                </ContentPresenter.LayoutTransform>
                            </ContentPresenter>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="BorderBrush" Value="{StaticResource PrimaryHueDarkBrush}" />
                                <Setter Property="Panel.ZIndex" Value="100" />
                                <Setter TargetName="Border" Property="Background" Value="{StaticResource ResourceKey=TundoraBillson}" />
                                <Setter Property="Foreground" Value="White" />
                                <Setter Property="BorderThickness" Value="2,2,2,0" />
                            </Trigger>
                            <Trigger Property="IsSelected" Value="False">
                                <Setter TargetName="Border" Property="Background" Value="{StaticResource ResourceKey=Dark}" />
                                <Setter Property="BorderBrush" Value="White" />
                                <Setter Property="Foreground" Value="White" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <materialDesign:DialogHost
            x:Name="DialogHost"
            DialogContent="{Binding DialogContent}"
            FocusVisualStyle="{x:Null}"
            IsOpen="{Binding IsOpenDialogHost}">
            <Grid>
                <Grid.Style>
                    <Style TargetType="{x:Type Grid}">
                        <Setter Property="IsEnabled" Value="True" />
                        <Setter Property="Opacity" Value="1" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsSendingToGateway, UpdateSourceTrigger=PropertyChanged}" Value="True">
                                <Setter Property="IsEnabled" Value="False" />
                                <Setter Property="Opacity" Value=".2" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding IsSendingToCloud, UpdateSourceTrigger=PropertyChanged}" Value="True">
                                <Setter Property="IsEnabled" Value="False" />
                                <Setter Property="Opacity" Value=".2" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Grid.Style>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <ScrollViewer
                    Grid.Row="1"
                    FocusVisualStyle="{x:Null}"
                    VerticalScrollBarVisibility="Auto">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" MinHeight="480" />
                            <RowDefinition Height="8" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <Border
                            Grid.Column="0"
                            Margin="8,8,8,0"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            Background="{StaticResource TundoraBillson}"
                            CornerRadius="2"
                            FocusVisualStyle="{x:Null}">
                            <Border.Effect>
                                <DropShadowEffect BlurRadius="4" ShadowDepth="0" />
                            </Border.Effect>
                        </Border>
                        <Border
                            Margin="8,8,8,0"
                            Padding="16"
                            VerticalAlignment="Stretch">
                            <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <TextBlock
                                    Grid.Row="3"
                                    Background="Transparent"
                                    FontSize="14"
                                    Foreground="White"
                                    Text="{x:Static p:Resources.Control_Relay_State}" />
                                <Separator
                                    Grid.Row="4"
                                    Grid.Column="0"
                                    Grid.ColumnSpan="2"
                                    Style="{StaticResource MaterialDesignDarkSeparator}" />
                                <StackPanel Grid.Row="5" Orientation="Horizontal">
                                    <TextBlock
                                        Margin="0,0,0,0"
                                        VerticalAlignment="Center"
                                        Foreground="White"
                                        Text="{x:Static p:Resources.State}" />
                                    <ToggleButton
                                        Margin="8,2,0,0"
                                        VerticalAlignment="Center"
                                        IsChecked="{Binding SelectedProjectModel.SelectedGateway.StateRelay, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                    <ComboBox
                                        x:Name="ComboBoxModeRelay"
                                        Width="90"
                                        Margin="16,0,16,8"
                                        HorizontalAlignment="Left"
                                        VerticalAlignment="Center"
                                        materialDesign:HintAssist.Hint="{x:Static p:Resources.Mode}"
                                        materialDesign:ThemeAssist.Theme="Dark"
                                        Foreground="White"
                                        ItemsSource="{Binding Source={StaticResource relayStateMode}}"
                                        SelectedIndex="{Binding SelectedProjectModel.SelectedGateway.SelectedIndexRelayStateMode}"
                                        Style="{StaticResource MaterialDesignFloatingHintComboBox}">
                                        <ComboBox.ItemTemplate>
                                            <DataTemplate>
                                                <TextBlock Text="{Binding Converter={StaticResource enumComboboxConverter}}" />
                                            </DataTemplate>
                                        </ComboBox.ItemTemplate>
                                    </ComboBox>
                                    <ComboBox
                                        x:Name="CbTimeRelay"
                                        Grid.Row="5"
                                        Grid.Column="0"
                                        Width="80"
                                        MaxHeight="10000"
                                        Margin="0,0,8,0"
                                        VerticalAlignment="Top"
                                        materialDesign:ComboBoxAssist.ShowSelectedItem="True"
                                        materialDesign:HintAssist.Hint="{x:Static p:Resources.Time_Relay}"
                                        materialDesign:TextFieldAssist.SuffixText="ms"
                                        materialDesign:ThemeAssist.Theme="Dark"
                                        materialDesign:ValidationAssist.Suppress="True"
                                        IsEditable="True"
                                        ItemsSource="{Binding SelectedProjectModel.SelectedGateway.TimesRelay}">
                                        <ComboBox.Style>
                                            <Style BasedOn="{StaticResource MaterialDesignFloatingHintComboBox}" TargetType="{x:Type ComboBox}">
                                                <Setter Property="Visibility" Value="Hidden" />
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding SelectedProjectModel.SelectedGateway.SelectedIndexRelayStateMode}" Value="1">
                                                        <Setter Property="Visibility" Value="Visible" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </ComboBox.Style>
                                        <ComboBox.Text>
                                            <Binding
                                                Mode="TwoWay"
                                                Path="SelectedProjectModel.SelectedGateway.RelayPulseTime"
                                                UpdateSourceTrigger="PropertyChanged">
                                                <Binding.ValidationRules>
                                                    <validator:NotEmptyValidationRule ValidatesOnTargetUpdated="True" />
                                                </Binding.ValidationRules>
                                            </Binding>
                                        </ComboBox.Text>
                                        <ComboBox.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <VirtualizingStackPanel />
                                            </ItemsPanelTemplate>
                                        </ComboBox.ItemsPanel>
                                    </ComboBox>
                                </StackPanel>
                                <Button
                                    Grid.Row="5"
                                    Grid.Column="0"
                                    Margin="8,8"
                                    HorizontalAlignment="Right"
                                    VerticalAlignment="Top"
                                    materialDesign:ButtonProgressAssist.IndicatorForeground="{StaticResource BigStoneBillson}"
                                    materialDesign:ButtonProgressAssist.IsIndeterminate="{Binding IsSendingToGateway}"
                                    materialDesign:ButtonProgressAssist.IsIndicatorVisible="{Binding IsSendingToGateway}"
                                    Command="{Binding GetRelayStateCommand}"
                                    Content="{x:Static p:Resources._Get}"
                                    FocusVisualStyle="{x:Null}">
                                    <Button.Style>
                                        <Style BasedOn="{StaticResource GetFlatButton}" TargetType="{x:Type Button}">
                                            <Setter Property="IsEnabled" Value="True" />
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding IsSendingToGateway}" Value="True">
                                                    <Setter Property="IsEnabled" Value="False" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Button.Style>
                                </Button>
                                <Button
                                    Grid.Row="5"
                                    Grid.Column="1"
                                    Margin="0,8"
                                    HorizontalAlignment="Right"
                                    VerticalAlignment="Top"
                                    materialDesign:ButtonProgressAssist.IndicatorForeground="{StaticResource BigStoneBillson}"
                                    materialDesign:ButtonProgressAssist.IsIndeterminate="{Binding IsSendingToGateway}"
                                    materialDesign:ButtonProgressAssist.IsIndicatorVisible="{Binding IsSendingToGateway}"
                                    Command="{Binding SetRelayStateCommand}"
                                    Content="{x:Static p:Resources._Set}">
                                    <Button.Style>
                                        <Style BasedOn="{StaticResource SetFlatButton}" TargetType="Button">
                                            <Setter Property="IsEnabled" Value="True" />
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Path=(Validation.HasError), UpdateSourceTrigger=PropertyChanged, ElementName=CbTimeRelay}" Value="True">
                                                    <Setter Property="IsEnabled" Value="False" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Button.Style>
                                </Button>
                                <Border
                                    Grid.Row="9"
                                    Grid.Column="0"
                                    Grid.ColumnSpan="3"
                                    Margin="0,16,0,0"
                                    Padding="8,4"
                                    HorizontalAlignment="Left"
                                    Background="{StaticResource DenimBillson}"
                                    BorderBrush="{StaticResource DenimBillson}"
                                    CornerRadius="2,2,0,0">
                                    <TextBlock Text="{x:Static p:Resources.Last_command_sent}" />
                                </Border>
                                <Border
                                    Grid.Row="10"
                                    Grid.Column="0"
                                    Grid.ColumnSpan="2"
                                    Margin="0,0,0,2"
                                    VerticalAlignment="Stretch"
                                    Background="{StaticResource DenimBillson}"
                                    BorderBrush="{StaticResource DenimBillson}"
                                    CornerRadius="0,2,2,2">
                                    <TextBox
                                        x:Name="TbLastCommandSent"
                                        Margin="2"
                                        Padding="8"
                                        HorizontalAlignment="Stretch"
                                        VerticalAlignment="Stretch"
                                        Background="{StaticResource DenimBillson}"
                                        BorderBrush="{StaticResource DenimBillson}"
                                        BorderThickness="0"
                                        FontSize="12"
                                        Foreground="White"
                                        IsReadOnly="True"
                                        Text="{Binding LastCommandSend, Mode=TwoWay}"
                                        TextWrapping="Wrap" />
                                </Border>
                                <Button
                                    Grid.Row="10"
                                    Grid.Column="0"
                                    Grid.ColumnSpan="2"
                                    Height="26"
                                    Margin="0,0,0,2"
                                    HorizontalAlignment="Right"
                                    VerticalAlignment="Bottom"
                                    VerticalContentAlignment="Center"
                                    Background="{StaticResource BigStoneBillson}"
                                    BorderBrush="Transparent"
                                    Command="{Binding CopyCommand}"
                                    CommandParameter="{Binding ElementName=TbLastCommandSent, Path=Text}">
                                    <TextBlock
                                        Margin="0,0,0,0"
                                        VerticalAlignment="Center"
                                        FontSize="10"
                                        Text="{x:Static p:Resources.Copy}" />
                                </Button>
                            </Grid>
                        </Border>
                        <!--  Terminal  -->
                        <components:TerminalUserControl
                            Grid.Row="2"
                            Grid.Column="0"
                            Grid.ColumnSpan="2"
                            Height="512"
                            Margin="8,0,8,8"
                            VerticalAlignment="Bottom">
                            <components:TerminalUserControl.Style>
                                <Style TargetType="{x:Type UserControl}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding ElementName=flexRelayTestPage, Path=DataContext.IsTerminalEnable, UpdateSourceTrigger=PropertyChanged}" Value="False">
                                            <Setter Property="Visibility" Value="Collapsed" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </components:TerminalUserControl.Style>
                        </components:TerminalUserControl>
                        <GridSplitter
                            Grid.Row="1"
                            Grid.Column="0"
                            Grid.ColumnSpan="2"
                            HorizontalAlignment="Stretch"
                            Style="{StaticResource MaterialDesignGridRowHeaderGripper}" />
                    </Grid>
                </ScrollViewer>

                <Border Grid.Row="0" Style="{DynamicResource BorderMenu}" />
                <Menu
                    Grid.Row="0"
                    VerticalAlignment="Stretch"
                    materialDesign:ThemeAssist.Theme="Dark"
                    Cursor="Hand"
                    IsMainMenu="True"
                    Style="{StaticResource MaterialDesignMenuBillson}" />
            </Grid>
        </materialDesign:DialogHost>
    </Grid>
</UserControl>