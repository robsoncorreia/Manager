<UserControl
    x:Class="FC.Manager.View.Project.Gateway.NetworkGatewayUserControl"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:enum="clr-namespace:FC.Domain.Model;assembly=FC.Domain"
    xmlns:p="clr-namespace:FC.Domain.Properties;assembly=FC.Domain"
    xmlns:validator="clr-namespace:FC.Domain.Validator;assembly=FC.Domain"
    xmlns:core="clr-namespace:System;assembly=mscorlib"
    x:Name="networkUserControl"
    HorizontalAlignment="Stretch"
    VerticalAlignment="Stretch"
    DataContext="{Binding NetworkDetailDevice, Source={StaticResource Locator}}"
    mc:Ignorable="d">
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding LoadedCommand}" CommandParameter="{Binding ElementName=networkUserControl}" />
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <UserControl.Resources>
        <ObjectDataProvider
            x:Key="apDHCP"
            MethodName="GetValues"
            ObjectType="{x:Type core:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type Type="enum:APDHCP" />
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        <ObjectDataProvider
            x:Key="enumType"
            MethodName="GetValues"
            ObjectType="{x:Type core:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type Type="enum:WiFiStatusEnum" />
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        <ObjectDataProvider
            x:Key="apStatusEnum"
            MethodName="GetValues"
            ObjectType="{x:Type core:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type Type="enum:APStatusEnum" />
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        <ObjectDataProvider
            x:Key="ipType"
            MethodName="GetValues"
            ObjectType="{x:Type core:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type Type="enum:TypeIPEnum" />
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        <Style
            x:Key="listBoxItem"
            BasedOn="{StaticResource MaterialDesignListBoxItem}"
            TargetType="{x:Type ListBoxItem}">
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="Padding" Value="1" />
            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="BorderBrush" Value="{StaticResource PrimaryHueDarkBrush}" />
                    <Setter Property="BorderThickness" Value="2" />
                </Trigger>
                <Trigger Property="IsSelected" Value="False">
                    <Setter Property="BorderBrush" Value="Transparent" />
                    <Setter Property="BorderThickness" Value="2" />
                </Trigger>
            </Style.Triggers>
            <Style.Resources>
                <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="Transparent" />
            </Style.Resources>
        </Style>
    </UserControl.Resources>
    <UserControl.InputBindings>
        <KeyBinding Key="Enter" Command="{x:Static materialDesign:DialogHost.CloseDialogCommand}" />
    </UserControl.InputBindings>
    <materialDesign:DialogHost
        Margin="0"
        Padding="0"
        DialogContent="{Binding DialogContent}"
        IsOpen="{Binding IsOpenDialogHost}">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <Grid.Style>
                <Style TargetType="{x:Type Grid}">
                    <Setter Property="IsEnabled" Value="True" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsSendingToGateway, UpdateSourceTrigger=PropertyChanged}" Value="True">
                            <Setter Property="IsEnabled" Value="False" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsSendingToCloud, UpdateSourceTrigger=PropertyChanged}" Value="True">
                            <Setter Property="IsEnabled" Value="False" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Grid.Style>
            <ScrollViewer
                Grid.Row="1"
                Padding="1"
                FocusVisualStyle="{x:Null}"
                VerticalScrollBarVisibility="Auto">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition MinWidth="300" />
                        <ColumnDefinition MinWidth="300" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <Grid.Resources>
                        <Style TargetType="{x:Type Border}">
                            <Setter Property="CornerRadius" Value="4" />
                        </Style>
                    </Grid.Resources>
                    <Border
                        Grid.Row="2"
                        Grid.Column="0"
                        Height="298"
                        Margin="8,4,4,8"
                        VerticalAlignment="Top"
                        Background="{StaticResource TundoraBillson}">
                        <Border.Effect>
                            <DropShadowEffect BlurRadius="4" ShadowDepth="0" />
                        </Border.Effect>
                    </Border>
                    <Border
                        Grid.Row="2"
                        Grid.Column="0"
                        Height="298"
                        Margin="8,4,4,8"
                        Padding="16"
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Top"
                        Background="{StaticResource TundoraBillson}"
                        IsEnabled="True">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" MinWidth="100" />
                                <ColumnDefinition Width="16" />
                                <ColumnDefinition Width="*" MinWidth="100" />
                            </Grid.ColumnDefinitions>
                            <TextBlock
                                Grid.Row="0"
                                Grid.Column="0"
                                Foreground="{StaticResource MaterialDesignDarkForeground}"
                                Style="{StaticResource MaterialDesignHeadline6TextBlock}"
                                Text="{x:Static p:Resources.AP}" />
                            <TextBox
                                x:Name="txtAPSSID"
                                Grid.Row="1"
                                Grid.Column="0"
                                Margin="0,8,0,12"
                                materialDesign:HintAssist.FloatingScale=".9"
                                materialDesign:HintAssist.Hint="{x:Static p:Resources.SSID}"
                                materialDesign:TextFieldAssist.HasFilledTextField="True"
                                materialDesign:ValidationAssist.Background="{StaticResource Dark}"
                                materialDesign:ValidationAssist.OnlyShowOnFocus="True"
                                Foreground="{StaticResource MaterialDesignDarkForeground}"
                                IsEnabled="False"
                                MaxLength="32"
                                Style="{StaticResource MaterialDesignFilledTextBox}">
                                <TextBox.Text>
                                    <Binding
                                        Mode="TwoWay"
                                        Path="SelectedProjectModel.SelectedGateway.APSSID"
                                        UpdateSourceTrigger="PropertyChanged"
                                        ValidatesOnDataErrors="True">
                                        <Binding.ValidationRules>
                                            <validator:RegexValidateRule TextError="SSID invalid" ValidatesOnTargetUpdated="True" />
                                        </Binding.ValidationRules>
                                    </Binding>
                                </TextBox.Text>
                            </TextBox>
                            <TextBox
                                x:Name="txtAPPassword"
                                Grid.Row="1"
                                Grid.Column="2"
                                Margin="0,8,0,16"
                                materialDesign:HintAssist.FloatingScale=".9"
                                materialDesign:HintAssist.Hint="{x:Static p:Resources.AP_Password}"
                                materialDesign:ValidationAssist.Background="{StaticResource Dark}"
                                materialDesign:ValidationAssist.OnlyShowOnFocus="True"
                                Foreground="{StaticResource MaterialDesignDarkForeground}"
                                IsEnabled="False"
                                MaxLength="32"
                                Style="{StaticResource MaterialDesignFilledTextBox}">
                                <TextBox.Text>
                                    <Binding
                                        Mode="TwoWay"
                                        Path="SelectedProjectModel.SelectedGateway.APPassword"
                                        UpdateSourceTrigger="PropertyChanged"
                                        ValidatesOnDataErrors="True">
                                        <Binding.ValidationRules>
                                            <validator:RegexValidateRule TextError="SSID invalid" ValidatesOnTargetUpdated="True" />
                                        </Binding.ValidationRules>
                                    </Binding>
                                </TextBox.Text>
                            </TextBox>
                            <Button
                                Grid.Row="2"
                                Grid.Column="2"
                                Margin="0,8"
                                HorizontalAlignment="Right"
                                Command="{Binding SetSSIDPasswordAPCommand}"
                                Content="{x:Static p:Resources._Save}"
                                IsEnabled="False"
                                Style="{StaticResource SaveButton}" />
                            <Separator
                                Grid.Row="3"
                                Grid.Column="0"
                                Grid.ColumnSpan="3"
                                Style="{StaticResource MaterialDesignDarkSeparator}" />
                            <StackPanel
                                Grid.Row="4"
                                Grid.Column="0"
                                Grid.ColumnSpan="3"
                                Orientation="Horizontal">
                                <ComboBox
                                    x:Name="CbAP"
                                    Width="94"
                                    Margin="0,0,0,8"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Center"
                                    materialDesign:HintAssist.Hint="{x:Static p:Resources.AP_connection}"
                                    materialDesign:ThemeAssist.Theme="Dark"
                                    FocusVisualStyle="{x:Null}"
                                    Foreground="{StaticResource MaterialDesignDarkForeground}"
                                    ItemsSource="{Binding Source={StaticResource apStatusEnum}}"
                                    SelectedIndex="{Binding SelectedProjectModel.SelectedGateway.SelectedIndexAPStatus, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                    Style="{StaticResource MaterialDesignFloatingHintComboBox}">
                                    <ComboBox.ItemTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Converter={StaticResource enumComboboxConverter}}" />
                                        </DataTemplate>
                                    </ComboBox.ItemTemplate>
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="SelectionChanged">
                                            <i:InvokeCommandAction Command="{Binding ElementName=networkUserControl, Path=DataContext.SetWIFIAPCommand}" CommandParameter="{Binding ElementName=CbAP}" />
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </ComboBox>
                                <ComboBox
                                    x:Name="CbAPIPType"
                                    Width="84"
                                    Margin="32,0,0,8"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Center"
                                    materialDesign:HintAssist.Hint="{x:Static p:Resources.AP_DHCP}"
                                    FocusVisualStyle="{x:Null}"
                                    Foreground="{StaticResource MaterialDesignDarkForeground}"
                                    IsEnabled="False"
                                    ItemsSource="{Binding Source={StaticResource apDHCP}}"
                                    SelectedIndex="{Binding SelectedProjectModel.SelectedGateway.SelectedIndexAPDHCP, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                    Style="{StaticResource MaterialDesignFloatingHintComboBox}">
                                    <ComboBox.ItemTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Converter={StaticResource enumComboboxConverter}}" />
                                        </DataTemplate>
                                    </ComboBox.ItemTemplate>
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="SelectionChanged">
                                            <i:InvokeCommandAction Command="{Binding ElementName=networkUserControl, Path=DataContext.SetAPDHCPCommand}" CommandParameter="{Binding ElementName=CbAPIPType}" />
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </ComboBox>
                            </StackPanel>
                        </Grid>
                    </Border>
                    <Border
                        Grid.Row="1"
                        Grid.RowSpan="2"
                        Grid.Column="1"
                        Height="746"
                        Margin="4,8,8,8"
                        VerticalAlignment="Top"
                        materialDesign:ThemeAssist.Theme="Dark"
                        Background="{StaticResource TundoraBillson}">
                        <Border.Effect>
                            <DropShadowEffect BlurRadius="4" ShadowDepth="0" />
                        </Border.Effect>
                    </Border>
                    <Border
                        Grid.Row="1"
                        Grid.RowSpan="2"
                        Grid.Column="1"
                        Height="746"
                        Margin="4,8,8,8"
                        Padding="16"
                        VerticalAlignment="Top"
                        materialDesign:ThemeAssist.Theme="Dark"
                        Background="{StaticResource TundoraBillson}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" MinWidth="100" />
                                <ColumnDefinition Width="16" />
                                <ColumnDefinition Width="*" MinWidth="100" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <TextBlock
                                Grid.Row="0"
                                Grid.Column="0"
                                Grid.ColumnSpan="3"
                                Foreground="{StaticResource MaterialDesignDarkForeground}"
                                Style="{StaticResource MaterialDesignHeadline6TextBlock}"
                                Text="{x:Static p:Resources.Wi_fi}" />
                            <TextBlock
                                Grid.Row="1"
                                Grid.Column="0"
                                Grid.ColumnSpan="3"
                                Margin="0,8"
                                FontSize="14"
                                Foreground="{StaticResource MaterialDesignDarkForeground}"
                                Style="{StaticResource MaterialDesignTitleTextBlock}"
                                Text="{x:Static p:Resources.Networks}" />
                            <Grid
                                Grid.Row="2"
                                Grid.Column="0"
                                Grid.ColumnSpan="3">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>
                                <materialDesign:Badged
                                    Grid.Row="1"
                                    Grid.Column="0"
                                    Grid.ColumnSpan="3"
                                    HorizontalAlignment="Stretch"
                                    VerticalAlignment="Stretch"
                                    HorizontalContentAlignment="Stretch"
                                    VerticalContentAlignment="Stretch"
                                    Badge="{Binding WifiNetworks.Count, Converter={StaticResource zeroToNull}}"
                                    BadgeBackground="{StaticResource Byzantium}"
                                    BadgeForeground="White"
                                    BadgePlacementMode="BottomLeft">
                                    <ListBox
                                        x:Name="ListBoxWifi"
                                        Height="82"
                                        BorderBrush="{StaticResource Dark}"
                                        BorderThickness="2"
                                        ItemContainerStyle="{StaticResource listBoxItem}"
                                        ItemsSource="{Binding WifiNetworks}"
                                        ScrollViewer.CanContentScroll="True"
                                        SelectedIndex="{Binding SelectedWifiNetworksIndex, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}">
                                        <ListBox.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <WrapPanel />
                                            </ItemsPanelTemplate>
                                        </ListBox.ItemsPanel>
                                        <ListBox.ItemTemplate>
                                            <DataTemplate>
                                                <Border
                                                    Padding="4,2"
                                                    Background="{StaticResource Dark}"
                                                    BorderBrush="Black"
                                                    BorderThickness="1"
                                                    CornerRadius="2"
                                                    FocusVisualStyle="{x:Null}">
                                                    <i:Interaction.Triggers>
                                                        <i:EventTrigger EventName="MouseUp">
                                                            <i:InvokeCommandAction Command="{Binding ElementName=networkUserControl, Path=DataContext.SelectedNetworkCommand}" CommandParameter="{Binding Path=.}" />
                                                        </i:EventTrigger>
                                                    </i:Interaction.Triggers>
                                                    <Grid>
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="Auto" />
                                                            <ColumnDefinition Width="Auto" />
                                                        </Grid.ColumnDefinitions>
                                                        <TextBlock
                                                            Grid.Column="1"
                                                            Text="{Binding Ssid}"
                                                            TextTrimming="CharacterEllipsis"
                                                            TextWrapping="Wrap" />
                                                    </Grid>
                                                </Border>
                                            </DataTemplate>
                                        </ListBox.ItemTemplate>
                                    </ListBox>
                                </materialDesign:Badged>
                                <Button
                                    Grid.Row="1"
                                    Grid.Column="2"
                                    Width="34"
                                    Height="34"
                                    Margin="0,-16,-16,0"
                                    HorizontalAlignment="Right"
                                    VerticalAlignment="Top"
                                    HorizontalContentAlignment="Center"
                                    VerticalContentAlignment="Center"
                                    materialDesign:ShadowAssist.ShadowEdges="Bottom"
                                    Background="{StaticResource PastelGreen}"
                                    BorderBrush="{StaticResource PastelGreen}"
                                    Command="{Binding GetWifisCommand}"
                                    FocusVisualStyle="{x:Null}"
                                    Style="{StaticResource MaterialDesignFloatingActionMiniAccentButton}">
                                    <materialDesign:PackIcon
                                        Width="18"
                                        Height="18"
                                        Kind="Sync" />
                                </Button>
                            </Grid>
                            <Separator
                                Grid.Row="3"
                                Grid.Column="0"
                                Grid.ColumnSpan="3"
                                Style="{StaticResource MaterialDesignDarkSeparator}" />
                            <ComboBox
                                x:Name="CbWiFi"
                                Grid.Row="4"
                                Grid.Column="0"
                                Grid.ColumnSpan="3"
                                Width="148"
                                Margin="0,0,0,8"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Center"
                                materialDesign:HintAssist.Hint="{x:Static p:Resources.Wifi_connection_status}"
                                materialDesign:ThemeAssist.Theme="Dark"
                                FocusVisualStyle="{x:Null}"
                                Foreground="{StaticResource MaterialDesignDarkForeground}"
                                ItemsSource="{Binding Source={StaticResource enumType}}"
                                SelectedIndex="{Binding SelectedProjectModel.SelectedGateway.SelectedIndexWiFiStatus}"
                                Style="{StaticResource MaterialDesignFloatingHintComboBox}">
                                <ComboBox.ItemTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding Converter={StaticResource enumComboboxConverter}}" />
                                    </DataTemplate>
                                </ComboBox.ItemTemplate>
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="SelectionChanged">
                                        <i:InvokeCommandAction Command="{Binding ElementName=networkUserControl, Path=DataContext.SetWifiStationCommand}" CommandParameter="{Binding ElementName=CbWiFi}" />
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </ComboBox>
                            <AdornerDecorator Grid.Row="5" Grid.Column="0">
                                <TextBox
                                    x:Name="txtSSID"
                                    Margin="0,8,0,0"
                                    materialDesign:HintAssist.FloatingScale=".9"
                                    materialDesign:HintAssist.Hint="{x:Static p:Resources.SSID}"
                                    materialDesign:TextFieldAssist.HasClearButton="True"
                                    materialDesign:ValidationAssist.Background="{StaticResource Dark}"
                                    materialDesign:ValidationAssist.OnlyShowOnFocus="True"
                                    Foreground="{StaticResource MaterialDesignDarkForeground}"
                                    MaxLength="32"
                                    Style="{StaticResource MaterialDesignFilledTextBox}"
                                    Tag="Wifi">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="TextChanged">
                                            <i:InvokeCommandAction Command="{Binding TextChangedCommand}" CommandParameter="{Binding ElementName=txtSSID}" />
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                    <TextBox.Text>
                                        <Binding
                                            Mode="TwoWay"
                                            Path="SelectedProjectModel.SelectedGateway.SSID"
                                            UpdateSourceTrigger="PropertyChanged"
                                            ValidatesOnDataErrors="True">
                                            <Binding.ValidationRules>
                                                <validator:RegexValidateRule TextError="SSID invalid" ValidatesOnTargetUpdated="True" />
                                            </Binding.ValidationRules>
                                        </Binding>
                                    </TextBox.Text>
                                </TextBox>
                            </AdornerDecorator>
                            <AdornerDecorator Grid.Row="5" Grid.Column="2">
                                <TextBox
                                    x:Name="txtPassword"
                                    Margin="0,8,0,0"
                                    materialDesign:HintAssist.FloatingScale=".9"
                                    materialDesign:HintAssist.Hint="{x:Static p:Resources.Password}"
                                    materialDesign:TextFieldAssist.HasClearButton="True"
                                    materialDesign:ValidationAssist.Background="{StaticResource Dark}"
                                    materialDesign:ValidationAssist.OnlyShowOnFocus="True"
                                    Foreground="{StaticResource MaterialDesignDarkForeground}"
                                    MaxLength="30"
                                    Style="{StaticResource MaterialDesignFilledTextBox}"
                                    Tag="Wifi"
                                    TextWrapping="Wrap">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="TextChanged">
                                            <i:InvokeCommandAction Command="{Binding TextChangedCommand}" CommandParameter="{Binding ElementName=txtPassword}" />
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                    <TextBox.Text>
                                        <Binding
                                            Mode="TwoWay"
                                            Path="SelectedProjectModel.SelectedGateway.Password"
                                            UpdateSourceTrigger="PropertyChanged"
                                            ValidatesOnDataErrors="True">
                                            <Binding.ValidationRules>
                                                <validator:NotEmptyValidationRule />
                                            </Binding.ValidationRules>
                                        </Binding>
                                    </TextBox.Text>
                                </TextBox>
                            </AdornerDecorator>
                            <Button
                                Grid.Row="6"
                                Grid.Column="2"
                                Margin="0,24,0,0"
                                HorizontalAlignment="Right"
                                materialDesign:ButtonProgressAssist.IndicatorBackground="Transparent"
                                materialDesign:ButtonProgressAssist.IndicatorForeground="Black"
                                materialDesign:ButtonProgressAssist.IsIndeterminate="{Binding IsTextChangedWifi}"
                                materialDesign:ButtonProgressAssist.IsIndicatorVisible="{Binding IsTextChangedWifi}"
                                materialDesign:ButtonProgressAssist.Value="-1"
                                BorderThickness="0"
                                Command="{Binding SaveConfigurationCommand}"
                                Content="{x:Static p:Resources._Save}"
                                FocusVisualStyle="{x:Null}">
                                <Button.Style>
                                    <Style BasedOn="{StaticResource SaveButton}" TargetType="Button">
                                        <Setter Property="IsEnabled" Value="False" />
                                        <Style.Triggers>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding Path=(Validation.HasError), UpdateSourceTrigger=PropertyChanged, ElementName=txtSSID}" Value="False" />
                                                    <Condition Binding="{Binding Path=(Validation.HasError), UpdateSourceTrigger=PropertyChanged, ElementName=txtPassword}" Value="False" />
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="IsEnabled" Value="True" />
                                            </MultiDataTrigger>
                                            <DataTrigger Binding="{Binding IsTextChangedWifi, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Value="True">
                                                <Setter Property="Background" Value="Red" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Button.Style>
                            </Button>
                            <TextBlock
                                Grid.Row="6"
                                Grid.Column="2"
                                Margin="0,0,0,-16"
                                HorizontalAlignment="Right"
                                VerticalAlignment="Bottom"
                                FontSize="9"
                                Foreground="White"
                                Text="{x:Static p:Resources.Press_the_button_to_apply_the_changes}"
                                TextWrapping="NoWrap">
                                <TextBlock.Style>
                                    <Style TargetType="{x:Type TextBlock}">
                                        <Setter Property="Visibility" Value="Hidden" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsTextChangedWifi, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Value="True">
                                                <Setter Property="Visibility" Value="Visible" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>
                            <Separator
                                Grid.Row="7"
                                Grid.Column="0"
                                Grid.ColumnSpan="3"
                                Style="{StaticResource MaterialDesignDarkSeparator}" />
                            <ComboBox
                                Grid.Row="8"
                                Grid.Column="0"
                                Grid.ColumnSpan="3"
                                Width="86"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Center"
                                materialDesign:HintAssist.Hint="{x:Static p:Resources.Type_IP}"
                                FocusVisualStyle="{x:Null}"
                                Foreground="{StaticResource MaterialDesignDarkForeground}"
                                ItemsSource="{Binding Source={StaticResource ipType}}"
                                SelectedIndex="{Binding SelectedProjectModel.SelectedGateway.SelectedIndexIPTypeWiFi}"
                                Style="{StaticResource MaterialDesignFloatingHintComboBox}">
                                <ComboBox.ItemTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding Converter={StaticResource enumComboboxConverter}}" />
                                    </DataTemplate>
                                </ComboBox.ItemTemplate>
                            </ComboBox>
                            <AdornerDecorator Grid.Row="9" Grid.Column="0">
                                <TextBox
                                    x:Name="TxtCurrentIpWiFi"
                                    Margin="0,16,0,8"
                                    VerticalAlignment="Top"
                                    materialDesign:HintAssist.FloatingScale="0.90"
                                    materialDesign:HintAssist.Hint="{x:Static p:Resources.Current_IP_Wi_Fi}"
                                    materialDesign:TextFieldAssist.HasClearButton="True"
                                    materialDesign:TextFieldAssist.TextBoxViewMargin="1 0 1 0"
                                    materialDesign:ValidationAssist.Background="{StaticResource Dark}"
                                    materialDesign:ValidationAssist.OnlyShowOnFocus="True"
                                    Foreground="{StaticResource MaterialDesignDarkForeground}"
                                    IsEnabled="False"
                                    MaxLength="15"
                                    Style="{StaticResource MaterialDesignFilledTextBox}">
                                    <TextBox.Text>
                                        <Binding
                                            Mode="TwoWay"
                                            Path="SelectedProjectModel.SelectedGateway.CurrentIpWiFi"
                                            UpdateSourceTrigger="PropertyChanged"
                                            ValidatesOnDataErrors="True" />
                                    </TextBox.Text>
                                </TextBox>
                            </AdornerDecorator>
                            <AdornerDecorator Grid.Row="10" Grid.Column="0">
                                <TextBox
                                    x:Name="TxtIpWifi"
                                    Margin="0,16"
                                    VerticalAlignment="Top"
                                    materialDesign:HintAssist.FloatingScale="0.90"
                                    materialDesign:HintAssist.Hint="{x:Static p:Resources.Static_IP_W_iFi}"
                                    materialDesign:TextFieldAssist.HasClearButton="True"
                                    materialDesign:TextFieldAssist.TextBoxViewMargin="1 0 1 0"
                                    materialDesign:ValidationAssist.Background="{StaticResource Dark}"
                                    materialDesign:ValidationAssist.OnlyShowOnFocus="True"
                                    Foreground="{StaticResource MaterialDesignDarkForeground}"
                                    MaxLength="15"
                                    Tag="WifiIP">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="TextChanged">
                                            <i:InvokeCommandAction Command="{Binding TextChangedCommand}" CommandParameter="{Binding ElementName=TxtIpWifi}" />
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                    <TextBox.Text>
                                        <Binding
                                            Mode="TwoWay"
                                            Path="SelectedProjectModel.SelectedGateway.StaticIPWiFi"
                                            UpdateSourceTrigger="PropertyChanged"
                                            ValidatesOnDataErrors="True">
                                            <Binding.ValidationRules>
                                                <validator:RegexValidateRule
                                                    Expression="^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-4])$"
                                                    TextError="IP invalid"
                                                    ValidatesOnTargetUpdated="True" />
                                            </Binding.ValidationRules>
                                        </Binding>
                                    </TextBox.Text>
                                    <TextBox.Style>
                                        <Style BasedOn="{StaticResource MaterialDesignFilledTextBox}" TargetType="TextBox">
                                            <Setter Property="IsEnabled" Value="False" />
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding SelectedProjectModel.SelectedGateway.SelectedIndexIPTypeWiFi}" Value="1">
                                                    <Setter Property="IsEnabled" Value="True" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBox.Style>
                                </TextBox>
                            </AdornerDecorator>
                            <AdornerDecorator Grid.Row="11" Grid.Column="0">
                                <TextBox
                                    x:Name="TxtRouterGatewayWifi"
                                    Margin="0,8"
                                    VerticalAlignment="Top"
                                    materialDesign:HintAssist.FloatingScale="0.90"
                                    materialDesign:HintAssist.Hint="Router/Gateway WiFi"
                                    materialDesign:TextFieldAssist.HasClearButton="True"
                                    materialDesign:TextFieldAssist.TextBoxViewMargin="1 0 1 0"
                                    materialDesign:ValidationAssist.Background="{StaticResource Dark}"
                                    materialDesign:ValidationAssist.OnlyShowOnFocus="True"
                                    Foreground="{StaticResource MaterialDesignDarkForeground}"
                                    MaxLength="15"
                                    Tag="WifiIP">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="TextChanged">
                                            <i:InvokeCommandAction Command="{Binding TextChangedCommand}" CommandParameter="{Binding ElementName=TxtRouterGatewayWifi}" />
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                    <TextBox.Style>
                                        <Style BasedOn="{StaticResource MaterialDesignFilledTextBox}" TargetType="TextBox">
                                            <Setter Property="IsEnabled" Value="False" />
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding SelectedProjectModel.SelectedGateway.SelectedIndexIPTypeWiFi}" Value="1">
                                                    <Setter Property="IsEnabled" Value="True" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBox.Style>
                                    <TextBox.Text>
                                        <Binding
                                            Mode="TwoWay"
                                            Path="SelectedProjectModel.SelectedGateway.RouterGatewayWiFi"
                                            UpdateSourceTrigger="PropertyChanged"
                                            ValidatesOnDataErrors="True">
                                            <Binding.ValidationRules>
                                                <validator:RegexValidateRule
                                                    Expression="^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$"
                                                    TextError="Router Gateway invalid"
                                                    ValidatesOnTargetUpdated="True" />
                                            </Binding.ValidationRules>
                                        </Binding>
                                    </TextBox.Text>
                                </TextBox>
                            </AdornerDecorator>
                            <AdornerDecorator Grid.Row="12" Grid.Column="0">
                                <TextBox
                                    x:Name="TxtMaskWifi"
                                    Margin="0,16"
                                    VerticalAlignment="Top"
                                    materialDesign:HintAssist.FloatingScale="0.90"
                                    materialDesign:HintAssist.Hint="{x:Static p:Resources.Mask_Wifi}"
                                    materialDesign:TextFieldAssist.HasClearButton="True"
                                    materialDesign:TextFieldAssist.TextBoxViewMargin="1 0 1 0"
                                    materialDesign:ValidationAssist.Background="{StaticResource Dark}"
                                    materialDesign:ValidationAssist.OnlyShowOnFocus="True"
                                    Foreground="{StaticResource MaterialDesignDarkForeground}"
                                    MaxLength="15"
                                    Tag="WifiIP">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="TextChanged">
                                            <i:InvokeCommandAction Command="{Binding TextChangedCommand}" CommandParameter="{Binding ElementName=TxtMaskWifi}" />
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                    <TextBox.Style>
                                        <Style BasedOn="{StaticResource MaterialDesignFilledTextBox}" TargetType="TextBox">
                                            <Setter Property="IsEnabled" Value="False" />
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding SelectedProjectModel.SelectedGateway.SelectedIndexIPTypeWiFi}" Value="1">
                                                    <Setter Property="IsEnabled" Value="True" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBox.Style>
                                    <TextBox.Text>
                                        <Binding
                                            Mode="TwoWay"
                                            NotifyOnValidationError="True"
                                            Path="SelectedProjectModel.SelectedGateway.MaskWiFi"
                                            UpdateSourceTrigger="PropertyChanged"
                                            ValidatesOnDataErrors="True"
                                            ValidatesOnExceptions="True">
                                            <Binding.ValidationRules>
                                                <validator:RegexValidateRule
                                                    Expression="^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$"
                                                    TextError="Mask invalid"
                                                    ValidatesOnTargetUpdated="True" />
                                            </Binding.ValidationRules>
                                        </Binding>
                                    </TextBox.Text>
                                </TextBox>
                            </AdornerDecorator>
                            <Button
                                Grid.Row="13"
                                Grid.Column="0"
                                Margin="0,8,0,0"
                                HorizontalAlignment="Right"
                                materialDesign:ButtonProgressAssist.IndicatorBackground="Transparent"
                                materialDesign:ButtonProgressAssist.IndicatorForeground="Black"
                                materialDesign:ButtonProgressAssist.IsIndeterminate="{Binding IsTextChangedWifiIP}"
                                materialDesign:ButtonProgressAssist.IsIndicatorVisible="{Binding IsTextChangedWifiIP}"
                                materialDesign:ButtonProgressAssist.Value="-1"
                                BorderThickness="0"
                                Command="{Binding ApplyWifiCommand}"
                                Content="{x:Static p:Resources._Save}"
                                FocusVisualStyle="{x:Null}">
                                <Button.Style>
                                    <Style BasedOn="{StaticResource SaveButton}" TargetType="Button">
                                        <Setter Property="IsEnabled" Value="False" />
                                        <Style.Triggers>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding Path=(Validation.HasError), UpdateSourceTrigger=PropertyChanged, ElementName=TxtIpWifi}" Value="False" />
                                                    <Condition Binding="{Binding Path=(Validation.HasError), UpdateSourceTrigger=PropertyChanged, ElementName=TxtRouterGatewayWifi}" Value="False" />
                                                    <Condition Binding="{Binding Path=(Validation.HasError), UpdateSourceTrigger=PropertyChanged, ElementName=TxtMaskWifi}" Value="False" />
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="IsEnabled" Value="True" />
                                            </MultiDataTrigger>
                                            <DataTrigger Binding="{Binding IsTextChangedWifiIP, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Value="True">
                                                <Setter Property="Background" Value="Red" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Button.Style>
                            </Button>
                            <TextBlock
                                Grid.Row="13"
                                Grid.Column="0"
                                Margin="0,0,0,-16"
                                HorizontalAlignment="Right"
                                VerticalAlignment="Bottom"
                                FontSize="9"
                                Foreground="White"
                                Text="{x:Static p:Resources.Press_the_button_to_apply_the_changes}"
                                TextWrapping="NoWrap">
                                <TextBlock.Style>
                                    <Style TargetType="{x:Type TextBlock}">
                                        <Setter Property="Visibility" Value="Hidden" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsTextChangedWifiIP, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Value="True">
                                                <Setter Property="Visibility" Value="Visible" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>
                            <AdornerDecorator Grid.Row="10" Grid.Column="2">
                                <TextBox
                                    x:Name="TxtMACWifi"
                                    Margin="0,16,0,8"
                                    VerticalAlignment="Top"
                                    materialDesign:HintAssist.FloatingScale="0.90"
                                    materialDesign:HintAssist.Hint="{x:Static p:Resources.Wi_Fi_MAC_Addres}"
                                    materialDesign:TextFieldAssist.HasClearButton="True"
                                    materialDesign:TextFieldAssist.TextBoxViewMargin="1 0 1 0"
                                    materialDesign:ValidationAssist.Background="{StaticResource Dark}"
                                    materialDesign:ValidationAssist.OnlyShowOnFocus="True"
                                    Foreground="{StaticResource MaterialDesignDarkForeground}"
                                    IsEnabled="False"
                                    IsReadOnly="True"
                                    MaxLength="17"
                                    Style="{StaticResource MaterialDesignFilledTextBox}">
                                    <TextBox.Text>
                                        <Binding
                                            Mode="TwoWay"
                                            Path="SelectedProjectModel.SelectedGateway.MacAddressWiFi"
                                            UpdateSourceTrigger="PropertyChanged"
                                            ValidatesOnDataErrors="True" />
                                    </TextBox.Text>
                                </TextBox>
                            </AdornerDecorator>
                            <AdornerDecorator Grid.Row="11" Grid.Column="2">
                                <TextBox
                                    x:Name="TxtTCPPortWifi"
                                    Margin="0,8"
                                    VerticalAlignment="Top"
                                    materialDesign:HintAssist.FloatingScale="0.90"
                                    materialDesign:HintAssist.Hint="{x:Static p:Resources.Wi_Fi_TCP_port}"
                                    materialDesign:TextFieldAssist.HasClearButton="True"
                                    materialDesign:TextFieldAssist.TextBoxViewMargin="1 0 1 0"
                                    materialDesign:ValidationAssist.Background="{StaticResource Dark}"
                                    materialDesign:ValidationAssist.OnlyShowOnFocus="True"
                                    Foreground="{StaticResource MaterialDesignDarkForeground}"
                                    MaxLength="5"
                                    Style="{StaticResource MaterialDesignFilledTextBox}"
                                    Tag="WifiPort">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="TextChanged">
                                            <i:InvokeCommandAction Command="{Binding TextChangedCommand}" CommandParameter="{Binding ElementName=TxtTCPPortWifi}" />
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                    <TextBox.Text>
                                        <Binding
                                            Mode="TwoWay"
                                            Path="SelectedProjectModel.SelectedGateway.TcpPortWiFi"
                                            UpdateSourceTrigger="PropertyChanged">
                                            <Binding.ValidationRules>
                                                <validator:PortValidationRule
                                                    Min="1"
                                                    RangeEnd="65535"
                                                    RangeInit="1"
                                                    TextMinError="The Port must be at least 1 characters"
                                                    TextNumberInvalid="Only numbers"
                                                    TextRangeError="Invalid Port number."
                                                    ValidatesOnTargetUpdated="True" />
                                            </Binding.ValidationRules>
                                        </Binding>
                                    </TextBox.Text>
                                </TextBox>
                            </AdornerDecorator>
                            <AdornerDecorator Grid.Row="12" Grid.Column="2">
                                <TextBox
                                    x:Name="TxtUdpPortWifi"
                                    Margin="0,16,0,8"
                                    VerticalAlignment="Top"
                                    materialDesign:HintAssist.FloatingScale="0.90"
                                    materialDesign:HintAssist.Hint="{x:Static p:Resources.Wi_Fi_UDP_port}"
                                    materialDesign:TextFieldAssist.HasClearButton="True"
                                    materialDesign:TextFieldAssist.TextBoxViewMargin="1 0 1 0"
                                    materialDesign:ValidationAssist.Background="{StaticResource Dark}"
                                    materialDesign:ValidationAssist.OnlyShowOnFocus="True"
                                    Foreground="{StaticResource MaterialDesignDarkForeground}"
                                    MaxLength="5"
                                    Style="{StaticResource MaterialDesignFilledTextBox}"
                                    Tag="WifiPort">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="TextChanged">
                                            <i:InvokeCommandAction Command="{Binding TextChangedCommand}" CommandParameter="{Binding ElementName=TxtUdpPortWifi}" />
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                    <TextBox.Text>
                                        <Binding
                                            Mode="TwoWay"
                                            Path="SelectedProjectModel.SelectedGateway.UdpPortWifi"
                                            UpdateSourceTrigger="PropertyChanged"
                                            ValidatesOnDataErrors="True">
                                            <Binding.ValidationRules>
                                                <validator:PortValidationRule
                                                    Min="1"
                                                    RangeEnd="65535"
                                                    RangeInit="1"
                                                    TextMinError="The Port must be at least 1 characters"
                                                    TextNumberInvalid="Only numbers"
                                                    TextRangeError="Invalid Port number."
                                                    ValidatesOnTargetUpdated="True" />
                                            </Binding.ValidationRules>
                                        </Binding>
                                    </TextBox.Text>
                                </TextBox>
                            </AdornerDecorator>
                            <Button
                                x:Name="BtnPortsWifi"
                                Grid.Row="13"
                                Grid.Column="2"
                                Margin="0,8,0,0"
                                HorizontalAlignment="Right"
                                materialDesign:ButtonProgressAssist.IndicatorBackground="Transparent"
                                materialDesign:ButtonProgressAssist.IndicatorForeground="Black"
                                materialDesign:ButtonProgressAssist.IsIndeterminate="{Binding IsTextChangedWifiPort}"
                                materialDesign:ButtonProgressAssist.IsIndicatorVisible="{Binding IsTextChangedWifiPort}"
                                materialDesign:ButtonProgressAssist.Value="-1"
                                BorderThickness="0"
                                Command="{Binding ApplyWifiPortCommand}"
                                Content="{x:Static p:Resources._Save}"
                                FocusVisualStyle="{x:Null}">
                                <Button.Style>
                                    <Style BasedOn="{StaticResource SaveButton}" TargetType="Button">
                                        <Setter Property="IsEnabled" Value="False" />
                                        <Style.Triggers>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding Path=IsSendingToGateway, UpdateSourceTrigger=PropertyChanged}" Value="False" />
                                                    <Condition Binding="{Binding Path=(Validation.HasError), UpdateSourceTrigger=PropertyChanged, ElementName=TxtTCPPortWifi}" Value="False" />
                                                    <Condition Binding="{Binding Path=(Validation.HasError), UpdateSourceTrigger=PropertyChanged, ElementName=TxtUdpPortWifi}" Value="False" />
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="IsEnabled" Value="True" />
                                            </MultiDataTrigger>
                                            <DataTrigger Binding="{Binding IsTextChangedWifiPort, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Value="True">
                                                <Setter Property="Background" Value="Red" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Button.Style>
                            </Button>
                            <TextBlock
                                Grid.Row="13"
                                Grid.Column="2"
                                Margin="0,0,0,-16"
                                HorizontalAlignment="Right"
                                VerticalAlignment="Bottom"
                                FontSize="9"
                                Foreground="White"
                                Text="{x:Static p:Resources.Press_the_button_to_apply_the_changes}"
                                TextWrapping="NoWrap">
                                <TextBlock.Style>
                                    <Style TargetType="{x:Type TextBlock}">
                                        <Setter Property="Visibility" Value="Hidden" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsTextChangedWifiPort, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Value="True">
                                                <Setter Property="Visibility" Value="Visible" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>
                        </Grid>
                    </Border>
                    <Border
                        Grid.Row="1"
                        Grid.Column="0"
                        Height="440"
                        Margin="8,8,4,4"
                        VerticalAlignment="Top"
                        Background="{StaticResource TundoraBillson}">
                        <Border.Effect>
                            <DropShadowEffect BlurRadius="4" ShadowDepth="0" />
                        </Border.Effect>
                    </Border>
                    <Border
                        Grid.Row="1"
                        Grid.Column="0"
                        Margin="8,8,4,4"
                        Padding="16,16,16,0"
                        VerticalAlignment="Top"
                        Background="{StaticResource TundoraBillson}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" MinWidth="100" />
                                <ColumnDefinition Width="16" />
                                <ColumnDefinition Width="*" MinWidth="100" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <AdornerDecorator Grid.Row="3" Grid.Column="2">
                                <TextBox
                                    x:Name="TxtMacAddressEthernet"
                                    Grid.Row="0"
                                    Margin="0,8,0,0"
                                    VerticalAlignment="Top"
                                    materialDesign:HintAssist.FloatingScale="0.90"
                                    materialDesign:HintAssist.Hint="{x:Static p:Resources.Mac_Address_Ethernet}"
                                    materialDesign:TextFieldAssist.HasClearButton="True"
                                    materialDesign:TextFieldAssist.TextBoxViewMargin="1 0 1 0"
                                    materialDesign:ValidationAssist.Background="{StaticResource Dark}"
                                    materialDesign:ValidationAssist.OnlyShowOnFocus="True"
                                    materialDesign:ValidationAssist.PopupPlacement="Right"
                                    Foreground="{StaticResource MaterialDesignDarkForeground}"
                                    IsEnabled="False"
                                    MaxLength="17">
                                    <TextBox.Text>
                                        <Binding
                                            Mode="TwoWay"
                                            Path="SelectedProjectModel.SelectedGateway.MacAddressEthernet"
                                            UpdateSourceTrigger="PropertyChanged"
                                            ValidatesOnDataErrors="True" />
                                    </TextBox.Text>
                                    <TextBox.Style>
                                        <Style BasedOn="{StaticResource MaterialDesignFilledTextBox}" TargetType="TextBox">
                                            <Setter Property="IsEnabled" Value="False" />
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding SelectedProjectModel.SelectedGateway.SelectedIndexIPTypeEthernet}" Value="1">
                                                    <Setter Property="IsEnabled" Value="True" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBox.Style>
                                </TextBox>
                            </AdornerDecorator>
                            <AdornerDecorator Grid.Row="4" Grid.Column="2">
                                <TextBox
                                    x:Name="TxtTCPPortEthernet"
                                    Margin="0,8,0,0"
                                    VerticalAlignment="Top"
                                    materialDesign:HintAssist.FloatingScale="0.90"
                                    materialDesign:HintAssist.Hint="{x:Static p:Resources.Ethernet_TCP_port}"
                                    materialDesign:TextFieldAssist.HasClearButton="True"
                                    materialDesign:TextFieldAssist.TextBoxViewMargin="1 0 1 0"
                                    materialDesign:ValidationAssist.Background="{StaticResource Dark}"
                                    materialDesign:ValidationAssist.OnlyShowOnFocus="True"
                                    Foreground="{StaticResource MaterialDesignDarkForeground}"
                                    MaxLength="5"
                                    Style="{StaticResource MaterialDesignFilledTextBox}"
                                    Tag="EthernetPort">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="TextChanged">
                                            <i:InvokeCommandAction Command="{Binding TextChangedCommand}" CommandParameter="{Binding ElementName=TxtTCPPortEthernet}" />
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                    <TextBox.Text>
                                        <Binding
                                            Mode="TwoWay"
                                            Path="SelectedProjectModel.SelectedGateway.TcpPortEthernet"
                                            UpdateSourceTrigger="PropertyChanged">
                                            <Binding.ValidationRules>
                                                <validator:PortValidationRule
                                                    Min="1"
                                                    RangeEnd="65535"
                                                    RangeInit="1"
                                                    TextMinError="The Port must be at least 1 characters"
                                                    TextNumberInvalid="Only numbers"
                                                    TextRangeError="Invalid Port number."
                                                    ValidatesOnTargetUpdated="True" />
                                            </Binding.ValidationRules>
                                        </Binding>
                                    </TextBox.Text>
                                </TextBox>
                            </AdornerDecorator>
                            <AdornerDecorator Grid.Row="5" Grid.Column="2">
                                <TextBox
                                    x:Name="TxtUDPPortEthernet"
                                    Margin="0,8"
                                    VerticalAlignment="Top"
                                    materialDesign:HintAssist.FloatingScale="0.90"
                                    materialDesign:HintAssist.Hint="{x:Static p:Resources.Ethernet_UDP_port}"
                                    materialDesign:TextFieldAssist.HasClearButton="True"
                                    materialDesign:TextFieldAssist.TextBoxViewMargin="1 0 1 0"
                                    materialDesign:ValidationAssist.Background="{StaticResource Dark}"
                                    materialDesign:ValidationAssist.OnlyShowOnFocus="True"
                                    Foreground="{StaticResource MaterialDesignDarkForeground}"
                                    MaxLength="5"
                                    Style="{StaticResource MaterialDesignFilledTextBox}"
                                    Tag="EthernetPort">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="TextChanged">
                                            <i:InvokeCommandAction Command="{Binding TextChangedCommand}" CommandParameter="{Binding ElementName=TxtUDPPortEthernet}" />
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                    <TextBox.Text>
                                        <Binding
                                            Mode="TwoWay"
                                            Path="SelectedProjectModel.SelectedGateway.UdpPortEthernet"
                                            UpdateSourceTrigger="PropertyChanged"
                                            ValidatesOnDataErrors="True">
                                            <Binding.ValidationRules>
                                                <validator:PortValidationRule
                                                    Min="1"
                                                    RangeEnd="65535"
                                                    RangeInit="1"
                                                    TextMinError="The Port must be at least 1 characters"
                                                    TextNumberInvalid="Only numbers"
                                                    TextRangeError="Invalid Port number."
                                                    ValidatesOnTargetUpdated="True" />
                                            </Binding.ValidationRules>
                                        </Binding>
                                    </TextBox.Text>
                                </TextBox>
                            </AdornerDecorator>
                            <Button
                                x:Name="BtnSetPorts"
                                Grid.Row="6"
                                Grid.Column="2"
                                Margin="0,16"
                                HorizontalAlignment="Right"
                                VerticalAlignment="Top"
                                materialDesign:ButtonProgressAssist.IndicatorBackground="Transparent"
                                materialDesign:ButtonProgressAssist.IndicatorForeground="Black"
                                materialDesign:ButtonProgressAssist.IsIndeterminate="{Binding IsTextChangedEthernetPort}"
                                materialDesign:ButtonProgressAssist.IsIndicatorVisible="{Binding IsTextChangedEthernetPort}"
                                materialDesign:ButtonProgressAssist.Value="-1"
                                BorderThickness="0"
                                Command="{Binding ApplyEthernetPortCommand}"
                                Content="{x:Static p:Resources._Save}"
                                FocusVisualStyle="{x:Null}">
                                <Button.Style>
                                    <Style BasedOn="{StaticResource SaveButton}" TargetType="Button">
                                        <Setter Property="IsEnabled" Value="False" />
                                        <Style.Triggers>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding Path=(Validation.HasError), UpdateSourceTrigger=PropertyChanged, ElementName=TxtTCPPortEthernet}" Value="False" />
                                                    <Condition Binding="{Binding Path=(Validation.HasError), UpdateSourceTrigger=PropertyChanged, ElementName=TxtUDPPortEthernet}" Value="False" />
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="IsEnabled" Value="True" />
                                            </MultiDataTrigger>
                                            <DataTrigger Binding="{Binding IsTextChangedEthernetPort, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Value="True">
                                                <Setter Property="Background" Value="Red" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Button.Style>
                            </Button>
                            <TextBlock
                                Grid.Row="6"
                                Grid.Column="2"
                                Margin="0,0,0,-16"
                                HorizontalAlignment="Right"
                                VerticalAlignment="Bottom"
                                FontSize="9"
                                Foreground="White"
                                Text="{x:Static p:Resources.Press_the_button_to_apply_the_changes}"
                                TextWrapping="NoWrap">
                                <TextBlock.Style>
                                    <Style TargetType="{x:Type TextBlock}">
                                        <Setter Property="Visibility" Value="Hidden" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsTextChangedEthernetPort, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Value="True">
                                                <Setter Property="Visibility" Value="Visible" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>
                            <TextBlock
                                Grid.Row="0"
                                Grid.Column="0"
                                Foreground="{StaticResource MaterialDesignDarkForeground}"
                                Style="{StaticResource MaterialDesignHeadline6TextBlock}"
                                Text="{x:Static p:Resources.Ethernet}" />
                            <ComboBox
                                Grid.Row="1"
                                Grid.Column="0"
                                Width="86"
                                Margin="0,8,0,0"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Center"
                                materialDesign:HintAssist.Hint="{x:Static p:Resources.Type_IP}"
                                materialDesign:ThemeAssist.Theme="Dark"
                                FocusVisualStyle="{x:Null}"
                                Foreground="{StaticResource MaterialDesignDarkForeground}"
                                ItemsSource="{Binding Source={StaticResource ipType}}"
                                SelectedIndex="{Binding SelectedProjectModel.SelectedGateway.SelectedIndexIPTypeEthernet}"
                                Style="{StaticResource MaterialDesignFloatingHintComboBox}">
                                <ComboBox.ItemTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding Converter={StaticResource enumComboboxConverter}}" />
                                    </DataTemplate>
                                </ComboBox.ItemTemplate>
                            </ComboBox>
                            <AdornerDecorator Grid.Row="2" Grid.Column="0">
                                <TextBox
                                    x:Name="TxtCurrentIpEthernet"
                                    Grid.Row="0"
                                    Margin="0,16"
                                    VerticalAlignment="Top"
                                    materialDesign:HintAssist.FloatingScale="0.90"
                                    materialDesign:HintAssist.Hint="{x:Static p:Resources.Current_IP_Ethernet}"
                                    materialDesign:TextFieldAssist.HasClearButton="True"
                                    materialDesign:TextFieldAssist.TextBoxViewMargin="1 0 1 0"
                                    materialDesign:ValidationAssist.Background="{StaticResource Dark}"
                                    materialDesign:ValidationAssist.OnlyShowOnFocus="True"
                                    materialDesign:ValidationAssist.PopupPlacement="Right"
                                    Foreground="{StaticResource MaterialDesignDarkForeground}"
                                    IsEnabled="False"
                                    MaxLength="15">
                                    <TextBox.Text>
                                        <Binding
                                            Mode="TwoWay"
                                            Path="SelectedProjectModel.SelectedGateway.CurrentIpEthernet"
                                            UpdateSourceTrigger="PropertyChanged"
                                            ValidatesOnDataErrors="True" />
                                    </TextBox.Text>
                                    <TextBox.Style>
                                        <Style BasedOn="{StaticResource MaterialDesignFilledTextBox}" TargetType="TextBox">
                                            <Setter Property="IsEnabled" Value="False" />
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding SelectedProjectModel.SelectedGateway.SelectedIndexIPTypeEthernet}" Value="1">
                                                    <Setter Property="IsEnabled" Value="True" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBox.Style>
                                </TextBox>
                            </AdornerDecorator>
                            <AdornerDecorator Grid.Row="3" Grid.Column="0">
                                <TextBox
                                    x:Name="TxtStaticIPEthernet"
                                    Margin="0,8,0,16"
                                    VerticalAlignment="Top"
                                    materialDesign:HintAssist.FloatingScale="0.90"
                                    materialDesign:HintAssist.Hint="{x:Static p:Resources.IP_Ethernet}"
                                    materialDesign:TextFieldAssist.HasClearButton="True"
                                    materialDesign:TextFieldAssist.TextBoxViewMargin="1 0 1 0"
                                    materialDesign:ValidationAssist.Background="{StaticResource Dark}"
                                    materialDesign:ValidationAssist.OnlyShowOnFocus="True"
                                    materialDesign:ValidationAssist.PopupPlacement="Right"
                                    Foreground="{StaticResource MaterialDesignDarkForeground}"
                                    MaxLength="15"
                                    Tag="EthernetIP">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="TextChanged">
                                            <i:InvokeCommandAction Command="{Binding TextChangedCommand}" CommandParameter="{Binding ElementName=TxtStaticIPEthernet}" />
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                    <TextBox.Text>
                                        <Binding
                                            Mode="TwoWay"
                                            Path="SelectedProjectModel.SelectedGateway.StaticIPEthernet"
                                            UpdateSourceTrigger="PropertyChanged"
                                            ValidatesOnDataErrors="True">
                                            <Binding.ValidationRules>
                                                <validator:RegexValidateRule
                                                    Expression="^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-4])$"
                                                    TextError="IP invalid"
                                                    ValidatesOnTargetUpdated="True" />
                                            </Binding.ValidationRules>
                                        </Binding>
                                    </TextBox.Text>
                                    <TextBox.Style>
                                        <Style BasedOn="{StaticResource MaterialDesignFilledTextBox}" TargetType="TextBox">
                                            <Setter Property="IsEnabled" Value="False" />
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding SelectedProjectModel.SelectedGateway.SelectedIndexIPTypeEthernet}" Value="1">
                                                    <Setter Property="IsEnabled" Value="True" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBox.Style>
                                </TextBox>
                            </AdornerDecorator>
                            <AdornerDecorator Grid.Row="4" Grid.Column="0">
                                <TextBox
                                    x:Name="TxtRouterGatewayEthernet"
                                    Margin="0,8,0,16"
                                    VerticalAlignment="Top"
                                    materialDesign:HintAssist.FloatingScale="0.90"
                                    materialDesign:HintAssist.Hint="Router/Gateway Ethernet"
                                    materialDesign:TextFieldAssist.HasClearButton="True"
                                    materialDesign:TextFieldAssist.TextBoxViewMargin="1 0 1 0"
                                    materialDesign:ValidationAssist.Background="{StaticResource Dark}"
                                    materialDesign:ValidationAssist.OnlyShowOnFocus="True"
                                    Foreground="{StaticResource MaterialDesignDarkForeground}"
                                    MaxLength="15"
                                    Tag="EthernetIP">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="TextChanged">
                                            <i:InvokeCommandAction Command="{Binding TextChangedCommand}" CommandParameter="{Binding ElementName=TxtRouterGatewayEthernet}" />
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                    <TextBox.Style>
                                        <Style BasedOn="{StaticResource MaterialDesignFilledTextBox}" TargetType="TextBox">
                                            <Setter Property="IsEnabled" Value="False" />
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding SelectedProjectModel.SelectedGateway.SelectedIndexIPTypeEthernet}" Value="1">
                                                    <Setter Property="IsEnabled" Value="True" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBox.Style>
                                    <TextBox.Text>
                                        <Binding
                                            Mode="TwoWay"
                                            Path="SelectedProjectModel.SelectedGateway.RouterGatewayEthernet"
                                            UpdateSourceTrigger="PropertyChanged"
                                            ValidatesOnDataErrors="True">
                                            <Binding.ValidationRules>
                                                <validator:RegexValidateRule
                                                    Expression="^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$"
                                                    TextError="Router Gateway invalid"
                                                    ValidatesOnTargetUpdated="True" />
                                            </Binding.ValidationRules>
                                        </Binding>
                                    </TextBox.Text>
                                </TextBox>
                            </AdornerDecorator>
                            <AdornerDecorator Grid.Row="5" Grid.Column="0">
                                <TextBox
                                    x:Name="TxtMaskEthernet"
                                    Margin="0,8,0,8"
                                    VerticalAlignment="Top"
                                    materialDesign:HintAssist.FloatingScale="0.90"
                                    materialDesign:HintAssist.Hint="{x:Static p:Resources.Mask_Ethernet}"
                                    materialDesign:TextFieldAssist.HasClearButton="True"
                                    materialDesign:TextFieldAssist.TextBoxViewMargin="1 0 1 0"
                                    materialDesign:ValidationAssist.Background="{StaticResource Dark}"
                                    materialDesign:ValidationAssist.OnlyShowOnFocus="True"
                                    Foreground="{StaticResource MaterialDesignDarkForeground}"
                                    MaxLength="15"
                                    Tag="EthernetIP">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="TextChanged">
                                            <i:InvokeCommandAction Command="{Binding TextChangedCommand}" CommandParameter="{Binding ElementName=TxtMaskEthernet}" />
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                    <TextBox.Style>
                                        <Style BasedOn="{StaticResource MaterialDesignFilledTextBox}" TargetType="TextBox">
                                            <Setter Property="IsEnabled" Value="False" />
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding SelectedProjectModel.SelectedGateway.SelectedIndexIPTypeEthernet}" Value="1">
                                                    <Setter Property="IsEnabled" Value="True" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBox.Style>
                                    <TextBox.Text>
                                        <Binding
                                            Mode="TwoWay"
                                            NotifyOnValidationError="True"
                                            Path="SelectedProjectModel.SelectedGateway.MaskEthernet"
                                            UpdateSourceTrigger="PropertyChanged"
                                            ValidatesOnDataErrors="True"
                                            ValidatesOnExceptions="True">
                                            <Binding.ValidationRules>
                                                <validator:RegexValidateRule
                                                    Expression="^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$"
                                                    TextError="Mask invalid"
                                                    ValidatesOnTargetUpdated="True" />
                                            </Binding.ValidationRules>
                                        </Binding>
                                    </TextBox.Text>
                                </TextBox>
                            </AdornerDecorator>

                            <Button
                                Grid.Row="6"
                                Grid.Column="0"
                                Margin="0,16"
                                HorizontalAlignment="Right"
                                VerticalAlignment="Top"
                                materialDesign:ButtonProgressAssist.IndicatorBackground="Transparent"
                                materialDesign:ButtonProgressAssist.IndicatorForeground="Black"
                                materialDesign:ButtonProgressAssist.IsIndeterminate="{Binding IsTextChangedEthernetIp}"
                                materialDesign:ButtonProgressAssist.IsIndicatorVisible="{Binding IsTextChangedEthernetIp}"
                                materialDesign:ButtonProgressAssist.Value="-1"
                                BorderThickness="0"
                                Command="{Binding ApplyEthernetCommand}"
                                Content="{x:Static p:Resources._Save}"
                                FocusVisualStyle="{x:Null}">
                                <Button.Style>
                                    <Style BasedOn="{StaticResource SaveButton}" TargetType="Button">
                                        <Setter Property="IsEnabled" Value="False" />
                                        <Style.Triggers>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding Path=(Validation.HasError), UpdateSourceTrigger=PropertyChanged, ElementName=TxtStaticIPEthernet}" Value="False" />
                                                    <Condition Binding="{Binding Path=(Validation.HasError), UpdateSourceTrigger=PropertyChanged, ElementName=TxtRouterGatewayEthernet}" Value="False" />
                                                    <Condition Binding="{Binding Path=(Validation.HasError), UpdateSourceTrigger=PropertyChanged, ElementName=TxtMaskEthernet}" Value="False" />
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="IsEnabled" Value="True" />
                                            </MultiDataTrigger>
                                            <DataTrigger Binding="{Binding IsTextChangedEthernetIp, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Value="True">
                                                <Setter Property="Background" Value="Red" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Button.Style>
                            </Button>
                            <TextBlock
                                Grid.Row="6"
                                Margin="0,0,0,-16"
                                HorizontalAlignment="Right"
                                VerticalAlignment="Bottom"
                                FontSize="9"
                                Foreground="White"
                                Text="{x:Static p:Resources.Press_the_button_to_apply_the_changes}"
                                TextWrapping="NoWrap">
                                <TextBlock.Style>
                                    <Style TargetType="{x:Type TextBlock}">
                                        <Setter Property="Visibility" Value="Hidden" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsTextChangedEthernetIp, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Value="True">
                                                <Setter Property="Visibility" Value="Visible" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>
                        </Grid>
                    </Border>
                </Grid>
            </ScrollViewer>
            <Border Grid.Row="0" Style="{DynamicResource BorderMenu}" />
            <Menu
                Grid.Row="0"
                VerticalAlignment="Stretch"
                materialDesign:ThemeAssist.Theme="Dark"
                Background="{StaticResource CodGrayBillson}"
                Cursor="Hand"
                IsMainMenu="True"
                Style="{StaticResource MaterialDesignMenuBillson}">
                <MenuItem Command="{Binding SyncGatewayCommand}" Header="{x:Static p:Resources._Sync}" />
                <MenuItem Command="{Binding RebootCommand}" Header="{x:Static p:Resources._Reboot}" />
            </Menu>
            <materialDesign:Snackbar
                Grid.Row="1"
                Height="54"
                Margin="0,-2,0,0"
                HorizontalAlignment="Center"
                VerticalAlignment="Top"
                Background="Black"
                IsActive="{Binding IsActiveSnackbar}">
                <materialDesign:Snackbar.Effect>
                    <DropShadowEffect BlurRadius="4" ShadowDepth="0" />
                </materialDesign:Snackbar.Effect>
                <materialDesign:SnackbarMessage
                    ActionCommand="{Binding ActionSnackbarCommand}"
                    ActionContent="{Binding ActionContentSnackbar}"
                    Content="{Binding ContentSnackbar}"
                    Foreground="White" />
            </materialDesign:Snackbar>
        </Grid>
    </materialDesign:DialogHost>
</UserControl>