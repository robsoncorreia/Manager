<Application
    x:Class="FC.Manager.App"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:c="clr-namespace:FC.Domain.Converte;assembly=FC.Domain"
    xmlns:c11="clr-namespace:FC.Manager.Converte"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:d1p1="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:p="clr-namespace:FC.Domain.Properties;assembly=FC.Domain"
    xmlns:s="clr-namespace:System;assembly=mscorlib"
    xmlns:sys="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:vm="clr-namespace:FC.Manager.ViewModel"
    d1p1:Ignorable="d"
    ShutdownMode="OnMainWindowClose"
    Startup="AppStartup"
    StartupUri="View/MainWindow.xaml">
    <Application.Resources>
        <ResourceDictionary>
            <vm:ViewModelLocator x:Key="Locator" />
            <!--#region Font Family-->
            <FontFamily x:Key="7SegFontFamily">/FC.Manager;Component/Fonts/#NI7Seg</FontFamily>
            <!--#endregion Font Family-->
            <!--#region Converter-->
            <c11:ZwaveDeviceToViewIfConverter x:Key="zwaveDeviceToViewConverter" />
            <c11:ZwaveDeviceToViewThenElseConverter x:Key="zwaveDeviceToViewThenElseConverter" />
            <c:IsStringNullOrEmptyConverter x:Key="isNull" />
            <c:TemperatureConverter x:Key="temperatureConverter" />
            <c:CurrentOffSetConverter x:Key="currentOffSetConverter" />
            <c:EnumToNameConverter x:Key="enumComboboxConverter" />
            <c:ZeroToNull x:Key="zeroToNull" />
            <c:ImageByteToSource x:Key="imageByteToSource" />
            <c:Conversor x:Key="conversor" />
            <c:DateToHours x:Key="dateToHours" />
            <c:NegateBooleanConverter x:Key="negate" />
            <c:ValueToBoolean x:Key="valueToBoolean" />
            <c:EnumDescriptionConverter x:Key="enumDescriptionConverter" />
            <c:ParseUserToObjectConverter x:Key="parseUserToObjectConverter" />
            <c:MultiValueEqualityConverter x:Key="multiValueEqualityConverter" />
            <c:IntToCommandClassConverter x:Key="intToZwaveCommandClassConvert" />
            <c:IntToGenericClassConverter x:Key="intToGenericClassConverter" />
            <c:IntToBasicDeviceClassConverter x:Key="intToBasicDeviceClassConverter" />
            <c:IntToGenericDeviceClass x:Key="intToGenericDeviceClass" />
            <c:IntToSpecificDeviceClassConverter x:Key="intToSpecificDeviceClassConverter" />
            <c:MaxRegisterConverter x:Key="maxRegisterConverter" />
            <c:ParseObjectToObjectConverter x:Key="parseObjectToObjectConverter" />
            <c:NullImageConverter x:Key="nullImageConverter" />
            <c:DevicesImageConverter x:Key="devicesImageConverter" />
            <!--#endregion Converter-->
            <!--#region Values-->
            <sys:GridLength x:Key="headerHeight">56</sys:GridLength>
            <s:Boolean x:Key="True">True</s:Boolean>
            <s:Boolean x:Key="False">False</s:Boolean>
            <s:Int32 x:Key="IntNo-1">-1</s:Int32>
            <!--#endregion Values-->
            <!--#region Colors-->
            <Color x:Key="WindowColor">#FFE8EDF9</Color>
            <Color x:Key="ContentAreaColorLight">#FFC5CBF9</Color>
            <Color x:Key="ContentAreaColorDark">#FF7381F9</Color>
            <Color x:Key="DisabledControlLightColor">#FFE8EDF9</Color>
            <Color x:Key="DisabledControlDarkColor">#FFC5CBF9</Color>
            <Color x:Key="DisabledForegroundColor">#FF888888</Color>
            <Color x:Key="SelectedBackgroundColor">#FFC5CBF9</Color>
            <Color x:Key="SelectedUnfocusedColor">#FFDDDDDD</Color>
            <Color x:Key="ControlLightColor">White</Color>
            <Color x:Key="ControlMediumColor">#FF7381F9</Color>
            <Color x:Key="ControlDarkColor">#FF211AA9</Color>
            <Color x:Key="ControlMouseOverColor">#FF3843C4</Color>
            <Color x:Key="ControlPressedColor">#FF211AA9</Color>
            <Color x:Key="GlyphColor">#FF444444</Color>
            <SolidColorBrush x:Key="defaultBackground" Color="#80000000" />
            <Color x:Key="GlyphMouseOver">sc#1, 0.004391443, 0.002428215, 0.242281124</Color>
            <!--#endregion Colors-->
            <!--#region Border colors-->
            <Color x:Key="BorderLightColor">#FFCCCCCC</Color>
            <Color x:Key="BorderMediumColor">#FF888888</Color>
            <Color x:Key="BorderDarkColor">#FF444444</Color>
            <Color x:Key="PressedBorderLightColor">#FF888888</Color>
            <Color x:Key="PressedBorderDarkColor">#FF444444</Color>
            <Color x:Key="DisabledBorderLightColor">#FFAAAAAA</Color>
            <Color x:Key="DisabledBorderDarkColor">#FF888888</Color>
            <Color x:Key="DefaultBorderBrushDarkColor">Black</Color>
            <!--#endregion Border colors-->
            <!--#region Custom Colors-->
            <SolidColorBrush x:Key="ClosestWebSafe" Color="#333333" />
            <SolidColorBrush x:Key="MatteCharcoal" Color="#3B4248" />
            <SolidColorBrush x:Key="VividGamboge" Color="#FF9900" />
            <SolidColorBrush x:Key="Regalia" Color="#503583" />
            <SolidColorBrush x:Key="Umber" Color="#5D4A44  " />
            <SolidColorBrush x:Key="MaximumGreen" Color="#688335  " />
            <SolidColorBrush x:Key="SeaSerpent" Color="#60BBD0 " />
            <SolidColorBrush x:Key="DarkCerulean" Color="#0F4C81" />
            <SolidColorBrush x:Key="PastelGreen" Color="#46663f" />
            <SolidColorBrush x:Key="RobinEggBlue" Color="#a0d995" />
            <SolidColorBrush x:Key="Byzantium" Color="#6F295B " />
            <SolidColorBrush x:Key="Mantis" Color="#66CC66" />
            <SolidColorBrush x:Key="AmericanRed" Color="#B31942" />
            <SolidColorBrush x:Key="FireEngineRed" Color="#CF202A" />
            <SolidColorBrush x:Key="LightPink" Color="#ffa8b8" />
            <SolidColorBrush x:Key="SweetCherry" Color="#DD6484" />
            <SolidColorBrush x:Key="BlizzardBlue" Color="#b5dcf9" />
            <SolidColorBrush x:Key="ChathamsBlueBillson" Color="#104A85" />
            <SolidColorBrush x:Key="ElegantBlue" Color="#19437D" />
            <SolidColorBrush x:Key="DenimBillson" Color="#1667B8" />
            <SolidColorBrush x:Key="BigStoneBillson" Color="#182838" />
            <SolidColorBrush x:Key="DriftwoodBillson" Color="#B68348" />
            <SolidColorBrush x:Key="MineShaftBillson" Color="#303030" />
            <SolidColorBrush x:Key="CodGrayBillson" Color="#303030" />
            <!--#endregion Custom Colors-->
            <!--#region ContextMenu-->
            <Style BasedOn="{StaticResource MaterialDesignMenu}" TargetType="{x:Type ContextMenu}">
                <Setter Property="Background" Value="{StaticResource MaterialDesignDarkBackground}" />
            </Style>
            <!--#endregion ContextMenu-->
            <!--#region Menu Style-->
            <Style
                x:Key="MaterialDesignMenuBillson"
                BasedOn="{StaticResource MaterialDesignMenu}"
                TargetType="{x:Type Menu}">
                <Setter Property="Height" Value="48" />
                <Setter Property="Background" Value="{StaticResource MaterialDesignDarkBackground}" />
            </Style>
            <Style
                x:Key="menuDefault"
                BasedOn="{StaticResource MaterialDesignMenu}"
                TargetType="{x:Type Menu}">
                <Setter Property="Effect">
                    <Setter.Value>
                        <DropShadowEffect BlurRadius="4" ShadowDepth="0" />
                    </Setter.Value>
                </Setter>
            </Style>
            <!--#endregion Menu Style-->
            <Style
                x:Key="MaterialDesignMenuItemBillson"
                BasedOn="{StaticResource MaterialDesignMenuItem}"
                TargetType="{x:Type MenuItem}">
                <Setter Property="Height" Value="48" />
            </Style>
            <!--#region  ListBoxItem Style-->
            <Style
                x:Key="withoutStyle"
                BasedOn="{StaticResource {x:Type ListBoxItem}}"
                TargetType="{x:Type ListBoxItem}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ListBoxItem}">
                            <Border
                                x:Name="Bd"
                                Padding="{TemplateBinding Padding}"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                SnapsToDevicePixels="True">
                                <ContentPresenter
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    Content="{TemplateBinding Content}"
                                    ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                    ContentTemplate="{TemplateBinding ContentTemplate}"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsMouseOver" Value="True" />
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="Bd" Property="Background" Value="Transparent" />
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="Selector.IsSelectionActive" Value="False" />
                                        <Condition Property="IsSelected" Value="True" />
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="Bd" Property="Background" Value="Transparent" />
                                    <Setter TargetName="Bd" Property="BorderBrush" Value="Transparent" />
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="Selector.IsSelectionActive" Value="True" />
                                        <Condition Property="IsSelected" Value="True" />
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="Bd" Property="Background" Value="Transparent" />
                                    <Setter TargetName="Bd" Property="BorderBrush" Value="Transparent" />
                                </MultiTrigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="Bd" Property="TextElement.Foreground" Value="Transparent" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <!--#endregion-->
            <!--#region TextBlock Style-->
            <Style TargetType="{x:Type TextBox}">
                <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                <Setter Property="Focusable" Value="False" />
            </Style>
            <Style x:Key="MaterialDesignSubheadingTextBlock" TargetType="{x:Type TextBlock}" />
            <Style x:Key="MaterialDesignHeadlineTextBlock" TargetType="{x:Type TextBlock}" />
            <Style x:Key="MaterialDesignTitleTextBlock" TargetType="{x:Type TextBlock}" />
            <!--#endregion TextBlock Style-->
            <!--#region DataTemplate-->
            <DataTemplate x:Key="user">
                <Grid>
                    <Border Background="Black">
                        <Border.Effect>
                            <DropShadowEffect
                                BlurRadius="8"
                                Direction="0"
                                ShadowDepth="0" />
                        </Border.Effect>
                    </Border>
                    <Border
                        Width="144"
                        materialDesign:ThemeAssist.Theme="Dark"
                        Background="{StaticResource TundoraBillson}"
                        CornerRadius="2"
                        Cursor="Hand"
                        ToolTip="{Binding Path=ParseUser, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource parseUserToObjectConverter}, ConverterParameter=username}">
                        <Grid>
                            <StackPanel Margin="16">
                                <Image
                                    Grid.Row="0"
                                    Grid.RowSpan="3"
                                    Grid.Column="0"
                                    Width="48"
                                    Height="48"
                                    Margin="0,0,8,0"
                                    HorizontalAlignment="Center"
                                    Stretch="UniformToFill">
                                    <Image.Clip>
                                        <RectangleGeometry
                                            RadiusX="90"
                                            RadiusY="90"
                                            Rect="0,0,48,48" />
                                    </Image.Clip>
                                    <Image.Style>
                                        <Style TargetType="{x:Type Image}">
                                            <Setter Property="Source" Value="{Binding Path=ParseUser, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource parseUserToObjectConverter}, ConverterParameter=picture}" />
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Path=ParseUser, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource parseUserToObjectConverter}, ConverterParameter=picture}" Value="{x:Null}">
                                                    <Setter Property="Source" Value="/FC.Domain;component/Assets/User/user.png" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Image.Style>
                                </Image>
                                <Separator Style="{StaticResource MaterialDesignDarkSeparator}" />
                                <TextBlock
                                    HorizontalAlignment="Left"
                                    FontSize="12"
                                    FontWeight="DemiBold"
                                    Foreground="{StaticResource MaterialDesignDarkForeground}"
                                    Text="{Binding Path=ParseUser, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource parseUserToObjectConverter}, ConverterParameter=username}"
                                    TextTrimming="CharacterEllipsis" />
                                <TextBlock
                                    FontSize="10"
                                    Foreground="White"
                                    Opacity=".5"
                                    Text="{x:Static p:Resources.User_Name}" />
                                <StackPanel Margin="0,4,0,0" Orientation="Horizontal">
                                    <TextBlock
                                        HorizontalAlignment="Right"
                                        FontSize="10"
                                        Foreground="{StaticResource MaterialDesignToolForeground}"
                                        Text="{x:Static p:Resources.Create_At}" />
                                    <TextBlock
                                        Margin="8,0,0,0"
                                        HorizontalAlignment="Right"
                                        FontSize="10"
                                        Foreground="{StaticResource MaterialDesignToolForeground}"
                                        Text="{Binding ParseUser.CreatedAt, UpdateSourceTrigger=PropertyChanged, StringFormat=dd/MM/yyyy}" />
                                </StackPanel>
                            </StackPanel>
                            <Button
                                Grid.Row="0"
                                Grid.RowSpan="2"
                                Grid.Column="2"
                                Margin="0,8,8,0"
                                HorizontalAlignment="Right"
                                VerticalAlignment="Top"
                                Command="{Binding RelativeSource={RelativeSource AncestorType=ListBox, Mode=FindAncestor}, Path=DataContext.RemoveUserCommand}"
                                FocusVisualStyle="{x:Null}">
                                <materialDesign:PackIcon Kind="Delete" />
                                <Button.Style>
                                    <Style BasedOn="{StaticResource MaterialDesignFloatingActionMiniAccentButton}" TargetType="{x:Type Button}">
                                        <Setter Property="Visibility" Value="Collapsed" />
                                        <Setter Property="Opacity" Value=".8" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Border, Mode=FindAncestor}, Path=IsMouseOver}" Value="True">
                                                <Setter Property="Visibility" Value="Visible" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Button.Style>
                                <Button.CommandParameter>
                                    <MultiBinding Converter="{StaticResource conversor}">
                                        <Binding Path="." />
                                        <Binding Path="Name" RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type ListBox}}" />
                                    </MultiBinding>
                                </Button.CommandParameter>
                            </Button>
                        </Grid>
                    </Border>
                </Grid>
            </DataTemplate>
            <DataTemplate x:Key="userDefault">
                <Grid>
                    <Border Background="Black">
                        <Border.Effect>
                            <DropShadowEffect ShadowDepth="2" />
                        </Border.Effect>
                    </Border>
                    <Border
                        Width="144"
                        materialDesign:ThemeAssist.Theme="Dark"
                        Background="{StaticResource TundoraBillson}"
                        BorderBrush="Black"
                        BorderThickness="0"
                        CornerRadius="2"
                        Cursor="Hand"
                        ToolTip="{Binding Path=ParseUser, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource parseUserToObjectConverter}, ConverterParameter=username}">
                        <StackPanel Margin="16">
                            <Image
                                Grid.Row="0"
                                Grid.RowSpan="3"
                                Grid.Column="0"
                                Width="48"
                                Height="48"
                                Margin="0,0,8,0"
                                HorizontalAlignment="Center"
                                Stretch="UniformToFill">
                                <Image.Clip>
                                    <RectangleGeometry
                                        RadiusX="90"
                                        RadiusY="90"
                                        Rect="0,0,48,48" />
                                </Image.Clip>
                                <Image.Style>
                                    <Style TargetType="{x:Type Image}">
                                        <Setter Property="Source" Value="{Binding Path=ParseUser, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource parseUserToObjectConverter}, ConverterParameter=picture}" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Path=ParseUser, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource parseUserToObjectConverter}, ConverterParameter=picture}" Value="{x:Null}">
                                                <Setter Property="Source" Value="/FC.Domain;component/Assets/User/user.png" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Image.Style>
                            </Image>
                            <Separator Style="{StaticResource MaterialDesignDarkSeparator}" />
                            <TextBlock
                                HorizontalAlignment="Left"
                                FontSize="12"
                                FontWeight="DemiBold"
                                Foreground="{StaticResource MaterialDesignDarkForeground}"
                                Text="{Binding Path=ParseUser, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource parseUserToObjectConverter}, ConverterParameter=username}"
                                TextTrimming="CharacterEllipsis" />
                            <TextBlock
                                FontSize="10"
                                Foreground="White"
                                Opacity=".5"
                                Text="{x:Static p:Resources.User_Name}" />
                            <StackPanel Margin="0,4,0,0" Orientation="Horizontal">
                                <TextBlock
                                    HorizontalAlignment="Right"
                                    FontSize="10"
                                    Foreground="{StaticResource MaterialDesignToolForeground}"
                                    Text="{x:Static p:Resources.Created_At}" />
                                <TextBlock
                                    Margin="8,0,0,0"
                                    HorizontalAlignment="Right"
                                    FontSize="10"
                                    Foreground="{StaticResource MaterialDesignToolForeground}"
                                    Text="{Binding ParseUser.CreatedAt, UpdateSourceTrigger=PropertyChanged, StringFormat=dd/MM/yyyy}" />
                            </StackPanel>
                        </StackPanel>
                    </Border>
                </Grid>
            </DataTemplate>
            <DataTemplate x:Key="userVoice">
                <Grid>
                    <Border Background="Black">
                        <Border.Effect>
                            <DropShadowEffect
                                BlurRadius="8"
                                Direction="0"
                                ShadowDepth="0" />
                        </Border.Effect>
                    </Border>
                    <Border
                        Width="192"
                        materialDesign:ThemeAssist.Theme="Dark"
                        Background="{StaticResource TundoraBillson}"
                        BorderBrush="Black"
                        BorderThickness="1"
                        CornerRadius="2"
                        Cursor="Hand"
                        ToolTip="{Binding Path=ParseUser, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource parseUserToObjectConverter}, ConverterParameter=username}">
                        <Grid>
                            <StackPanel Margin="16">
                                <Image
                                    Grid.Row="0"
                                    Grid.RowSpan="3"
                                    Grid.Column="0"
                                    Width="48"
                                    Height="48"
                                    Margin="0,0,8,0"
                                    HorizontalAlignment="Center"
                                    Stretch="UniformToFill">
                                    <Image.Clip>
                                        <RectangleGeometry
                                            RadiusX="90"
                                            RadiusY="90"
                                            Rect="0,0,48,48" />
                                    </Image.Clip>
                                    <Image.Style>
                                        <Style TargetType="{x:Type Image}">
                                            <Setter Property="Source" Value="{Binding Path=ParseUser, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource parseUserToObjectConverter}, ConverterParameter=picture}" />
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Path=ParseUser, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource parseUserToObjectConverter}, ConverterParameter=picture}" Value="{x:Null}">
                                                    <Setter Property="Source" Value="/FC.Domain;component/Assets/User/user.png" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Image.Style>
                                </Image>
                                <Separator Style="{StaticResource MaterialDesignDarkSeparator}" />
                                <TextBlock
                                    HorizontalAlignment="Left"
                                    FontSize="12"
                                    FontWeight="DemiBold"
                                    Foreground="{StaticResource MaterialDesignDarkForeground}"
                                    Text="{Binding Path=ParseUser, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource parseUserToObjectConverter}, ConverterParameter=username}"
                                    TextTrimming="CharacterEllipsis" />
                                <TextBlock
                                    FontSize="10"
                                    Foreground="White"
                                    Opacity=".5"
                                    Text="{x:Static p:Resources.User_Name}" />
                                <StackPanel Margin="0,4,0,0" Orientation="Horizontal">
                                    <TextBlock
                                        HorizontalAlignment="Right"
                                        FontSize="10"
                                        Foreground="{StaticResource MaterialDesignToolForeground}"
                                        Text="{x:Static p:Resources.Created_At}" />
                                    <TextBlock
                                        Margin="8,0,0,0"
                                        HorizontalAlignment="Right"
                                        FontSize="10"
                                        Foreground="{StaticResource MaterialDesignToolForeground}"
                                        Text="{Binding ParseUser.CreatedAt, UpdateSourceTrigger=PropertyChanged, StringFormat=dd/MM/yyyy}" />
                                </StackPanel>
                                <Separator Style="{StaticResource MaterialDesignDarkSeparator}" />
                                <StackPanel
                                    Grid.Row="3"
                                    Grid.Column="1"
                                    Margin="0,8,0,0"
                                    Orientation="Horizontal">
                                    <StackPanel Orientation="Horizontal">
                                        <TextBlock Foreground="{StaticResource MaterialDesignDarkForeground}" Text="{x:Static p:Resources.Google}" />
                                        <ToggleButton
                                            Margin="8,0"
                                            Command="{Binding RelativeSource={RelativeSource AncestorType=ListBox, Mode=FindAncestor}, Path=DataContext.IsAssistantCommand}"
                                            CommandParameter="{Binding Path=.}"
                                            FocusVisualStyle="{x:Null}"
                                            IsChecked="{Binding IsGoogleAssistant, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" />
                                    </StackPanel>

                                    <StackPanel Orientation="Horizontal">
                                        <TextBlock Foreground="{StaticResource MaterialDesignDarkForeground}" Text="{x:Static p:Resources.Alexa}" />
                                        <ToggleButton
                                            Margin="8,0"
                                            Command="{Binding RelativeSource={RelativeSource AncestorType=ListBox, Mode=FindAncestor}, Path=DataContext.IsAssistantCommand}"
                                            CommandParameter="{Binding Path=.}"
                                            FocusVisualStyle="{x:Null}"
                                            IsChecked="{Binding IsAmazonAssistant, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" />
                                    </StackPanel>
                                </StackPanel>
                            </StackPanel>
                            <Button
                                Grid.Row="0"
                                Grid.RowSpan="2"
                                Grid.Column="2"
                                Margin="0,8,8,0"
                                HorizontalAlignment="Right"
                                VerticalAlignment="Top"
                                Command="{Binding RelativeSource={RelativeSource AncestorType=ListBox, Mode=FindAncestor}, Path=DataContext.RemoveUserCommand}"
                                CommandParameter="{Binding Path=.}"
                                FocusVisualStyle="{x:Null}">
                                <materialDesign:PackIcon Kind="Delete" />
                                <Button.Style>
                                    <Style BasedOn="{StaticResource MaterialDesignFloatingActionMiniAccentButton}" TargetType="{x:Type Button}">
                                        <Setter Property="Visibility" Value="Collapsed" />
                                        <Setter Property="Opacity" Value=".8" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Border, Mode=FindAncestor}, Path=IsMouseOver}" Value="True">
                                                <Setter Property="Visibility" Value="Visible" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Button.Style>
                            </Button>
                        </Grid>
                    </Border>
                </Grid>
            </DataTemplate>
            <DataTemplate x:Key="gatewayCommand">
                <Grid>
                    <Border
                        Width="186"
                        Margin="4"
                        Padding="8"
                        Background="{StaticResource TundoraBillson}"
                        BorderBrush="{StaticResource Dark}"
                        BorderThickness="2"
                        CornerRadius="2"
                        ToolTip="{Binding Path=.}">
                        <Border.Effect>
                            <DropShadowEffect BlurRadius="4" ShadowDepth="0" />
                        </Border.Effect>
                    </Border>
                    <Border
                        Width="186"
                        Margin="4"
                        Padding="8"
                        Background="Transparent"
                        BorderThickness="2"
                        CornerRadius="2"
                        ToolTip="{Binding Path=.}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="MouseUp">
                                <i:InvokeCommandAction Command="{Binding RelativeSource={RelativeSource AncestorType=ListBox, Mode=FindAncestor}, Path=DataContext.TestCommand}" CommandParameter="{Binding Path=.}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <StackPanel
                                Grid.Row="0"
                                Grid.Column="0"
                                Grid.ColumnSpan="3"
                                Margin="0,0,0,8">
                                <TextBlock
                                    HorizontalAlignment="Stretch"
                                    FontWeight="DemiBold"
                                    Foreground="{StaticResource MaterialDesignDarkForeground}"
                                    Text="{Binding Path=Name, UpdateSourceTrigger=PropertyChanged}"
                                    TextTrimming="CharacterEllipsis" />
                                <TextBlock
                                    HorizontalAlignment="Stretch"
                                    FontSize="9"
                                    FontWeight="DemiBold"
                                    Foreground="{StaticResource MaterialDesignDarkForeground}"
                                    Opacity=".5"
                                    Text="{x:Static p:Resources.Name}"
                                    TextTrimming="CharacterEllipsis" />
                            </StackPanel>
                            <StackPanel
                                Grid.Row="1"
                                Grid.Column="0"
                                Grid.ColumnSpan="2"
                                Orientation="Horizontal">
                                <TextBlock
                                    Margin="0,0,8,0"
                                    HorizontalAlignment="Stretch"
                                    FontSize="10"
                                    FontWeight="DemiBold"
                                    Foreground="{StaticResource MaterialDesignDarkForeground}"
                                    Opacity=".5"
                                    Text="{x:Static p:Resources.Memory_Id}"
                                    TextTrimming="CharacterEllipsis" />
                                <TextBlock
                                    HorizontalAlignment="Stretch"
                                    FontSize="10"
                                    FontWeight="DemiBold"
                                    Foreground="{StaticResource MaterialDesignDarkForeground}"
                                    Text="{Binding Path=MemoryId, UpdateSourceTrigger=PropertyChanged}"
                                    TextTrimming="CharacterEllipsis" />
                            </StackPanel>
                            <Border
                                Grid.Row="0"
                                Grid.RowSpan="4"
                                Grid.Column="0"
                                Grid.ColumnSpan="3"
                                Padding="4,2"
                                HorizontalAlignment="Right"
                                VerticalAlignment="Bottom"
                                Background="{StaticResource Dark}">
                                <Border.Effect>
                                    <DropShadowEffect BlurRadius="4" ShadowDepth="0" />
                                </Border.Effect>
                                <TextBlock Foreground="White" Text="{Binding Type}" />
                            </Border>
                        </Grid>
                    </Border>
                    <Grid>
                        <Grid.Style>
                            <Style TargetType="{x:Type Grid}">
                                <Setter Property="Visibility" Value="Collapsed" />

                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Border, Mode=FindAncestor}, Path=IsMouseOver}" Value="True">
                                        <Setter Property="Visibility" Value="Visible" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Grid.Style>
                        <Border
                            Background="Black"
                            CornerRadius="2"
                            Opacity=".6" />
                        <Button
                            Margin="0,0,8,0"
                            HorizontalAlignment="Right"
                            VerticalAlignment="Center"
                            Command="{Binding RelativeSource={RelativeSource AncestorType=ListBox, Mode=FindAncestor}, Path=DataContext.TestCommand}"
                            CommandParameter="{Binding Path=.}"
                            ToolTip="{x:Static p:Resources.Play}">
                            <materialDesign:PackIcon Kind="Play" />
                        </Button>
                    </Grid>
                </Grid>
            </DataTemplate>
            <DataTemplate x:Key="gatewayCommandWithRemove">
                <Grid>
                    <Border
                        Width="186"
                        Margin="4"
                        Padding="8"
                        Background="{StaticResource TundoraBillson}"
                        BorderBrush="{StaticResource Dark}"
                        BorderThickness="2"
                        CornerRadius="2"
                        ToolTip="{Binding Path=.}">
                        <Border.Effect>
                            <DropShadowEffect BlurRadius="4" ShadowDepth="0" />
                        </Border.Effect>
                    </Border>
                    <Border
                        Width="186"
                        Margin="4"
                        Padding="8"
                        Background="Transparent"
                        BorderThickness="2"
                        CornerRadius="2"
                        ToolTip="{Binding Path=.}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="MouseUp">
                                <i:InvokeCommandAction Command="{Binding RelativeSource={RelativeSource AncestorType=ListBox, Mode=FindAncestor}, Path=DataContext.TestCommand}" CommandParameter="{Binding Path=.}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <StackPanel
                                Grid.Row="0"
                                Grid.Column="0"
                                Grid.ColumnSpan="3"
                                Margin="0,0,0,8">
                                <TextBlock
                                    HorizontalAlignment="Stretch"
                                    FontWeight="DemiBold"
                                    Foreground="{StaticResource MaterialDesignDarkForeground}"
                                    Text="{Binding Path=Name, UpdateSourceTrigger=PropertyChanged}"
                                    TextTrimming="CharacterEllipsis" />
                                <TextBlock
                                    HorizontalAlignment="Stretch"
                                    FontSize="9"
                                    FontWeight="DemiBold"
                                    Foreground="{StaticResource MaterialDesignDarkForeground}"
                                    Opacity=".5"
                                    Text="{x:Static p:Resources.Name}"
                                    TextTrimming="CharacterEllipsis" />
                            </StackPanel>
                            <StackPanel
                                Grid.Row="1"
                                Grid.Column="0"
                                Grid.ColumnSpan="2"
                                Orientation="Horizontal">
                                <TextBlock
                                    Margin="0,0,8,0"
                                    HorizontalAlignment="Stretch"
                                    FontSize="10"
                                    FontWeight="DemiBold"
                                    Foreground="{StaticResource MaterialDesignDarkForeground}"
                                    Opacity=".5"
                                    Text="{x:Static p:Resources.Memory_Id}"
                                    TextTrimming="CharacterEllipsis" />
                                <TextBlock
                                    HorizontalAlignment="Stretch"
                                    FontSize="10"
                                    FontWeight="DemiBold"
                                    Foreground="{StaticResource MaterialDesignDarkForeground}"
                                    Text="{Binding Path=MemoryId, UpdateSourceTrigger=PropertyChanged}"
                                    TextTrimming="CharacterEllipsis" />
                            </StackPanel>
                            <Border
                                Grid.Row="0"
                                Grid.RowSpan="4"
                                Grid.Column="0"
                                Grid.ColumnSpan="3"
                                Padding="4,2"
                                HorizontalAlignment="Right"
                                VerticalAlignment="Bottom"
                                Background="{StaticResource Dark}">
                                <Border.Effect>
                                    <DropShadowEffect BlurRadius="4" ShadowDepth="0" />
                                </Border.Effect>
                                <TextBlock Foreground="White" Text="{Binding Type}" />
                            </Border>
                        </Grid>
                    </Border>
                    <Grid>
                        <Grid.Style>
                            <Style TargetType="{x:Type Grid}">
                                <Setter Property="Visibility" Value="Collapsed" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Border, Mode=FindAncestor}, Path=IsMouseOver}" Value="True">
                                        <Setter Property="Visibility" Value="Visible" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Grid.Style>
                        <Border
                            HorizontalAlignment="Stretch"
                            Background="Black"
                            CornerRadius="2"
                            Opacity=".6" />
                        <StackPanel HorizontalAlignment="Right" Orientation="Horizontal">
                            <Button
                                Margin="0,0,8,0"
                                HorizontalAlignment="Right"
                                VerticalAlignment="Center"
                                Background="Red"
                                BorderBrush="Red"
                                Command="{Binding RelativeSource={RelativeSource AncestorType=ListBox, Mode=FindAncestor}, Path=DataContext.RemoveCommand}"
                                CommandParameter="{Binding Path=.}"
                                ToolTip="{x:Static p:Resources.Remove}">
                                <materialDesign:PackIcon Kind="Delete" />
                            </Button>
                            <Button
                                Margin="0,0,8,0"
                                HorizontalAlignment="Right"
                                VerticalAlignment="Center"
                                Command="{Binding RelativeSource={RelativeSource AncestorType=ListBox, Mode=FindAncestor}, Path=DataContext.TestCommand}"
                                CommandParameter="{Binding Path=.}"
                                ToolTip="{x:Static p:Resources.Play}">
                                <materialDesign:PackIcon Kind="Play" />
                            </Button>
                        </StackPanel>
                    </Grid>
                </Grid>
            </DataTemplate>
            <DataTemplate x:Key="ModulesThenElse" />
            <!--#endregion DataTemplate-->
            <!--#region ListBoxItem Style-->
            <Style x:Key="selectedItem" TargetType="ListBoxItem">
                <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                <Setter Property="Cursor" Value="Hand" />
                <Setter Property="HorizontalAlignment" Value="Left" />
                <Setter Property="HorizontalContentAlignment" Value="Left" />
                <Setter Property="VerticalContentAlignment" Value="Top" />
                <Setter Property="VerticalAlignment" Value="Top" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ListBoxItem">
                            <Border
                                Name="Border"
                                Margin="2"
                                Padding="4"
                                CornerRadius="2"
                                SnapsToDevicePixels="true">
                                <ContentPresenter />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsSelected" Value="true">
                                    <Setter TargetName="Border" Property="Background" Value="{StaticResource PrimaryHueDarkBrush}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="Opacity" Value="0" />
                <Style.Triggers>
                    <Trigger Property="Visibility" Value="Visible">
                        <Trigger.EnterActions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation
                                        Storyboard.TargetProperty="Opacity"
                                        From="0.0"
                                        To="1.0"
                                        Duration="0:0:1" />
                                </Storyboard>
                            </BeginStoryboard>
                        </Trigger.EnterActions>
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style x:Key="selectedScene" TargetType="ListBoxItem">
                <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                <Setter Property="Cursor" Value="Hand" />
                <Setter Property="HorizontalAlignment" Value="Left" />
                <Setter Property="HorizontalContentAlignment" Value="Left" />
                <Setter Property="VerticalContentAlignment" Value="Top" />
                <Setter Property="VerticalAlignment" Value="Top" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ListBoxItem">
                            <Border
                                Name="Border"
                                Margin="2"
                                Padding="4"
                                CornerRadius="2"
                                SnapsToDevicePixels="true">
                                <ContentPresenter />
                            </Border>
                            <!--<ControlTemplate.Triggers>
                                <Trigger Property="IsSelected" Value="true">
                                    <Setter TargetName="Border" Property="Background" Value="#0e753d" />
                                </Trigger>
                            </ControlTemplate.Triggers>-->
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="Opacity" Value="0" />
                <Style.Triggers>
                    <Trigger Property="Visibility" Value="Visible">
                        <Trigger.EnterActions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation
                                        Storyboard.TargetProperty="Opacity"
                                        From="0.0"
                                        To="1.0"
                                        Duration="0:0:1" />
                                </Storyboard>
                            </BeginStoryboard>
                        </Trigger.EnterActions>
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style
                x:Key="LbiColors"
                BasedOn="{StaticResource MaterialDesignListBoxItem}"
                TargetType="{x:Type ListBoxItem}">
                <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                <Style.Triggers>
                    <Trigger Property="IsSelected" Value="True">
                        <Setter Property="FontWeight" Value="Bold" />
                        <Setter Property="Background" Value="{StaticResource PrimaryHueDarkBrush}" />
                    </Trigger>
                </Style.Triggers>
            </Style>
            <!--#endregion ListBoxItem Style-->
            <!--#region TabControl Style-->
            <Style x:Key="TabControlCustom" TargetType="{x:Type TabControl}">
                <Setter Property="VerticalAlignment" Value="Stretch" />
                <Setter Property="VerticalContentAlignment" Value="Stretch" />
                <Setter Property="Background" Value="red" />
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="Margin" Value="0" />
                <Setter Property="Padding" Value="0" />
            </Style>
            <!--#endregion TabControl Style-->
            <!--#region TabItem Style-->
            <Style x:Key="TabItemZwaveConfi" TargetType="{x:Type TabItem}">
                <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Cursor" Value="Hand" />
                <Setter Property="Foreground" Value="{DynamicResource MaterialDesignDarkForeground}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TabItem}">
                            <Grid>
                                <Border
                                    Name="Border"
                                    Margin="0,0,-2,0"
                                    Padding="8,0"
                                    HorizontalAlignment="Stretch"
                                    VerticalAlignment="Stretch"
                                    CornerRadius="4,0,0,4"
                                    FocusVisualStyle="{x:Null}" />
                                <ContentPresenter
                                    x:Name="ContentSite"
                                    Margin="16,8"
                                    HorizontalAlignment="Stretch"
                                    VerticalAlignment="Stretch"
                                    ContentSource="Header"
                                    FocusVisualStyle="{x:Null}"
                                    TextBlock.FontSize="16"
                                    TextBlock.Foreground="White" />
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter TargetName="Border" Property="Background" Value="#55000000" />
                                    <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource DarkCerulean}" />
                                    <Setter TargetName="Border" Property="BorderThickness" Value="1,1,6,1" />
                                </Trigger>
                                <Trigger Property="IsSelected" Value="False">
                                    <Setter TargetName="Border" Property="Background" Value="Transparent" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="TabItemCustom" TargetType="TabItem">
                <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Foreground" Value="White" />
                <Setter Property="VerticalAlignment" Value="Stretch" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="TabItem">
                            <Grid>
                                <Grid.Resources>
                                    <Style TargetType="{x:Type Border}">
                                        <Setter Property="HorizontalAlignment" Value="Left" />
                                        <Setter Property="Background" Value="{DynamicResource TundoraBillson}" />
                                        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                                        <Setter Property="VerticalAlignment" Value="Stretch" />
                                    </Style>
                                </Grid.Resources>
                                <Border
                                    Name="BorderUnSelected"
                                    Padding="12,4"
                                    HorizontalAlignment="Stretch">
                                    <ContentPresenter
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        ContentSource="Header"
                                        FocusVisualStyle="{x:Null}"
                                        TextBlock.FontSize="16"
                                        TextBlock.Foreground="White" />
                                </Border>
                                <Border
                                    Name="BorderIsSelected"
                                    HorizontalAlignment="Stretch"
                                    Visibility="Collapsed">
                                    <Grid>
                                        <Border
                                            Margin="8,4"
                                            Padding="12,4"
                                            HorizontalAlignment="Center"
                                            VerticalAlignment="Center"
                                            Background="{DynamicResource Dark}"
                                            BorderThickness="1"
                                            CornerRadius="4">
                                            <Border.Effect>
                                                <DropShadowEffect
                                                    BlurRadius="4"
                                                    Direction="0"
                                                    ShadowDepth="2"
                                                    Color="Black" />
                                            </Border.Effect>
                                        </Border>
                                        <Border
                                            Margin="0"
                                            Padding="12,4"
                                            HorizontalAlignment="Stretch"
                                            VerticalAlignment="Stretch"
                                            Background="{DynamicResource ElegantBlue}"
                                            CornerRadius="0">
                                            <ContentPresenter
                                                HorizontalAlignment="Center"
                                                VerticalAlignment="Center"
                                                ContentSource="Header"
                                                FocusVisualStyle="{x:Null}"
                                                TextBlock.FontSize="16"
                                                TextBlock.Foreground="White" />
                                        </Border>
                                    </Grid>
                                </Border>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter TargetName="BorderIsSelected" Property="Visibility" Value="Visible" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="TabItemGateway" TargetType="TabItem">
                <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Foreground" Value="White" />
                <Setter Property="VerticalAlignment" Value="Stretch" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="TabItem">
                            <Grid>
                                <Grid.Resources>
                                    <Style TargetType="{x:Type Border}">
                                        <Setter Property="HorizontalAlignment" Value="Left" />
                                        <Setter Property="Background" Value="{DynamicResource TundoraBillson}" />
                                        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                                        <Setter Property="VerticalAlignment" Value="Stretch" />
                                    </Style>
                                </Grid.Resources>
                                <Border
                                    Name="BorderUnSelected"
                                    Padding="12,4"
                                    HorizontalAlignment="Stretch">
                                    <ContentPresenter
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        ContentSource="Header"
                                        FocusVisualStyle="{x:Null}"
                                        TextBlock.FontSize="16"
                                        TextBlock.Foreground="White" />
                                </Border>
                                <Border
                                    Name="BorderIsSelected"
                                    HorizontalAlignment="Stretch"
                                    Visibility="Collapsed">
                                    <Grid>
                                        <Border
                                            Margin="0"
                                            Padding="12,4"
                                            HorizontalAlignment="Stretch"
                                            VerticalAlignment="Stretch"
                                            Background="{DynamicResource AmericanRed}"
                                            BorderBrush="#55000000"
                                            BorderThickness="2,2,2,0"
                                            CornerRadius="4,4,0,0">
                                            <ContentPresenter
                                                HorizontalAlignment="Center"
                                                VerticalAlignment="Center"
                                                ContentSource="Header"
                                                FocusVisualStyle="{x:Null}"
                                                TextBlock.FontSize="16"
                                                TextBlock.Foreground="White" />
                                        </Border>
                                    </Grid>
                                </Border>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter TargetName="BorderIsSelected" Property="Visibility" Value="Visible" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="TabItemsScheduleCustom" TargetType="TabItem">
                <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Foreground" Value="White" />
                <Setter Property="VerticalAlignment" Value="Stretch" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="TabItem">
                            <Grid>
                                <Grid.Resources>
                                    <Style TargetType="{x:Type Border}">
                                        <Setter Property="HorizontalAlignment" Value="Left" />
                                        <Setter Property="Background" Value="{DynamicResource TundoraBillson}" />
                                        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                                        <Setter Property="VerticalAlignment" Value="Stretch" />
                                    </Style>
                                </Grid.Resources>
                                <Border
                                    Name="BorderUnSelected"
                                    Width="146"
                                    Padding="12,4"
                                    HorizontalAlignment="Stretch">
                                    <ContentPresenter
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        ContentSource="Header"
                                        FocusVisualStyle="{x:Null}"
                                        TextBlock.FontSize="16"
                                        TextBlock.Foreground="White" />
                                </Border>
                                <Border
                                    Name="BorderIsSelected"
                                    HorizontalAlignment="Stretch"
                                    Visibility="Collapsed">
                                    <Grid>
                                        <Border
                                            Margin="8,4"
                                            Padding="12,4"
                                            HorizontalAlignment="Center"
                                            VerticalAlignment="Center"
                                            Background="{DynamicResource Dark}"
                                            BorderThickness="1"
                                            CornerRadius="4">
                                            <Border.Effect>
                                                <DropShadowEffect
                                                    BlurRadius="4"
                                                    Direction="0"
                                                    ShadowDepth="2"
                                                    Color="Black" />
                                            </Border.Effect>
                                        </Border>
                                        <Border
                                            Margin="8,4"
                                            Padding="12,4"
                                            HorizontalAlignment="Stretch"
                                            VerticalAlignment="Stretch"
                                            Background="{DynamicResource Dark}"
                                            BorderBrush="Black"
                                            BorderThickness="1"
                                            CornerRadius="4">
                                            <ContentPresenter
                                                HorizontalAlignment="Center"
                                                VerticalAlignment="Center"
                                                ContentSource="Header"
                                                FocusVisualStyle="{x:Null}"
                                                TextBlock.FontSize="16"
                                                TextBlock.Foreground="White" />
                                        </Border>
                                    </Grid>
                                </Border>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter TargetName="BorderIsSelected" Property="Visibility" Value="Visible" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <!--#endregion TabItem Style-->
            <!--#region Separator Style-->
            <Style
                x:Key="VerticalSeparatorDark"
                BasedOn="{StaticResource MaterialDesignDarkSeparator}"
                TargetType="{x:Type Separator}">
                <Setter Property="LayoutTransform">
                    <Setter.Value>
                        <TransformGroup>
                            <TransformGroup.Children>
                                <TransformCollection>
                                    <RotateTransform Angle="90" />
                                </TransformCollection>
                            </TransformGroup.Children>
                        </TransformGroup>
                    </Setter.Value>
                </Setter>
            </Style>
            <!--#endregion Separator Style-->
            <!--#region Material Design Transitioner-->
            <Style TargetType="{x:Type materialDesign:Transitioner}">
                <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                <Setter Property="Focusable" Value="False" />
            </Style>
            <!--#endregion Material Design Transitioner-->
            <!--#region AdornerDecorator Style-->
            <Style TargetType="{x:Type AdornerDecorator}">
                <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                <Setter Property="Focusable" Value="False" />
            </Style>
            <!--#endregion AdornerDecorator Style-->
            <!--#region Grid Style-->
            <Style TargetType="{x:Type Grid}">
                <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                <Setter Property="Focusable" Value="False" />
            </Style>
            <!--#endregion Grid Style-->
            <!--#region ComboBoxItem Style-->
            <Style TargetType="{x:Type ComboBoxItem}">
                <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                <Setter Property="Focusable" Value="False" />
            </Style>
            <!--#endregion ComboBoxItem Style-->
            <!--#region ControlTemplate-->
            <ControlTemplate x:Key="validationTemplate">
                <Canvas>
                    <materialDesign:PackIcon
                        Canvas.Left="26"
                        Canvas.Bottom="-32"
                        Foreground="Red"
                        Kind="No" />
                    <TextBlock
                        Canvas.Left="48"
                        Canvas.Top="8"
                        Width="140"
                        Foreground="{StaticResource PrimaryHueDarkForegroundBrush}"
                        Text="The number can not be less than 0 or greater 255"
                        TextWrapping="Wrap" />
                    <AdornedElementPlaceholder />
                </Canvas>
            </ControlTemplate>
            <!--#endregion ControlTemplate-->
            <!--#region Border Style-->
            <Style x:Key="BorderMenu" TargetType="{x:Type Border}">
                <Setter Property="Margin" Value="0" />
                <Setter Property="Height" Value="48" />
                <Setter Property="Effect">
                    <Setter.Value>
                        <DropShadowEffect BlurRadius="6" ShadowDepth="1" />
                    </Setter.Value>
                </Setter>
                <Setter Property="Background" Value="Black" />
            </Style>
            <!--#endregion-->
            <!--#region Button Style-->
            <Style
                x:Key="PlayButton"
                BasedOn="{StaticResource MaterialDesignRaisedAccentButton}"
                TargetType="{x:Type Button}">
                <Setter Property="Background" Value="{StaticResource PastelGreen}" />
                <Setter Property="BorderBrush" Value="{StaticResource PastelGreen}" />
            </Style>
            <Style
                x:Key="StopButton"
                BasedOn="{StaticResource MaterialDesignRaisedAccentButton}"
                TargetType="{x:Type Button}">
                <Setter Property="Background" Value="{StaticResource AmericanRed}" />
                <Setter Property="BorderBrush" Value="{StaticResource AmericanRed}" />
            </Style>
            <Style
                x:Key="SaveButton"
                BasedOn="{StaticResource MaterialDesignRaisedAccentButton}"
                TargetType="{x:Type Button}">
                <Setter Property="Background" Value="{StaticResource Mantis}" />
                <Setter Property="BorderBrush" Value="{StaticResource Mantis}" />
            </Style>
            <Style
                x:Key="DeleteButton"
                BasedOn="{StaticResource MaterialDesignRaisedAccentButton}"
                TargetType="{x:Type Button}">
                <Setter Property="Background" Value="{StaticResource FireEngineRed}" />
                <Setter Property="BorderBrush" Value="{StaticResource FireEngineRed}" />
            </Style>
            <Style
                x:Key="RenameButton"
                BasedOn="{StaticResource MaterialDesignRaisedAccentButton}"
                TargetType="{x:Type Button}">
                <Setter Property="Background" Value="{StaticResource Byzantium}" />
                <Setter Property="BorderBrush" Value="{StaticResource Byzantium}" />
            </Style>
            <Style
                x:Key="NewButton"
                BasedOn="{StaticResource MaterialDesignRaisedAccentButton}"
                TargetType="{x:Type Button}">
                <Setter Property="Background" Value="{StaticResource DarkCerulean}" />
                <Setter Property="BorderBrush" Value="{StaticResource DarkCerulean}" />
            </Style>
            <Style
                x:Key="LearnButton"
                BasedOn="{StaticResource MaterialDesignRaisedAccentButton}"
                TargetType="{x:Type Button}">
                <Setter Property="Background" Value="{StaticResource MaximumGreen}" />
                <Setter Property="BorderBrush" Value="{StaticResource MaximumGreen}" />
            </Style>
            <Style
                x:Key="FilterButton"
                BasedOn="{StaticResource MaterialDesignRaisedAccentButton}"
                TargetType="{x:Type Button}">
                <Setter Property="Background" Value="{StaticResource Umber}" />
                <Setter Property="BorderBrush" Value="{StaticResource Umber}" />
            </Style>
            <Style
                x:Key="UpdateButton"
                BasedOn="{StaticResource MaterialDesignRaisedAccentButton}"
                TargetType="{x:Type Button}">
                <Setter Property="Background" Value="{StaticResource Regalia}" />
                <Setter Property="BorderBrush" Value="{StaticResource Regalia}" />
            </Style>
            <Style
                x:Key="GetFlatButton"
                BasedOn="{StaticResource MaterialDesignOutlinedButton}"
                TargetType="{x:Type Button}">
                <Setter Property="Foreground" Value="{StaticResource VividGamboge}" />
                <Setter Property="BorderBrush" Value="{StaticResource VividGamboge}" />
            </Style>
            <Style
                x:Key="GetAllFlatButton"
                BasedOn="{StaticResource MaterialDesignOutlinedButton}"
                TargetType="{x:Type Button}">
                <Setter Property="Foreground" Value="{StaticResource VividGamboge}" />
                <Setter Property="BorderBrush" Value="{StaticResource VividGamboge}" />
            </Style>
            <Style
                x:Key="SetFlatButton"
                BasedOn="{StaticResource MaterialDesignOutlinedButton}"
                TargetType="{x:Type Button}">
                <Setter Property="Foreground" Value="{StaticResource VividGamboge}" />
                <Setter Property="BorderBrush" Value="{StaticResource VividGamboge}" />
            </Style>
            <Style
                x:Key="DownloadFlatButton"
                BasedOn="{StaticResource MaterialDesignOutlinedButton}"
                TargetType="{x:Type Button}">
                <Setter Property="Foreground" Value="{StaticResource VividGamboge}" />
                <Setter Property="BorderBrush" Value="{StaticResource VividGamboge}" />
            </Style>
            <Style
                x:Key="DownloadButton"
                BasedOn="{StaticResource MaterialDesignRaisedButton}"
                TargetType="{x:Type Button}">
                <Setter Property="Foreground" Value="White" />
                <Setter Property="Background" Value="{StaticResource DarkCerulean}" />
                <Setter Property="BorderBrush" Value="{StaticResource DarkCerulean}" />
            </Style>
            <!--#endregion Button Style-->
            <!--#region  Control-specific resources-->
            <Color x:Key="HeaderTopColor">#FFC5CBF9</Color>
            <Color x:Key="DatagridCurrentCellBorderColor">Black</Color>
            <Color x:Key="SliderTrackDarkColor">#FFC5CBF9</Color>
            <Color x:Key="NavButtonFrameColor">#FF3843C4</Color>
            <LinearGradientBrush x:Key="MenuPopupBrush" StartPoint="0.5,0" EndPoint="0.5,1">
                <GradientStop Offset="0" Color="{DynamicResource ControlLightColor}" />
                <GradientStop Offset="0.5" Color="{DynamicResource ControlMediumColor}" />
                <GradientStop Offset="1" Color="{DynamicResource ControlLightColor}" />
            </LinearGradientBrush>
            <LinearGradientBrush x:Key="ProgressBarIndicatorAnimatedFill" StartPoint="0,0" EndPoint="1,0">
                <LinearGradientBrush.GradientStops>
                    <GradientStopCollection>
                        <GradientStop Offset="0" Color="#000000FF" />
                        <GradientStop Offset="0.4" Color="#600000FF" />
                        <GradientStop Offset="0.6" Color="#600000FF" />
                        <GradientStop Offset="1" Color="#000000FF" />
                    </GradientStopCollection>
                </LinearGradientBrush.GradientStops>
            </LinearGradientBrush>
            <Style x:Key="TextBoxIsReadOnly" TargetType="TextBox">
                <Setter Property="IsReadOnly" Value="True" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TextBox}">
                            <Border
                                x:Name="border"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                SnapsToDevicePixels="True">
                                <ScrollViewer
                                    x:Name="PART_ContentHost"
                                    Focusable="false"
                                    HorizontalScrollBarVisibility="Hidden"
                                    VerticalScrollBarVisibility="Hidden" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter TargetName="border" Property="BorderBrush" Value="Transparent" />
                                </Trigger>
                                <Trigger Property="IsFocused" Value="true">
                                    <Setter TargetName="border" Property="BorderBrush" Value="Transparent" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style
                x:Key="Excel"
                BasedOn="{StaticResource MaterialDesignRaisedButton}"
                TargetType="Button">
                <Setter Property="Background" Value="#0e753d" />
                <Setter Property="Margin" Value="4,10" />
                <Setter Property="BorderBrush" Value="Transparent" />
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="ToolTip" Value="Export to Excel" />
            </Style>
            <Style x:Key="CustomWindow" TargetType="{x:Type Window}">
                <Setter Property="WindowStyle" Value="None" />
                <Setter Property="AllowsTransparency" Value="True" />
                <Setter Property="MinWidth" Value="100" />
                <Setter Property="MinHeight" Value="46" />
                <!--  CaptionHeight + ResizeBorderThickness * 2  -->
                <Setter Property="Background" Value="Yellow" />
                <Setter Property="Foreground" Value="DarkRed" />
                <!--<Setter Property="Template" Value="{StaticResource WindowTemplate}" />-->
            </Style>
            <Style
                x:Key="ListBoxItemStyle"
                BasedOn="{StaticResource MaterialDesignListBoxItem}"
                TargetType="{x:Type ListBoxItem}">
                <Setter Property="HorizontalAlignment" Value="Stretch" />
                <Setter Property="Padding" Value="5" />
            </Style>
            <Style x:Key="CardIfThen" TargetType="{x:Type materialDesign:Card}">
                <Setter Property="Width" Value="220" />
                <Setter Property="Height" Value="180" />
                <Setter Property="Padding" Value="10,4,10,10" />
            </Style>
            <Style x:Key="TransparentStyle" TargetType="{x:Type Button}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Background="Transparent">
                                <ContentPresenter />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <!--#endregion  Control-specific resources-->
            <ResourceDictionary.MergedDictionaries>
                <!--  primary color  -->
                <ResourceDictionary>
                    <!--  include your primary palette  -->
                    <ResourceDictionary.MergedDictionaries>
                        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Light.xaml" />
                        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Defaults.xaml" />
                        <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Primary/MaterialDesignColor.Blue.xaml" />
                        <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Accent/MaterialDesignColor.Red.xaml" />
                        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/materialdesigntheme.listbox.xaml" />
                        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/materialdesigntheme.textblock.xaml" />
                        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Button.xaml" />
                        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Card.xaml" />
                        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.CheckBox.xaml" />
                        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Flipper.xaml" />
                        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Popupbox.xaml" />
                    </ResourceDictionary.MergedDictionaries>
                    <!--
                        include three hues from the primary palette (and the associated forecolours).
                        Do not rename, keep in sequence; light to dark.
                    -->
                    <SolidColorBrush x:Key="Dark" Color="#303030" />
                    <SolidColorBrush x:Key="TundoraBillson" Color="#424242" />
                    <SolidColorBrush x:Key="PrimaryHueLightBrush" Color="{StaticResource Primary100}" />
                    <SolidColorBrush x:Key="PrimaryHueLightForegroundBrush" Color="{StaticResource Primary100Foreground}" />
                    <SolidColorBrush x:Key="PrimaryHueMidBrush" Color="{StaticResource Primary500}" />
                    <SolidColorBrush x:Key="PrimaryHueMidForegroundBrush" Color="{StaticResource Primary500Foreground}" />
                    <SolidColorBrush x:Key="PrimaryHueDarkBrush" Color="{StaticResource Primary700}" />
                    <SolidColorBrush x:Key="PrimaryHueDarkForegroundBrush" Color="{StaticResource Primary700Foreground}" />
                </ResourceDictionary>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Application.Resources>
</Application>